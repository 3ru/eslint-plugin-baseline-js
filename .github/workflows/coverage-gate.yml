name: Coverage Gate

on:
  pull_request:
    branches: [ "**" ]
  workflow_dispatch: {}

permissions:
  contents: read
  issues: write

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
      # Mention handle for alerts when coverage drops below thresholds
      MENTION: "@3ru"
      THRESHOLD_SYNTAX: "100"
      THRESHOLD_API: "98"
      THRESHOLD_JSBI: "99"
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 22.12.0
          cache: 'pnpm'

      - name: Install
        run: pnpm i --frozen-lockfile

      - name: Generate features/descriptors
        run: |
          pnpm gen:features
          pnpm gen:features:api
          pnpm gen:features:jsbi
          pnpm gen:descriptors

      - name: Generate coverage report
        run: pnpm gen:coverage

      - name: Evaluate coverage thresholds
        id: eval
        run: |
          node scripts/coverage/coverage-gate.mjs \
            --mention "${{ env.MENTION }}" \
            --threshold-syntax "${{ env.THRESHOLD_SYNTAX }}" \
            --threshold-api "${{ env.THRESHOLD_API }}" \
            --threshold-jsbi "${{ env.THRESHOLD_JSBI }}" \
            --out coverage-gate-output.json \
            --github-output "$GITHUB_OUTPUT"

      - name: Find existing coverage comment
        if: ${{ github.event_name == 'pull_request' }}
        id: find_coverage_comment
        uses: peter-evans/find-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- baseline-coverage-gate -->'

      - name: Comment on PR (sticky)
        if: ${{ steps.eval.outputs.shouldComment == 'true' && github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@v5
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_coverage_comment.outputs.comment-id }}
          body: ${{ steps.eval.outputs.commentBody }}
          edit-mode: replace

      - name: Summary
        run: |
          echo "syntax=${{ steps.eval.outputs.covSyntax }} api=${{ steps.eval.outputs.covApi }} jsbi=${{ steps.eval.outputs.covJsbi }}"
