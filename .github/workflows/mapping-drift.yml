name: Mapping Drift

on:
  workflow_dispatch: {}
  pull_request:
    paths:
      - 'src/baseline/**'
      - 'scripts/**'

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Setup Node (LTS)
        uses: actions/setup-node@v5
        with:
          node-version: 22.12.0

      - name: Install
        run: pnpm i --frozen-lockfile

      - name: Build features (ensure fresh)
        run: pnpm gen:features

      - name: Check mapping vs features
        run: node scripts/qa/check-mapping.mjs --out drift-report.json

      - name: Upload report artifact
        uses: actions/upload-artifact@v5
        with:
          name: mapping-drift-report
          path: drift-report.json

      - name: Create issues for missing features
        if: github.event_name != 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ISSUE_CREATOR_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const report = JSON.parse(fs.readFileSync(path.join(process.cwd(), 'drift-report.json'), 'utf8'));
            const missing = report.missing || [];
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const { data: issues } = await github.rest.issues.listForRepo({ owner, repo, state: 'open', per_page: 100 });
            const labels = ['help wanted'];

            for (const m of missing) {
              const title = `[mapping] Add Baseline delegate for ${m.id}: ${m.name}`;
              const exists = issues.find(i => i.title === title);
              if (exists) continue;

              const body = `Missing mapping for web-features ID:\n\n- id: \`${m.id}\`\n- name: \`${m.name}\`\n\nAdd a delegate entry to \`src/baseline/mapping/syntax.ts\` that links this feature to an ESLint rule.\n\nAcceptance criteria\n- mapping updated\n- tests added (or updated)`;

              await github.rest.issues.create({ owner, repo, title, body, labels });
            }
