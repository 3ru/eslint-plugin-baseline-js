/**
 * @fileoverview AUTOGENERATED — Do not edit directly.
 * Source: web-features compat_features → descriptor DSL (strict-safe subset).
 */

import type { Descriptor } from "../types";

// @ts-expect-error TS2590: union type too complex for literal; cast applied below
const descriptors = [
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "hash",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "host",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "hostname",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "href",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "hreflang",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "origin",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "password",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "pathname",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "port",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "protocol",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "rel",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "relList",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "search",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "target",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "text",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "toString",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "type",
  },
  {
    featureId: "a",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "username",
  },
  {
    featureId: "abortable-fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "signal",
  },
  {
    featureId: "abortable-fetch",
    kind: "instanceMember",
    iface: "fetch",
    prop: "init_signal_parameter",
  },
  {
    featureId: "aborting",
    kind: "newIdent",
    name: "AbortController",
  },
  {
    featureId: "aborting",
    kind: "instanceMember",
    iface: "AbortController",
    prop: "abort",
  },
  {
    featureId: "aborting",
    kind: "instanceMember",
    iface: "AbortController",
    prop: "signal",
  },
  {
    featureId: "aborting",
    kind: "instanceMember",
    iface: "AbortSignal",
    prop: "abort_event",
  },
  {
    featureId: "aborting",
    kind: "callStatic",
    base: "AbortSignal",
    prop: "abort",
  },
  {
    featureId: "aborting",
    kind: "instanceMember",
    iface: "AbortSignal",
    prop: "aborted",
  },
  {
    featureId: "aborting",
    kind: "instanceMember",
    iface: "AbortSignal",
    prop: "reason",
  },
  {
    featureId: "aborting",
    kind: "instanceMember",
    iface: "AbortSignal",
    prop: "throwIfAborted",
  },
  {
    featureId: "aborting",
    kind: "callStatic",
    base: "AbortSignal",
    prop: "timeout",
  },
  {
    featureId: "abortsignal-any",
    kind: "callStatic",
    base: "AbortSignal",
    prop: "any",
  },
  {
    featureId: "accelerometer",
    kind: "newIdent",
    name: "Accelerometer",
  },
  {
    featureId: "accelerometer",
    kind: "instanceMember",
    iface: "Accelerometer",
    prop: "x",
  },
  {
    featureId: "accelerometer",
    kind: "instanceMember",
    iface: "Accelerometer",
    prop: "y",
  },
  {
    featureId: "accelerometer",
    kind: "instanceMember",
    iface: "Accelerometer",
    prop: "z",
  },
  {
    featureId: "accelerometer",
    kind: "newIdent",
    name: "GravitySensor",
  },
  {
    featureId: "accelerometer",
    kind: "newIdent",
    name: "LinearAccelerationSensor",
  },
  {
    featureId: "accelerometer",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_accelerometer",
  },
  {
    featureId: "accesskey",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "accessKey",
  },
  {
    featureId: "accesskey",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "accessKeyLabel",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransition",
    prop: "types",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "@@iterator",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "add",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "clear",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "delete",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "entries",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "forEach",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "has",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "keys",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "size",
  },
  {
    featureId: "active-view-transition",
    kind: "instanceMember",
    iface: "ViewTransitionTypeSet",
    prop: "values",
  },
  {
    featureId: "alerts",
    kind: "member",
    base: "window",
    prop: "alert",
  },
  {
    featureId: "alerts",
    kind: "member",
    base: "window",
    prop: "confirm",
  },
  {
    featureId: "alerts",
    kind: "member",
    base: "window",
    prop: "prompt",
  },
  {
    featureId: "ambient-light",
    kind: "newIdent",
    name: "AmbientLightSensor",
  },
  {
    featureId: "ambient-light",
    kind: "instanceMember",
    iface: "AmbientLightSensor",
    prop: "illuminance",
  },
  {
    featureId: "ambient-light",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_ambient-light-sensor",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "align-self",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "alignSelf",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "block-size",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "blockSize",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "bottom",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "height",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "inline-size",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "inlineSize",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "inset",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "inset-block",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "inset-block-end",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "inset-block-start",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "inset-inline",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "inset-inline-end",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "inset-inline-start",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "insetBlock",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "insetBlockEnd",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "insetBlockStart",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "insetInline",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "insetInlineEnd",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "insetInlineStart",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "justify-self",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "justifySelf",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "left",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-block",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-block-end",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-block-start",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-bottom",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-inline",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-inline-end",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-inline-start",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-left",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-right",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "margin-top",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginBlock",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginBlockEnd",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginBlockStart",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginBottom",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginInline",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginInlineEnd",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginInlineStart",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginLeft",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginRight",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "marginTop",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "max-block-size",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "max-height",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "max-inline-size",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "max-width",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "maxBlockSize",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "maxHeight",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "maxInlineSize",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "maxWidth",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "min-block-size",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "min-height",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "min-inline-size",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "min-width",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "minBlockSize",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "minHeight",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "minInlineSize",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "minWidth",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "place-self",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "placeSelf",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "position-anchor",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "position-area",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "positionAnchor",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "positionArea",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "right",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "top",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryDescriptors",
    prop: "width",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryRule",
    prop: "name",
  },
  {
    featureId: "anchor-positioning",
    kind: "instanceMember",
    iface: "CSSPositionTryRule",
    prop: "style",
  },
  {
    featureId: "angle-instanced-arrays",
    kind: "instanceMember",
    iface: "ANGLE_instanced_arrays",
    prop: "drawArraysInstancedANGLE",
  },
  {
    featureId: "angle-instanced-arrays",
    kind: "instanceMember",
    iface: "ANGLE_instanced_arrays",
    prop: "drawElementsInstancedANGLE",
  },
  {
    featureId: "angle-instanced-arrays",
    kind: "instanceMember",
    iface: "ANGLE_instanced_arrays",
    prop: "vertexAttribDivisorANGLE",
  },
  {
    featureId: "animations-css",
    kind: "newIdent",
    name: "AnimationEvent",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "AnimationEvent",
    prop: "animationName",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "AnimationEvent",
    prop: "elapsedTime",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "AnimationEvent",
    prop: "pseudoElement",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "CSSAnimation",
    prop: "animationName",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "CSSKeyframeRule",
    prop: "keyText",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "CSSKeyframeRule",
    prop: "style",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "CSSKeyframesRule",
    prop: "appendRule",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "CSSKeyframesRule",
    prop: "cssRules",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "CSSKeyframesRule",
    prop: "deleteRule",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "CSSKeyframesRule",
    prop: "findRule",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "CSSKeyframesRule",
    prop: "length",
  },
  {
    featureId: "animations-css",
    kind: "instanceMember",
    iface: "CSSKeyframesRule",
    prop: "name",
  },
  {
    featureId: "app-file-handlers",
    kind: "instanceMember",
    iface: "LaunchParams",
    prop: "files",
  },
  {
    featureId: "app-launch-handler",
    kind: "instanceMember",
    iface: "LaunchParams",
    prop: "targetURL",
  },
  {
    featureId: "app-launch-handler",
    kind: "instanceMember",
    iface: "LaunchQueue",
    prop: "setConsumer",
  },
  {
    featureId: "app-launch-handler",
    kind: "member",
    base: "window",
    prop: "launchQueue",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaActiveDescendantElement",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaAtomic",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaAutoComplete",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaBrailleLabel",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaBrailleRoleDescription",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaBusy",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaChecked",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaColCount",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaColIndex",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaColIndexText",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaColSpan",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaControlsElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaCurrent",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaDescribedByElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaDescription",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaDetailsElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaDisabled",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaErrorMessageElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaExpanded",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaFlowToElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaHasPopup",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaHidden",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaInvalid",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaKeyShortcuts",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaLabel",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaLabelledByElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaLevel",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaLive",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaModal",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaMultiLine",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaMultiSelectable",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaOrientation",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaOwnsElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaPlaceholder",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaPosInSet",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaPressed",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaReadOnly",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaRelevant",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaRequired",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaRoleDescription",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaRowCount",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaRowIndex",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaRowIndexText",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaRowSpan",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaSelected",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaSetSize",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaSort",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaValueMax",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaValueMin",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaValueNow",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "ariaValueText",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "Element",
    prop: "role",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaActiveDescendantElement",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaAtomic",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaAutoComplete",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaBrailleLabel",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaBrailleRoleDescription",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaBusy",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaChecked",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaColCount",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaColIndex",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaColIndexText",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaColSpan",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaControlsElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaCurrent",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaDescribedByElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaDescription",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaDetailsElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaDisabled",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaErrorMessageElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaExpanded",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaFlowToElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaHasPopup",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaHidden",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaInvalid",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaKeyShortcuts",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaLabel",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaLabelledByElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaLevel",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaLive",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaModal",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaMultiLine",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaMultiSelectable",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaOrientation",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaOwnsElements",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaPlaceholder",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaPosInSet",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaPressed",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaReadOnly",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaRequired",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaRoleDescription",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaRowCount",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaRowIndex",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaRowIndexText",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaRowSpan",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaSelected",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaSetSize",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaSort",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaValueMax",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaValueMin",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaValueNow",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "ariaValueText",
  },
  {
    featureId: "aria-attribute-reflection",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "role",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "Clipboard",
    prop: "read",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "Clipboard",
    prop: "readText",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "Clipboard",
    prop: "type_image-png",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "Clipboard",
    prop: "type_text-html",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "Clipboard",
    prop: "type_text-plain",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "Clipboard",
    prop: "write",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "Clipboard",
    prop: "writeText",
  },
  {
    featureId: "async-clipboard",
    kind: "newIdent",
    name: "ClipboardItem",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "ClipboardItem",
    prop: "getType",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "ClipboardItem",
    prop: "presentationStyle",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "ClipboardItem",
    prop: "types",
  },
  {
    featureId: "async-clipboard",
    kind: "member",
    base: "navigator",
    prop: "clipboard",
  },
  {
    featureId: "async-clipboard",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_clipboard-write",
  },
  {
    featureId: "async-iterable-streams",
    kind: "instanceMember",
    iface: "ReadableStream",
    prop: "@@asyncIterator",
  },
  {
    featureId: "async-iterable-streams",
    kind: "instanceMember",
    iface: "ReadableStream",
    prop: "values",
  },
  {
    featureId: "attribution-reporting",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "attributionSrc",
  },
  {
    featureId: "attribution-reporting",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "attributionSrc",
  },
  {
    featureId: "attribution-reporting",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "attributionSrc",
  },
  {
    featureId: "attribution-reporting",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "attributionSrc",
  },
  {
    featureId: "attribution-reporting",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "setAttributionReporting",
  },
  {
    featureId: "attribution-reporting",
    kind: "instanceMember",
    iface: "fetch",
    prop: "init_attributionReporting_parameter",
  },
  {
    featureId: "audio",
    kind: "instanceMember",
    iface: "HTMLAudioElement",
    prop: "Audio",
  },
  {
    featureId: "audio-session",
    kind: "instanceMember",
    iface: "AudioSession",
    prop: "type",
  },
  {
    featureId: "audio-session",
    kind: "member",
    base: "navigator",
    prop: "audioSession",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrack",
    prop: "enabled",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrack",
    prop: "id",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrack",
    prop: "kind",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrack",
    prop: "label",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrack",
    prop: "language",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrackList",
    prop: "addtrack_event",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrackList",
    prop: "change_event",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrackList",
    prop: "getTrackById",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrackList",
    prop: "length",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "AudioTrackList",
    prop: "removetrack_event",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "audioTracks",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "videoTracks",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrack",
    prop: "id",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrack",
    prop: "kind",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrack",
    prop: "label",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrack",
    prop: "language",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrack",
    prop: "selected",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrackList",
    prop: "addtrack_event",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrackList",
    prop: "change_event",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrackList",
    prop: "getTrackById",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrackList",
    prop: "length",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrackList",
    prop: "removetrack_event",
  },
  {
    featureId: "audio-video-tracks",
    kind: "instanceMember",
    iface: "VideoTrackList",
    prop: "selectedIndex",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "AudioWorkletGlobalScope",
    prop: "currentFrame",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "AudioWorkletGlobalScope",
    prop: "currentTime",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "AudioWorkletGlobalScope",
    prop: "port",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "AudioWorkletGlobalScope",
    prop: "registerProcessor",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "AudioWorkletGlobalScope",
    prop: "sampleRate",
  },
  {
    featureId: "audio-worklet",
    kind: "newIdent",
    name: "AudioWorkletNode",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "AudioWorkletNode",
    prop: "parameters",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "AudioWorkletNode",
    prop: "port",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "AudioWorkletNode",
    prop: "processorerror_event",
  },
  {
    featureId: "audio-worklet",
    kind: "newIdent",
    name: "AudioWorkletProcessor",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "AudioWorkletProcessor",
    prop: "port",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "audioWorklet",
  },
  {
    featureId: "audio-worklet",
    kind: "instanceMember",
    iface: "Worklet",
    prop: "addModule",
  },
  {
    featureId: "autocapitalize",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "autocapitalize",
  },
  {
    featureId: "autocorrect",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "autocorrect",
  },
  {
    featureId: "autofocus",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "autofocus",
  },
  {
    featureId: "autofocus",
    kind: "instanceMember",
    iface: "MathMLElement",
    prop: "autofocus",
  },
  {
    featureId: "autofocus",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "autofocus",
  },
  {
    featureId: "autonomous-custom-elements",
    kind: "instanceMember",
    iface: "CustomElementRegistry",
    prop: "define",
  },
  {
    featureId: "autonomous-custom-elements",
    kind: "instanceMember",
    iface: "CustomElementRegistry",
    prop: "get",
  },
  {
    featureId: "autonomous-custom-elements",
    kind: "instanceMember",
    iface: "CustomElementRegistry",
    prop: "getName",
  },
  {
    featureId: "autonomous-custom-elements",
    kind: "instanceMember",
    iface: "CustomElementRegistry",
    prop: "upgrade",
  },
  {
    featureId: "autonomous-custom-elements",
    kind: "instanceMember",
    iface: "CustomElementRegistry",
    prop: "whenDefined",
  },
  {
    featureId: "autonomous-custom-elements",
    kind: "member",
    base: "window",
    prop: "customElements",
  },
  {
    featureId: "background-fetch",
    kind: "newIdent",
    name: "BackgroundFetchEvent",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchEvent",
    prop: "registration",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchManager",
    prop: "fetch",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchManager",
    prop: "get",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchManager",
    prop: "getIds",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRecord",
    prop: "request",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRecord",
    prop: "responseReady",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "abort",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "downloadTotal",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "downloaded",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "failureReason",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "id",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "match",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "matchAll",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "progress_event",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "recordsAvailable",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "result",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "uploadTotal",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchRegistration",
    prop: "uploaded",
  },
  {
    featureId: "background-fetch",
    kind: "newIdent",
    name: "BackgroundFetchUpdateUIEvent",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "BackgroundFetchUpdateUIEvent",
    prop: "updateUI",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "backgroundfetchabort_event",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "backgroundfetchclick_event",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "backgroundfetchfail_event",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "backgroundfetchsuccess_event",
  },
  {
    featureId: "background-fetch",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "backgroundFetch",
  },
  {
    featureId: "background-sync",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_background-sync",
  },
  {
    featureId: "background-sync",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "sync_event",
  },
  {
    featureId: "background-sync",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "sync",
  },
  {
    featureId: "background-sync",
    kind: "newIdent",
    name: "SyncEvent",
  },
  {
    featureId: "background-sync",
    kind: "instanceMember",
    iface: "SyncEvent",
    prop: "lastChance",
  },
  {
    featureId: "background-sync",
    kind: "instanceMember",
    iface: "SyncEvent",
    prop: "tag",
  },
  {
    featureId: "background-sync",
    kind: "instanceMember",
    iface: "SyncManager",
    prop: "getTags",
  },
  {
    featureId: "background-sync",
    kind: "instanceMember",
    iface: "SyncManager",
    prop: "register",
  },
  {
    featureId: "background-sync",
    kind: "instanceMember",
    iface: "SyncManager",
    prop: "worker_support",
  },
  {
    featureId: "badging",
    kind: "member",
    base: "navigator",
    prop: "clearAppBadge",
  },
  {
    featureId: "badging",
    kind: "member",
    base: "navigator",
    prop: "setAppBadge",
  },
  {
    featureId: "barcode",
    kind: "newIdent",
    name: "BarcodeDetector",
  },
  {
    featureId: "barcode",
    kind: "instanceMember",
    iface: "BarcodeDetector",
    prop: "detect",
  },
  {
    featureId: "barcode",
    kind: "callStatic",
    base: "BarcodeDetector",
    prop: "getSupportedFormats",
  },
  {
    featureId: "barprop",
    kind: "instanceMember",
    iface: "BarProp",
    prop: "visible",
  },
  {
    featureId: "barprop",
    kind: "member",
    base: "window",
    prop: "locationbar",
  },
  {
    featureId: "barprop",
    kind: "member",
    base: "window",
    prop: "menubar",
  },
  {
    featureId: "barprop",
    kind: "member",
    base: "window",
    prop: "personalbar",
  },
  {
    featureId: "barprop",
    kind: "member",
    base: "window",
    prop: "scrollbars",
  },
  {
    featureId: "barprop",
    kind: "member",
    base: "window",
    prop: "statusbar",
  },
  {
    featureId: "barprop",
    kind: "member",
    base: "window",
    prop: "toolbar",
  },
  {
    featureId: "base",
    kind: "instanceMember",
    iface: "HTMLBaseElement",
    prop: "href",
  },
  {
    featureId: "base",
    kind: "instanceMember",
    iface: "HTMLBaseElement",
    prop: "target",
  },
  {
    featureId: "base64encodedecode",
    kind: "instanceMember",
    iface: "atob",
    prop: "worker_support",
  },
  {
    featureId: "base64encodedecode",
    kind: "instanceMember",
    iface: "btoa",
    prop: "worker_support",
  },
  {
    featureId: "battery",
    kind: "instanceMember",
    iface: "BatteryManager",
    prop: "charging",
  },
  {
    featureId: "battery",
    kind: "instanceMember",
    iface: "BatteryManager",
    prop: "chargingTime",
  },
  {
    featureId: "battery",
    kind: "instanceMember",
    iface: "BatteryManager",
    prop: "chargingchange_event",
  },
  {
    featureId: "battery",
    kind: "instanceMember",
    iface: "BatteryManager",
    prop: "chargingtimechange_event",
  },
  {
    featureId: "battery",
    kind: "instanceMember",
    iface: "BatteryManager",
    prop: "dischargingTime",
  },
  {
    featureId: "battery",
    kind: "instanceMember",
    iface: "BatteryManager",
    prop: "dischargingtimechange_event",
  },
  {
    featureId: "battery",
    kind: "instanceMember",
    iface: "BatteryManager",
    prop: "level",
  },
  {
    featureId: "battery",
    kind: "instanceMember",
    iface: "BatteryManager",
    prop: "levelchange_event",
  },
  {
    featureId: "battery",
    kind: "instanceMember",
    iface: "BatteryManager",
    prop: "secure_context_required",
  },
  {
    featureId: "battery",
    kind: "member",
    base: "navigator",
    prop: "getBattery",
  },
  {
    featureId: "beacons",
    kind: "member",
    base: "navigator",
    prop: "sendBeacon",
  },
  {
    featureId: "beforeinstallprompt",
    kind: "newIdent",
    name: "BeforeInstallPromptEvent",
  },
  {
    featureId: "beforeinstallprompt",
    kind: "instanceMember",
    iface: "BeforeInstallPromptEvent",
    prop: "platforms",
  },
  {
    featureId: "beforeinstallprompt",
    kind: "instanceMember",
    iface: "BeforeInstallPromptEvent",
    prop: "prompt",
  },
  {
    featureId: "beforeinstallprompt",
    kind: "instanceMember",
    iface: "BeforeInstallPromptEvent",
    prop: "userChoice",
  },
  {
    featureId: "beforeinstallprompt",
    kind: "member",
    base: "window",
    prop: "appinstalled_event",
  },
  {
    featureId: "beforeinstallprompt",
    kind: "member",
    base: "window",
    prop: "beforeinstallprompt_event",
  },
  {
    featureId: "beforeunload",
    kind: "instanceMember",
    iface: "BeforeUnloadEvent",
    prop: "user_interaction",
  },
  {
    featureId: "beforeunload",
    kind: "member",
    base: "window",
    prop: "beforeunload_event",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "NotRestoredReasonDetails",
    prop: "reason",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "NotRestoredReasonDetails",
    prop: "toJSON",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "NotRestoredReasons",
    prop: "children",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "NotRestoredReasons",
    prop: "id",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "NotRestoredReasons",
    prop: "name",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "NotRestoredReasons",
    prop: "reasons",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "NotRestoredReasons",
    prop: "src",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "NotRestoredReasons",
    prop: "toJSON",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "NotRestoredReasons",
    prop: "url",
  },
  {
    featureId: "bfcache-blocking-reasons",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "notRestoredReasons",
  },
  {
    featureId: "blocking-render",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "blocking",
  },
  {
    featureId: "blocking-render",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "blocking",
  },
  {
    featureId: "blocking-render",
    kind: "instanceMember",
    iface: "HTMLStyleElement",
    prop: "blocking",
  },
  {
    featureId: "broadcast-channel",
    kind: "newIdent",
    name: "BroadcastChannel",
  },
  {
    featureId: "broadcast-channel",
    kind: "instanceMember",
    iface: "BroadcastChannel",
    prop: "close",
  },
  {
    featureId: "broadcast-channel",
    kind: "instanceMember",
    iface: "BroadcastChannel",
    prop: "message_event",
  },
  {
    featureId: "broadcast-channel",
    kind: "instanceMember",
    iface: "BroadcastChannel",
    prop: "messageerror_event",
  },
  {
    featureId: "broadcast-channel",
    kind: "instanceMember",
    iface: "BroadcastChannel",
    prop: "name",
  },
  {
    featureId: "broadcast-channel",
    kind: "instanceMember",
    iface: "BroadcastChannel",
    prop: "postMessage",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "disabled",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "form",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "formAction",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "formEnctype",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "formMethod",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "formNoValidate",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "formTarget",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "labels",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "name",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "type",
  },
  {
    featureId: "button",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "value",
  },
  {
    featureId: "canvas",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "getContext",
  },
  {
    featureId: "canvas",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "height",
  },
  {
    featureId: "canvas",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "toBlob",
  },
  {
    featureId: "canvas",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "toDataURL",
  },
  {
    featureId: "canvas",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "width",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasGradient",
    prop: "addColorStop",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasPattern",
    prop: "setTransform",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "arc",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "arcTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "beginPath",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "bezierCurveTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "canvas",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "clearRect",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "clip",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "closePath",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "createImageData",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "createLinearGradient",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "createPattern",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "createRadialGradient",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "direction",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "drawFocusIfNeeded",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "drawImage",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "ellipse",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "fill",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "fillRect",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "fillStyle",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "fillText",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "filter",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "font",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "fontKerning",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "fontStretch",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "fontVariantCaps",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "getContextAttributes",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "getImageData",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "getLineDash",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "getTransform",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "globalAlpha",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "globalCompositeOperation",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "imageSmoothingEnabled",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "imageSmoothingQuality",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "isPointInPath",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "isPointInStroke",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "lang",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "letterSpacing",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "lineCap",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "lineDashOffset",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "lineJoin",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "lineTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "lineWidth",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "measureText",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "miterLimit",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "moveTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "putImageData",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "quadraticCurveTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "rect",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "resetTransform",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "restore",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "rotate",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "save",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "scale",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "setLineDash",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "setTransform",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "shadowBlur",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "shadowColor",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "shadowOffsetX",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "shadowOffsetY",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "stroke",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "strokeRect",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "strokeStyle",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "strokeText",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "textAlign",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "textBaseline",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "textRendering",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "transform",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "translate",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "wordSpacing",
  },
  {
    featureId: "canvas-2d",
    kind: "newIdent",
    name: "ImageData",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "ImageData",
    prop: "colorSpace",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "ImageData",
    prop: "data",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "ImageData",
    prop: "height",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "ImageData",
    prop: "width",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "ImageData",
    prop: "worker_support",
  },
  {
    featureId: "canvas-2d",
    kind: "newIdent",
    name: "Path2D",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "addPath",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "arc",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "arcTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "bezierCurveTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "closePath",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "ellipse",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "lineTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "moveTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "quadraticCurveTo",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "rect",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "Path2D",
    prop: "roundRect",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "actualBoundingBoxAscent",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "actualBoundingBoxDescent",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "actualBoundingBoxLeft",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "actualBoundingBoxRight",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "alphabeticBaseline",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "emHeightAscent",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "emHeightDescent",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "fontBoundingBoxAscent",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "fontBoundingBoxDescent",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "hangingBaseline",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "ideographicBaseline",
  },
  {
    featureId: "canvas-2d",
    kind: "instanceMember",
    iface: "TextMetrics",
    prop: "width",
  },
  {
    featureId: "canvas-context-lost",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "isContextLost",
  },
  {
    featureId: "canvas-context-lost",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "contextlost_event",
  },
  {
    featureId: "canvas-context-lost",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "contextrestored_event",
  },
  {
    featureId: "canvas-context-lost",
    kind: "instanceMember",
    iface: "OffscreenCanvas",
    prop: "contextlost_event",
  },
  {
    featureId: "canvas-context-lost",
    kind: "instanceMember",
    iface: "OffscreenCanvas",
    prop: "contextrestored_event",
  },
  {
    featureId: "canvas-context-lost",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "isContextLost",
  },
  {
    featureId: "canvas-createconicgradient",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "createConicGradient",
  },
  {
    featureId: "canvas-createconicgradient",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "createConicGradient",
  },
  {
    featureId: "canvas-reset",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "reset",
  },
  {
    featureId: "canvas-reset",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "reset",
  },
  {
    featureId: "canvas-roundrect",
    kind: "instanceMember",
    iface: "CanvasRenderingContext2D",
    prop: "roundRect",
  },
  {
    featureId: "canvas-roundrect",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "roundRect",
  },
  {
    featureId: "capture-stream-audio-video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "captureStream",
  },
  {
    featureId: "capture-stream-canvas",
    kind: "instanceMember",
    iface: "CanvasCaptureMediaStreamTrack",
    prop: "canvas",
  },
  {
    featureId: "capture-stream-canvas",
    kind: "instanceMember",
    iface: "CanvasCaptureMediaStreamTrack",
    prop: "requestFrame",
  },
  {
    featureId: "capture-stream-canvas",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "captureStream",
  },
  {
    featureId: "cascade-layers",
    kind: "instanceMember",
    iface: "CSSImportRule",
    prop: "layerName",
  },
  {
    featureId: "cascade-layers",
    kind: "instanceMember",
    iface: "CSSLayerBlockRule",
    prop: "name",
  },
  {
    featureId: "cascade-layers",
    kind: "instanceMember",
    iface: "CSSLayerStatementRule",
    prop: "nameList",
  },
  {
    featureId: "change-event",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "change_event",
  },
  {
    featureId: "channel-messaging",
    kind: "newIdent",
    name: "MessageChannel",
  },
  {
    featureId: "channel-messaging",
    kind: "instanceMember",
    iface: "MessageChannel",
    prop: "port1",
  },
  {
    featureId: "channel-messaging",
    kind: "instanceMember",
    iface: "MessageChannel",
    prop: "port2",
  },
  {
    featureId: "channel-messaging",
    kind: "instanceMember",
    iface: "MessageEvent",
    prop: "ports",
  },
  {
    featureId: "channel-messaging",
    kind: "instanceMember",
    iface: "MessagePort",
    prop: "close",
  },
  {
    featureId: "channel-messaging",
    kind: "instanceMember",
    iface: "MessagePort",
    prop: "message_event",
  },
  {
    featureId: "channel-messaging",
    kind: "instanceMember",
    iface: "MessagePort",
    prop: "postMessage",
  },
  {
    featureId: "channel-messaging",
    kind: "instanceMember",
    iface: "MessagePort",
    prop: "start",
  },
  {
    featureId: "channel-messaging",
    kind: "instanceMember",
    iface: "MessagePort",
    prop: "worker_support",
  },
  {
    featureId: "check-visibility",
    kind: "instanceMember",
    iface: "Element",
    prop: "checkVisibility",
  },
  {
    featureId: "clip-path",
    kind: "instanceMember",
    iface: "SVGClipPathElement",
    prop: "clipPathUnits",
  },
  {
    featureId: "clip-path",
    kind: "instanceMember",
    iface: "SVGClipPathElement",
    prop: "transform",
  },
  {
    featureId: "clipboard-custom-format",
    kind: "instanceMember",
    iface: "ClipboardItem",
    prop: "type_web",
  },
  {
    featureId: "clipboard-events",
    kind: "newIdent",
    name: "ClipboardEvent",
  },
  {
    featureId: "clipboard-events",
    kind: "instanceMember",
    iface: "ClipboardEvent",
    prop: "clipboardData",
  },
  {
    featureId: "clipboard-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "copy_event",
  },
  {
    featureId: "clipboard-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "cut_event",
  },
  {
    featureId: "clipboard-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "paste_event",
  },
  {
    featureId: "clipboard-supports",
    kind: "callStatic",
    base: "ClipboardItem",
    prop: "supports",
  },
  {
    featureId: "clipboard-svg",
    kind: "instanceMember",
    iface: "ClipboardItem",
    prop: "type_image_svg_xml",
  },
  {
    featureId: "closewatcher",
    kind: "newIdent",
    name: "CloseWatcher",
  },
  {
    featureId: "closewatcher",
    kind: "instanceMember",
    iface: "CloseWatcher",
    prop: "cancel_event",
  },
  {
    featureId: "closewatcher",
    kind: "instanceMember",
    iface: "CloseWatcher",
    prop: "close",
  },
  {
    featureId: "closewatcher",
    kind: "instanceMember",
    iface: "CloseWatcher",
    prop: "close_event",
  },
  {
    featureId: "closewatcher",
    kind: "instanceMember",
    iface: "CloseWatcher",
    prop: "destroy",
  },
  {
    featureId: "closewatcher",
    kind: "instanceMember",
    iface: "CloseWatcher",
    prop: "requestClose",
  },
  {
    featureId: "composed-ranges",
    kind: "instanceMember",
    iface: "Selection",
    prop: "getComposedRanges",
  },
  {
    featureId: "composition-events",
    kind: "newIdent",
    name: "CompositionEvent",
  },
  {
    featureId: "composition-events",
    kind: "instanceMember",
    iface: "CompositionEvent",
    prop: "data",
  },
  {
    featureId: "composition-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "compositionend_event",
  },
  {
    featureId: "composition-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "compositionstart_event",
  },
  {
    featureId: "composition-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "compositionupdate_event",
  },
  {
    featureId: "compression-streams",
    kind: "newIdent",
    name: "CompressionStream",
  },
  {
    featureId: "compression-streams",
    kind: "instanceMember",
    iface: "CompressionStream",
    prop: "readable",
  },
  {
    featureId: "compression-streams",
    kind: "instanceMember",
    iface: "CompressionStream",
    prop: "writable",
  },
  {
    featureId: "compression-streams",
    kind: "newIdent",
    name: "DecompressionStream",
  },
  {
    featureId: "compression-streams",
    kind: "instanceMember",
    iface: "DecompressionStream",
    prop: "readable",
  },
  {
    featureId: "compression-streams",
    kind: "instanceMember",
    iface: "DecompressionStream",
    prop: "writable",
  },
  {
    featureId: "compute-pressure",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_compute-pressure",
  },
  {
    featureId: "compute-pressure",
    kind: "newIdent",
    name: "PressureObserver",
  },
  {
    featureId: "compute-pressure",
    kind: "instanceMember",
    iface: "PressureObserver",
    prop: "disconnect",
  },
  {
    featureId: "compute-pressure",
    kind: "callStatic",
    base: "PressureObserver",
    prop: "knownSources",
  },
  {
    featureId: "compute-pressure",
    kind: "instanceMember",
    iface: "PressureObserver",
    prop: "observe",
  },
  {
    featureId: "compute-pressure",
    kind: "instanceMember",
    iface: "PressureObserver",
    prop: "takeRecords",
  },
  {
    featureId: "compute-pressure",
    kind: "instanceMember",
    iface: "PressureObserver",
    prop: "unobserve",
  },
  {
    featureId: "compute-pressure",
    kind: "instanceMember",
    iface: "PressureRecord",
    prop: "source",
  },
  {
    featureId: "compute-pressure",
    kind: "instanceMember",
    iface: "PressureRecord",
    prop: "state",
  },
  {
    featureId: "compute-pressure",
    kind: "instanceMember",
    iface: "PressureRecord",
    prop: "time",
  },
  {
    featureId: "compute-pressure",
    kind: "instanceMember",
    iface: "PressureRecord",
    prop: "toJSON",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "assert",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "clear",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "countReset",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "count",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "debug",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "dir",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "dirxml",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "error",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "groupCollapsed",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "groupEnd",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "group",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "info",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "log",
  },
  {
    featureId: "console",
    kind: "instanceMember",
    iface: "console",
    prop: "substitution_strings",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "table",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "timeEnd",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "timeLog",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "time",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "trace",
  },
  {
    featureId: "console",
    kind: "callStatic",
    base: "console",
    prop: "warn",
  },
  {
    featureId: "console",
    kind: "instanceMember",
    iface: "console",
    prop: "worker_support",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "checkValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "reportValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "setCustomValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "validationMessage",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "validity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "willValidate",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "checkValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "reportValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "setCustomValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "validationMessage",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "validity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "willValidate",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "checkValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "reportValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "checkValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "reportValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "setCustomValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "validationMessage",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "validity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "willValidate",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "checkValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "reportValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "setCustomValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "validationMessage",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "validity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "willValidate",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "checkValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "reportValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "setCustomValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "validationMessage",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "validity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "willValidate",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "checkValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "reportValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "setCustomValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "validationMessage",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "validity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "willValidate",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "checkValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "reportValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "setCustomValidity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "validationMessage",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "validity",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "willValidate",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "badInput",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "customError",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "patternMismatch",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "rangeOverflow",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "rangeUnderflow",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "stepMismatch",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "tooLong",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "tooShort",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "typeMismatch",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "valid",
  },
  {
    featureId: "constraint-validation",
    kind: "instanceMember",
    iface: "ValidityState",
    prop: "valueMissing",
  },
  {
    featureId: "constructed-stylesheets",
    kind: "newIdent",
    name: "CSSStyleSheet",
  },
  {
    featureId: "constructed-stylesheets",
    kind: "instanceMember",
    iface: "CSSStyleSheet",
    prop: "replace",
  },
  {
    featureId: "constructed-stylesheets",
    kind: "instanceMember",
    iface: "CSSStyleSheet",
    prop: "replaceSync",
  },
  {
    featureId: "constructed-stylesheets",
    kind: "instanceMember",
    iface: "Document",
    prop: "adoptedStyleSheets",
  },
  {
    featureId: "constructed-stylesheets",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "adoptedStyleSheets",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "addressLine",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "city",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "country",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "dependentLocality",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "organization",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "phone",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "postalCode",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "recipient",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "region",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "sortingCode",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactAddress",
    prop: "toJSON",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactsManager",
    prop: "getProperties",
  },
  {
    featureId: "contact-picker",
    kind: "instanceMember",
    iface: "ContactsManager",
    prop: "select",
  },
  {
    featureId: "contact-picker",
    kind: "member",
    base: "navigator",
    prop: "contacts",
  },
  {
    featureId: "container-queries",
    kind: "instanceMember",
    iface: "CSSContainerRule",
    prop: "containerName",
  },
  {
    featureId: "container-queries",
    kind: "instanceMember",
    iface: "CSSContainerRule",
    prop: "containerQuery",
  },
  {
    featureId: "content-index",
    kind: "instanceMember",
    iface: "ContentIndex",
    prop: "add",
  },
  {
    featureId: "content-index",
    kind: "instanceMember",
    iface: "ContentIndex",
    prop: "delete",
  },
  {
    featureId: "content-index",
    kind: "instanceMember",
    iface: "ContentIndex",
    prop: "getAll",
  },
  {
    featureId: "content-index",
    kind: "newIdent",
    name: "ContentIndexEvent",
  },
  {
    featureId: "content-index",
    kind: "instanceMember",
    iface: "ContentIndexEvent",
    prop: "id",
  },
  {
    featureId: "content-index",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "contentdelete_event",
  },
  {
    featureId: "content-index",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "index",
  },
  {
    featureId: "content-visibility",
    kind: "newIdent",
    name: "ContentVisibilityAutoStateChangeEvent",
  },
  {
    featureId: "content-visibility",
    kind: "instanceMember",
    iface: "ContentVisibilityAutoStateChangeEvent",
    prop: "skipped",
  },
  {
    featureId: "content-visibility",
    kind: "instanceMember",
    iface: "Element",
    prop: "contentvisibilityautostatechange_event",
  },
  {
    featureId: "contenteditable",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "contentEditable",
  },
  {
    featureId: "contenteditable",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "isContentEditable",
  },
  {
    featureId: "controls-list",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "controlsList",
  },
  {
    featureId: "cookie-enabled",
    kind: "member",
    base: "navigator",
    prop: "cookieEnabled",
  },
  {
    featureId: "cookie-store",
    kind: "newIdent",
    name: "CookieChangeEvent",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieChangeEvent",
    prop: "changed",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieChangeEvent",
    prop: "deleted",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieStore",
    prop: "change_event",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieStore",
    prop: "delete",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieStore",
    prop: "get",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieStore",
    prop: "getAll",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieStore",
    prop: "set",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieStoreManager",
    prop: "getSubscriptions",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieStoreManager",
    prop: "subscribe",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "CookieStoreManager",
    prop: "unsubscribe",
  },
  {
    featureId: "cookie-store",
    kind: "newIdent",
    name: "ExtendableCookieChangeEvent",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "ExtendableCookieChangeEvent",
    prop: "changed",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "ExtendableCookieChangeEvent",
    prop: "deleted",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "cookieStore",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "cookiechange_event",
  },
  {
    featureId: "cookie-store",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "cookies",
  },
  {
    featureId: "cookie-store",
    kind: "member",
    base: "window",
    prop: "cookieStore",
  },
  {
    featureId: "cookies",
    kind: "instanceMember",
    iface: "Document",
    prop: "cookie",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "additiveSymbols",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "fallback",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "name",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "negative",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "pad",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "prefix",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "range",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "speakAs",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "suffix",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "symbols",
  },
  {
    featureId: "counter-style",
    kind: "instanceMember",
    iface: "CSSCounterStyleRule",
    prop: "system",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "ImageBitmap",
    prop: "close",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "ImageBitmap",
    prop: "height",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "ImageBitmap",
    prop: "width",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "createImageBitmap",
    prop: "options_colorSpaceConversion_parameter",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "createImageBitmap",
    prop: "options_imageOrientation_parameter",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "createImageBitmap",
    prop: "options_premultiplyAlpha_parameter",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "createImageBitmap",
    prop: "options_resizeHeight_parameter",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "createImageBitmap",
    prop: "options_resizeQuality_parameter",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "createImageBitmap",
    prop: "options_resizeWidth_parameter",
  },
  {
    featureId: "createimagebitmap",
    kind: "instanceMember",
    iface: "createImageBitmap",
    prop: "svgimageelement_as_source_image",
  },
  {
    featureId: "credential-management",
    kind: "instanceMember",
    iface: "Credential",
    prop: "id",
  },
  {
    featureId: "credential-management",
    kind: "callStatic",
    base: "Credential",
    prop: "isConditionalMediationAvailable",
  },
  {
    featureId: "credential-management",
    kind: "instanceMember",
    iface: "Credential",
    prop: "type",
  },
  {
    featureId: "credential-management",
    kind: "instanceMember",
    iface: "CredentialsContainer",
    prop: "create",
  },
  {
    featureId: "credential-management",
    kind: "instanceMember",
    iface: "CredentialsContainer",
    prop: "get",
  },
  {
    featureId: "credential-management",
    kind: "instanceMember",
    iface: "CredentialsContainer",
    prop: "preventSilentAccess",
  },
  {
    featureId: "credential-management",
    kind: "instanceMember",
    iface: "CredentialsContainer",
    prop: "store",
  },
  {
    featureId: "credential-management",
    kind: "member",
    base: "navigator",
    prop: "credentials",
  },
  {
    featureId: "cross-document-view-transitions",
    kind: "instanceMember",
    iface: "CSSViewTransitionRule",
    prop: "navigation",
  },
  {
    featureId: "cross-document-view-transitions",
    kind: "instanceMember",
    iface: "CSSViewTransitionRule",
    prop: "types",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "Document",
    prop: "securitypolicyviolation_event",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "Element",
    prop: "securitypolicyviolation_event",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "nonce",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "csp",
  },
  {
    featureId: "csp",
    kind: "newIdent",
    name: "SecurityPolicyViolationEvent",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "blockedURI",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "columnNumber",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "disposition",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "documentURI",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "effectiveDirective",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "lineNumber",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "originalPolicy",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "referrer",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "sample",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "sourceFile",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "statusCode",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "violatedDirective",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "SecurityPolicyViolationEvent",
    prop: "worker_support",
  },
  {
    featureId: "csp",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "securitypolicyviolation_event",
  },
  {
    featureId: "css-escape",
    kind: "callStatic",
    base: "CSS",
    prop: "escape",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSConditionRule",
    prop: "conditionText",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSGroupingRule",
    prop: "cssRules",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSGroupingRule",
    prop: "deleteRule",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSGroupingRule",
    prop: "insertRule",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSMarginRule",
    prop: "name",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSMarginRule",
    prop: "style",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSMediaRule",
    prop: "media",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "margin",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "margin-bottom",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "margin-left",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "margin-right",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "margin-top",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "marginBottom",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "marginLeft",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "marginRight",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "marginTop",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "page-orientation",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "pageOrientation",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageDescriptors",
    prop: "size",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageRule",
    prop: "selectorText",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPageRule",
    prop: "style",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPseudoElement",
    prop: "element",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSPseudoElement",
    prop: "type",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSRule",
    prop: "cssText",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSRule",
    prop: "parentRule",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSRule",
    prop: "parentStyleSheet",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSRuleList",
    prop: "item",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSRuleList",
    prop: "length",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "@@iterator",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "cssFloat",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "cssText",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "getPropertyPriority",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "getPropertyValue",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "item",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "length",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "parentRule",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "removeProperty",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleDeclaration",
    prop: "setProperty",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleRule",
    prop: "selectorText",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleRule",
    prop: "style",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleSheet",
    prop: "cssRules",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleSheet",
    prop: "deleteRule",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleSheet",
    prop: "insertRule",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "CSSStyleSheet",
    prop: "ownerRule",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "Document",
    prop: "styleSheets",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "style",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "sheet",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "HTMLStyleElement",
    prop: "sheet",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "MediaList",
    prop: "appendMedium",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "MediaList",
    prop: "deleteMedium",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "MediaList",
    prop: "item",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "MediaList",
    prop: "length",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "MediaList",
    prop: "mediaText",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "MediaList",
    prop: "toString",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "ProcessingInstruction",
    prop: "sheet",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "styleSheets",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "StyleSheet",
    prop: "disabled",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "StyleSheet",
    prop: "href",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "StyleSheet",
    prop: "media",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "StyleSheet",
    prop: "ownerNode",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "StyleSheet",
    prop: "parentStyleSheet",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "StyleSheet",
    prop: "title",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "StyleSheet",
    prop: "type",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "StyleSheetList",
    prop: "item",
  },
  {
    featureId: "css-object-model",
    kind: "instanceMember",
    iface: "StyleSheetList",
    prop: "length",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSPrimitiveValue",
    prop: "getCounterValue",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSPrimitiveValue",
    prop: "getFloatValue",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSPrimitiveValue",
    prop: "getRGBColorValue",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSPrimitiveValue",
    prop: "getRectValue",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSPrimitiveValue",
    prop: "getStringValue",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSPrimitiveValue",
    prop: "primitiveType",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSPrimitiveValue",
    prop: "setFloatValue",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSPrimitiveValue",
    prop: "setStringValue",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSValue",
    prop: "cssText",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSValue",
    prop: "cssValueType",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSValueList",
    prop: "item",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "CSSValueList",
    prop: "length",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "Counter",
    prop: "identifier",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "Counter",
    prop: "listStyle",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "Counter",
    prop: "separator",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "Rect",
    prop: "bottom",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "Rect",
    prop: "left",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "Rect",
    prop: "right",
  },
  {
    featureId: "css-object-model-discouraged",
    kind: "instanceMember",
    iface: "Rect",
    prop: "top",
  },
  {
    featureId: "css-supports",
    kind: "callStatic",
    base: "CSS",
    prop: "supports",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSKeywordValue",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSKeywordValue",
    prop: "value",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSMathClamp",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathClamp",
    prop: "lower",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathClamp",
    prop: "upper",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathClamp",
    prop: "value",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSMathInvert",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathInvert",
    prop: "value",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSMathMax",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathMax",
    prop: "values",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSMathMin",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathMin",
    prop: "values",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSMathNegate",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathNegate",
    prop: "value",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSMathProduct",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathProduct",
    prop: "values",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSMathSum",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathSum",
    prop: "values",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMathValue",
    prop: "operator",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSMatrixComponent",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSMatrixComponent",
    prop: "matrix",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericArray",
    prop: "@@iterator",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericArray",
    prop: "entries",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericArray",
    prop: "forEach",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericArray",
    prop: "keys",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericArray",
    prop: "length",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericArray",
    prop: "values",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "add",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "div",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "equals",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "max",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "min",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "mul",
  },
  {
    featureId: "css-typed-om",
    kind: "callStatic",
    base: "CSSNumericValue",
    prop: "parse",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "sub",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "to",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "toSum",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSNumericValue",
    prop: "type",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSPerspective",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSPerspective",
    prop: "length",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSRotate",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSRotate",
    prop: "angle",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSRotate",
    prop: "x",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSRotate",
    prop: "y",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSRotate",
    prop: "z",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSScale",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSScale",
    prop: "x",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSScale",
    prop: "y",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSScale",
    prop: "z",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSSkew",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSSkew",
    prop: "ax",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSSkew",
    prop: "ay",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSSkewX",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSSkewX",
    prop: "ax",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSSkewY",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSSkewY",
    prop: "ay",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSStyleRule",
    prop: "styleMap",
  },
  {
    featureId: "css-typed-om",
    kind: "callStatic",
    base: "CSSStyleValue",
    prop: "parseAll",
  },
  {
    featureId: "css-typed-om",
    kind: "callStatic",
    base: "CSSStyleValue",
    prop: "parse",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSStyleValue",
    prop: "toString",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformComponent",
    prop: "is2D",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformComponent",
    prop: "toMatrix",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformComponent",
    prop: "toString",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformValue",
    prop: "@@iterator",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSTransformValue",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformValue",
    prop: "entries",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformValue",
    prop: "forEach",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformValue",
    prop: "is2D",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformValue",
    prop: "keys",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformValue",
    prop: "length",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformValue",
    prop: "toMatrix",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTransformValue",
    prop: "values",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSTranslate",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTranslate",
    prop: "x",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTranslate",
    prop: "y",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSTranslate",
    prop: "z",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSUnitValue",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSUnitValue",
    prop: "unit",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSUnitValue",
    prop: "value",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSUnparsedValue",
    prop: "@@iterator",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSUnparsedValue",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSUnparsedValue",
    prop: "entries",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSUnparsedValue",
    prop: "forEach",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSUnparsedValue",
    prop: "keys",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSUnparsedValue",
    prop: "length",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSUnparsedValue",
    prop: "values",
  },
  {
    featureId: "css-typed-om",
    kind: "newIdent",
    name: "CSSVariableReferenceValue",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSVariableReferenceValue",
    prop: "fallback",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "CSSVariableReferenceValue",
    prop: "variable",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "Element",
    prop: "computedStyleMap",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "attributeStyleMap",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMap",
    prop: "append",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMap",
    prop: "clear",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMap",
    prop: "delete",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMap",
    prop: "set",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMapReadOnly",
    prop: "@@iterator",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMapReadOnly",
    prop: "entries",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMapReadOnly",
    prop: "forEach",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMapReadOnly",
    prop: "get",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMapReadOnly",
    prop: "getAll",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMapReadOnly",
    prop: "has",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMapReadOnly",
    prop: "keys",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMapReadOnly",
    prop: "size",
  },
  {
    featureId: "css-typed-om",
    kind: "instanceMember",
    iface: "StylePropertyMapReadOnly",
    prop: "values",
  },
  {
    featureId: "customized-built-in-elements",
    kind: "instanceMember",
    iface: "CustomElementRegistry",
    prop: "builtin_element_support",
  },
  {
    featureId: "data",
    kind: "instanceMember",
    iface: "HTMLDataElement",
    prop: "value",
  },
  {
    featureId: "datalist",
    kind: "instanceMember",
    iface: "HTMLDataListElement",
    prop: "options",
  },
  {
    featureId: "dataset",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "dataset",
  },
  {
    featureId: "dataset",
    kind: "instanceMember",
    iface: "MathMLElement",
    prop: "dataset",
  },
  {
    featureId: "dataset",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "dataset",
  },
  {
    featureId: "declarative-shadow-dom",
    kind: "instanceMember",
    iface: "HTMLTemplateElement",
    prop: "shadowRootClonable",
  },
  {
    featureId: "declarative-shadow-dom",
    kind: "instanceMember",
    iface: "HTMLTemplateElement",
    prop: "shadowRootDelegatesFocus",
  },
  {
    featureId: "declarative-shadow-dom",
    kind: "instanceMember",
    iface: "HTMLTemplateElement",
    prop: "shadowRootMode",
  },
  {
    featureId: "declarative-shadow-dom",
    kind: "instanceMember",
    iface: "HTMLTemplateElement",
    prop: "shadowRootSerializable",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "DedicatedWorkerGlobalScope",
    prop: "close",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "DedicatedWorkerGlobalScope",
    prop: "name",
  },
  {
    featureId: "dedicated-workers",
    kind: "newIdent",
    name: "Worker",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "Worker",
    prop: "error_event",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "Worker",
    prop: "terminate",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "Worker",
    prop: "worker_support",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "error_event",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "importScripts",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "location",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "navigator",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "rejectionhandled_event",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "self",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "unhandledrejection_event",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "hash",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "host",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "hostname",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "href",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "origin",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "pathname",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "port",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "protocol",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "search",
  },
  {
    featureId: "dedicated-workers",
    kind: "instanceMember",
    iface: "WorkerLocation",
    prop: "toString",
  },
  {
    featureId: "del",
    kind: "instanceMember",
    iface: "HTMLModElement",
    prop: "cite",
  },
  {
    featureId: "del",
    kind: "instanceMember",
    iface: "HTMLModElement",
    prop: "dateTime",
  },
  {
    featureId: "details",
    kind: "instanceMember",
    iface: "HTMLDetailsElement",
    prop: "open",
  },
  {
    featureId: "details",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "toggle_event",
  },
  {
    featureId: "details-name",
    kind: "instanceMember",
    iface: "HTMLDetailsElement",
    prop: "name",
  },
  {
    featureId: "device-memory",
    kind: "member",
    base: "navigator",
    prop: "deviceMemory",
  },
  {
    featureId: "device-memory",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "deviceMemory",
  },
  {
    featureId: "device-orientation-events",
    kind: "newIdent",
    name: "DeviceMotionEvent",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEvent",
    prop: "acceleration",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEvent",
    prop: "accelerationIncludingGravity",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEvent",
    prop: "interval",
  },
  {
    featureId: "device-orientation-events",
    kind: "callStatic",
    base: "DeviceMotionEvent",
    prop: "requestPermission",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEvent",
    prop: "rotationRate",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEventAcceleration",
    prop: "x",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEventAcceleration",
    prop: "y",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEventAcceleration",
    prop: "z",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEventRotationRate",
    prop: "alpha",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEventRotationRate",
    prop: "beta",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceMotionEventRotationRate",
    prop: "gamma",
  },
  {
    featureId: "device-orientation-events",
    kind: "newIdent",
    name: "DeviceOrientationEvent",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceOrientationEvent",
    prop: "absolute",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceOrientationEvent",
    prop: "alpha",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceOrientationEvent",
    prop: "beta",
  },
  {
    featureId: "device-orientation-events",
    kind: "instanceMember",
    iface: "DeviceOrientationEvent",
    prop: "gamma",
  },
  {
    featureId: "device-orientation-events",
    kind: "callStatic",
    base: "DeviceOrientationEvent",
    prop: "requestPermission",
  },
  {
    featureId: "device-orientation-events",
    kind: "member",
    base: "window",
    prop: "devicemotion_event",
  },
  {
    featureId: "device-orientation-events",
    kind: "member",
    base: "window",
    prop: "deviceorientation_event",
  },
  {
    featureId: "device-orientation-events",
    kind: "member",
    base: "window",
    prop: "deviceorientationabsolute_event",
  },
  {
    featureId: "device-posture",
    kind: "instanceMember",
    iface: "DevicePosture",
    prop: "change_event",
  },
  {
    featureId: "device-posture",
    kind: "instanceMember",
    iface: "DevicePosture",
    prop: "type",
  },
  {
    featureId: "device-posture",
    kind: "member",
    base: "navigator",
    prop: "devicePosture",
  },
  {
    featureId: "devicepixelratio",
    kind: "member",
    base: "window",
    prop: "devicePixelRatio",
  },
  {
    featureId: "dialog",
    kind: "instanceMember",
    iface: "HTMLDialogElement",
    prop: "cancel_event",
  },
  {
    featureId: "dialog",
    kind: "instanceMember",
    iface: "HTMLDialogElement",
    prop: "close",
  },
  {
    featureId: "dialog",
    kind: "instanceMember",
    iface: "HTMLDialogElement",
    prop: "close_event",
  },
  {
    featureId: "dialog",
    kind: "instanceMember",
    iface: "HTMLDialogElement",
    prop: "open",
  },
  {
    featureId: "dialog",
    kind: "instanceMember",
    iface: "HTMLDialogElement",
    prop: "returnValue",
  },
  {
    featureId: "dialog",
    kind: "instanceMember",
    iface: "HTMLDialogElement",
    prop: "show",
  },
  {
    featureId: "dialog",
    kind: "instanceMember",
    iface: "HTMLDialogElement",
    prop: "showModal",
  },
  {
    featureId: "dialog-closedby",
    kind: "instanceMember",
    iface: "HTMLDialogElement",
    prop: "closedBy",
  },
  {
    featureId: "digital-goods",
    kind: "member",
    base: "window",
    prop: "getDigitalGoodsService",
  },
  {
    featureId: "dirname",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "dirName",
  },
  {
    featureId: "dirname",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "dirName",
  },
  {
    featureId: "document-caretpositionfrompoint",
    kind: "instanceMember",
    iface: "CaretPosition",
    prop: "getClientRect",
  },
  {
    featureId: "document-caretpositionfrompoint",
    kind: "instanceMember",
    iface: "CaretPosition",
    prop: "offset",
  },
  {
    featureId: "document-caretpositionfrompoint",
    kind: "instanceMember",
    iface: "CaretPosition",
    prop: "offsetNode",
  },
  {
    featureId: "document-caretpositionfrompoint",
    kind: "instanceMember",
    iface: "Document",
    prop: "caretPositionFromPoint",
  },
  {
    featureId: "document-colors",
    kind: "instanceMember",
    iface: "Document",
    prop: "alinkColor",
  },
  {
    featureId: "document-colors",
    kind: "instanceMember",
    iface: "Document",
    prop: "bgColor",
  },
  {
    featureId: "document-colors",
    kind: "instanceMember",
    iface: "Document",
    prop: "fgColor",
  },
  {
    featureId: "document-colors",
    kind: "instanceMember",
    iface: "Document",
    prop: "linkColor",
  },
  {
    featureId: "document-colors",
    kind: "instanceMember",
    iface: "Document",
    prop: "vlinkColor",
  },
  {
    featureId: "document-picture-in-picture",
    kind: "instanceMember",
    iface: "DocumentPictureInPicture",
    prop: "enter_event",
  },
  {
    featureId: "document-picture-in-picture",
    kind: "instanceMember",
    iface: "DocumentPictureInPicture",
    prop: "requestWindow",
  },
  {
    featureId: "document-picture-in-picture",
    kind: "instanceMember",
    iface: "DocumentPictureInPicture",
    prop: "window",
  },
  {
    featureId: "document-picture-in-picture",
    kind: "newIdent",
    name: "DocumentPictureInPictureEvent",
  },
  {
    featureId: "document-picture-in-picture",
    kind: "instanceMember",
    iface: "DocumentPictureInPictureEvent",
    prop: "window",
  },
  {
    featureId: "document-picture-in-picture",
    kind: "member",
    base: "window",
    prop: "documentPictureInPicture",
  },
  {
    featureId: "document-write",
    kind: "instanceMember",
    iface: "Document",
    prop: "close",
  },
  {
    featureId: "document-write",
    kind: "instanceMember",
    iface: "Document",
    prop: "open",
  },
  {
    featureId: "document-write",
    kind: "instanceMember",
    iface: "Document",
    prop: "write",
  },
  {
    featureId: "document-write",
    kind: "instanceMember",
    iface: "Document",
    prop: "writeln",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Attr",
    prop: "localName",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Attr",
    prop: "name",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Attr",
    prop: "namespaceURI",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Attr",
    prop: "ownerElement",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Attr",
    prop: "prefix",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Attr",
    prop: "value",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "after",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "appendData",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "before",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "data",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "deleteData",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "insertData",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "length",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "nextElementSibling",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "previousElementSibling",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "remove",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "replaceData",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "replaceWith",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "CharacterData",
    prop: "substringData",
  },
  {
    featureId: "dom",
    kind: "newIdent",
    name: "Comment",
  },
  {
    featureId: "dom",
    kind: "newIdent",
    name: "DOMException",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMException",
    prop: "message",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMException",
    prop: "name",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMImplementation",
    prop: "createDocument",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMImplementation",
    prop: "createDocumentType",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMImplementation",
    prop: "createHTMLDocument",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMStringList",
    prop: "contains",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMStringList",
    prop: "item",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMStringList",
    prop: "length",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "@@iterator",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "add",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "contains",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "entries",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "forEach",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "item",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "keys",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "length",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "remove",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "remove_duplicates",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "replace",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "supports",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "toString",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "toggle",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "trim_whitespace",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "value",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DOMTokenList",
    prop: "values",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "DOMContentLoaded_event",
  },
  {
    featureId: "dom",
    kind: "newIdent",
    name: "Document",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "URL",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "activeElement",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "adoptNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "append",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "body",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "characterSet",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "childElementCount",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "children",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "compatMode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "contentType",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createAttribute",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createAttributeNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createCDATASection",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createComment",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createDocumentFragment",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createElement",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createElementNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createNodeIterator",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createProcessingInstruction",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createTextNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "createTreeWalker",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "currentScript",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "defaultView",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "dir",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "doctype",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "documentElement",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "documentURI",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "embeds",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "firstElementChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "forms",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "getElementById",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "getElementsByClassName",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "getElementsByName",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "getElementsByTagName",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "getElementsByTagNameNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "hasFocus",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "head",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "images",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "implementation",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "importNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "lastElementChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "lastModified",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "links",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "plugins",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "prepend",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "querySelector",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "querySelectorAll",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "readyState",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "readystatechange_event",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "referrer",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "replaceChildren",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "scripts",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Document",
    prop: "title",
  },
  {
    featureId: "dom",
    kind: "newIdent",
    name: "DocumentFragment",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "append",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "childElementCount",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "children",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "firstElementChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "getElementById",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "lastElementChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "prepend",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "querySelector",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "querySelectorAll",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "replaceChildren",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentType",
    prop: "after",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentType",
    prop: "before",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentType",
    prop: "name",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentType",
    prop: "publicId",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentType",
    prop: "remove",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentType",
    prop: "replaceWith",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "DocumentType",
    prop: "systemId",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "after",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "append",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "attributes",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "before",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "childElementCount",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "children",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "classList",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "className",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "clientHeight",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "clientLeft",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "clientTop",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "clientWidth",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "closest",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "currentCSSZoom",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "firstElementChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getAttribute",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getAttributeNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getAttributeNames",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getAttributeNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getAttributeNodeNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getBoundingClientRect",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getClientRects",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getElementsByClassName",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getElementsByTagName",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "getElementsByTagNameNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "hasAttribute",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "hasAttributeNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "hasAttributes",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "id",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "innerHTML",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "insertAdjacentElement",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "insertAdjacentHTML",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "insertAdjacentText",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "lastElementChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "localName",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "matches",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "namespaceURI",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "nextElementSibling",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "outerHTML",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "prefix",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "prepend",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "previousElementSibling",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "querySelector",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "querySelectorAll",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "remove",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "removeAttribute",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "removeAttributeNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "removeAttributeNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "replaceChildren",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "replaceWith",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "setAttribute",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "setAttributeNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "setAttributeNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "setAttributeNodeNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "tagName",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "toggleAttribute",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLCollection",
    prop: "item",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLCollection",
    prop: "length",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLCollection",
    prop: "namedItem",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "dir",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "hidden",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "innerText",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "load_event",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "offsetHeight",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "offsetLeft",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "offsetParent",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "offsetTop",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "offsetWidth",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "outerText",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NamedNodeMap",
    prop: "getNamedItem",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NamedNodeMap",
    prop: "getNamedItemNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NamedNodeMap",
    prop: "item",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NamedNodeMap",
    prop: "length",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NamedNodeMap",
    prop: "removeNamedItem",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NamedNodeMap",
    prop: "removeNamedItemNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NamedNodeMap",
    prop: "setNamedItem",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NamedNodeMap",
    prop: "setNamedItemNS",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "appendChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "baseURI",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "childNodes",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "cloneNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "compareDocumentPosition",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "contains",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "firstChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "hasChildNodes",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "insertBefore",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "isDefaultNamespace",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "isEqualNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "isSameNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "lastChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "lookupNamespaceURI",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "lookupPrefix",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "nextSibling",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "nodeName",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "nodeType",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "nodeValue",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "normalize",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "ownerDocument",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "parentElement",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "parentNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "previousSibling",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "removeChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "replaceChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "textContent",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeIterator",
    prop: "filter",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeIterator",
    prop: "nextNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeIterator",
    prop: "pointerBeforeReferenceNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeIterator",
    prop: "previousNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeIterator",
    prop: "referenceNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeIterator",
    prop: "root",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeIterator",
    prop: "whatToShow",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeList",
    prop: "@@iterator",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeList",
    prop: "entries",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeList",
    prop: "forEach",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeList",
    prop: "item",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeList",
    prop: "keys",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeList",
    prop: "length",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "NodeList",
    prop: "values",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "ProcessingInstruction",
    prop: "target",
  },
  {
    featureId: "dom",
    kind: "newIdent",
    name: "Text",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Text",
    prop: "splitText",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "Text",
    prop: "wholeText",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "currentNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "filter",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "firstChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "lastChild",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "nextNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "nextSibling",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "parentNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "previousNode",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "previousSibling",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "root",
  },
  {
    featureId: "dom",
    kind: "instanceMember",
    iface: "TreeWalker",
    prop: "whatToShow",
  },
  {
    featureId: "dom",
    kind: "member",
    base: "window",
    prop: "document",
  },
  {
    featureId: "dom-geometry",
    kind: "newIdent",
    name: "DOMMatrix",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "a",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "b",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "c",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "d",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "e",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "f",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMMatrix",
    prop: "fromFloat32Array",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMMatrix",
    prop: "fromFloat64Array",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMMatrix",
    prop: "fromMatrix",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "invertSelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m11",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m12",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m13",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m14",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m21",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m22",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m23",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m24",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m31",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m32",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m33",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m34",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m41",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m42",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m43",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "m44",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "multiplySelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "preMultiplySelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "rotateAxisAngleSelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "rotateFromVectorSelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "rotateSelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "scale3dSelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "scaleSelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "setMatrixValue",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "skewXSelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "skewYSelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "translateSelf",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrix",
    prop: "worker_support",
  },
  {
    featureId: "dom-geometry",
    kind: "newIdent",
    name: "DOMMatrixReadOnly",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "a",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "b",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "c",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "d",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "e",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "f",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "flipX",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "flipY",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMMatrixReadOnly",
    prop: "fromFloat32Array",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMMatrixReadOnly",
    prop: "fromFloat64Array",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMMatrixReadOnly",
    prop: "fromMatrix",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "inverse",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "is2D",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "isIdentity",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m11",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m12",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m13",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m14",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m21",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m22",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m23",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m24",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m31",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m32",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m33",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m34",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m41",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m42",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m43",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "m44",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "multiply",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "rotate",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "rotateAxisAngle",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "rotateFromVector",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "scale",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "scale3d",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "skewX",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "skewY",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "toFloat32Array",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "toFloat64Array",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "toJSON",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "toString",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "transformPoint",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "translate",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMMatrixReadOnly",
    prop: "worker_support",
  },
  {
    featureId: "dom-geometry",
    kind: "newIdent",
    name: "DOMPoint",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMPoint",
    prop: "fromPoint",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPoint",
    prop: "w",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPoint",
    prop: "worker_support",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPoint",
    prop: "x",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPoint",
    prop: "y",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPoint",
    prop: "z",
  },
  {
    featureId: "dom-geometry",
    kind: "newIdent",
    name: "DOMPointReadOnly",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMPointReadOnly",
    prop: "fromPoint",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPointReadOnly",
    prop: "matrixTransform",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPointReadOnly",
    prop: "toJSON",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPointReadOnly",
    prop: "w",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPointReadOnly",
    prop: "worker_support",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPointReadOnly",
    prop: "x",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPointReadOnly",
    prop: "y",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMPointReadOnly",
    prop: "z",
  },
  {
    featureId: "dom-geometry",
    kind: "newIdent",
    name: "DOMQuad",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMQuad",
    prop: "fromQuad",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMQuad",
    prop: "fromRect",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMQuad",
    prop: "getBounds",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMQuad",
    prop: "p1",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMQuad",
    prop: "p2",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMQuad",
    prop: "p3",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMQuad",
    prop: "p4",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMQuad",
    prop: "toJSON",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMQuad",
    prop: "worker_support",
  },
  {
    featureId: "dom-geometry",
    kind: "newIdent",
    name: "DOMRect",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMRect",
    prop: "fromRect",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRect",
    prop: "height",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRect",
    prop: "width",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRect",
    prop: "worker_support",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRect",
    prop: "x",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRect",
    prop: "y",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectList",
    prop: "item",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectList",
    prop: "length",
  },
  {
    featureId: "dom-geometry",
    kind: "newIdent",
    name: "DOMRectReadOnly",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "bottom",
  },
  {
    featureId: "dom-geometry",
    kind: "callStatic",
    base: "DOMRectReadOnly",
    prop: "fromRect",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "height",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "left",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "right",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "toJSON",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "top",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "width",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "worker_support",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "x",
  },
  {
    featureId: "dom-geometry",
    kind: "instanceMember",
    iface: "DOMRectReadOnly",
    prop: "y",
  },
  {
    featureId: "domparser",
    kind: "newIdent",
    name: "DOMParser",
  },
  {
    featureId: "domparser",
    kind: "instanceMember",
    iface: "DOMParser",
    prop: "parseFromString",
  },
  {
    featureId: "download",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "download",
  },
  {
    featureId: "download",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "download",
  },
  {
    featureId: "download",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "download",
  },
  {
    featureId: "draganddrop",
    kind: "newIdent",
    name: "DataTransfer",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransfer",
    prop: "clearData",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransfer",
    prop: "dropEffect",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransfer",
    prop: "effectAllowed",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransfer",
    prop: "files",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransfer",
    prop: "getData",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransfer",
    prop: "items",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransfer",
    prop: "setData",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransfer",
    prop: "setDragImage",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransfer",
    prop: "types",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransferItem",
    prop: "getAsFile",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransferItem",
    prop: "getAsFileSystemHandle",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransferItem",
    prop: "getAsString",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransferItem",
    prop: "kind",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransferItem",
    prop: "type",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransferItemList",
    prop: "add",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransferItemList",
    prop: "clear",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransferItemList",
    prop: "length",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DataTransferItemList",
    prop: "remove",
  },
  {
    featureId: "draganddrop",
    kind: "newIdent",
    name: "DragEvent",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "DragEvent",
    prop: "dataTransfer",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "drag_event",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "dragend_event",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "dragenter_event",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "draggable",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "dragleave_event",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "dragover_event",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "dragstart_event",
  },
  {
    featureId: "draganddrop",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "drop_event",
  },
  {
    featureId: "edit-context",
    kind: "newIdent",
    name: "CharacterBoundsUpdateEvent",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "CharacterBoundsUpdateEvent",
    prop: "rangeEnd",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "CharacterBoundsUpdateEvent",
    prop: "rangeStart",
  },
  {
    featureId: "edit-context",
    kind: "newIdent",
    name: "EditContext",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "attachedElements",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "characterBounds",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "characterBoundsRangeStart",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "characterboundsupdate_event",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "compositionend_event",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "compositionstart_event",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "selectionEnd",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "selectionStart",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "text",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "textformatupdate_event",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "textupdate_event",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "updateCharacterBounds",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "updateControlBounds",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "updateSelection",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "updateSelectionBounds",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "EditContext",
    prop: "updateText",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "editContext",
  },
  {
    featureId: "edit-context",
    kind: "newIdent",
    name: "TextFormat",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextFormat",
    prop: "rangeEnd",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextFormat",
    prop: "rangeStart",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextFormat",
    prop: "underlineStyle",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextFormat",
    prop: "underlineThickness",
  },
  {
    featureId: "edit-context",
    kind: "newIdent",
    name: "TextFormatUpdateEvent",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextFormatUpdateEvent",
    prop: "getTextFormats",
  },
  {
    featureId: "edit-context",
    kind: "newIdent",
    name: "TextUpdateEvent",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextUpdateEvent",
    prop: "selectionEnd",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextUpdateEvent",
    prop: "selectionStart",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextUpdateEvent",
    prop: "text",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextUpdateEvent",
    prop: "updateRangeEnd",
  },
  {
    featureId: "edit-context",
    kind: "instanceMember",
    iface: "TextUpdateEvent",
    prop: "updateRangeStart",
  },
  {
    featureId: "element-capture",
    kind: "instanceMember",
    iface: "BrowserCaptureMediaStreamTrack",
    prop: "restrictTo",
  },
  {
    featureId: "element-capture",
    kind: "callStatic",
    base: "RestrictionTarget",
    prop: "fromElement",
  },
  {
    featureId: "element-from-point",
    kind: "instanceMember",
    iface: "Document",
    prop: "elementFromPoint",
  },
  {
    featureId: "element-from-point",
    kind: "instanceMember",
    iface: "Document",
    prop: "elementsFromPoint",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "Element",
    prop: "elementTiming",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "element",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "id",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "identifier",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "intersectionRect",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "loadTime",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "naturalHeight",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "naturalWidth",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "renderTime",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "toJSON",
  },
  {
    featureId: "element-timing",
    kind: "instanceMember",
    iface: "PerformanceElementTiming",
    prop: "url",
  },
  {
    featureId: "embed",
    kind: "instanceMember",
    iface: "HTMLEmbedElement",
    prop: "getSVGDocument",
  },
  {
    featureId: "embed",
    kind: "instanceMember",
    iface: "HTMLEmbedElement",
    prop: "height",
  },
  {
    featureId: "embed",
    kind: "instanceMember",
    iface: "HTMLEmbedElement",
    prop: "src",
  },
  {
    featureId: "embed",
    kind: "instanceMember",
    iface: "HTMLEmbedElement",
    prop: "type",
  },
  {
    featureId: "embed",
    kind: "instanceMember",
    iface: "HTMLEmbedElement",
    prop: "width",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "encrypted_event",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "mediaKeys",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "setMediaKeys",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "waitingforkey_event",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "newIdent",
    name: "MediaEncryptedEvent",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaEncryptedEvent",
    prop: "initData",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaEncryptedEvent",
    prop: "initDataType",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "newIdent",
    name: "MediaKeyMessageEvent",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyMessageEvent",
    prop: "message",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyMessageEvent",
    prop: "messageType",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "close",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "closed",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "expiration",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "generateRequest",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "keyStatuses",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "keystatuseschange_event",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "load",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "message_event",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "remove",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "sessionId",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySession",
    prop: "update",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyStatusMap",
    prop: "@@iterator",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyStatusMap",
    prop: "entries",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyStatusMap",
    prop: "forEach",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyStatusMap",
    prop: "get",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyStatusMap",
    prop: "has",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyStatusMap",
    prop: "keys",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyStatusMap",
    prop: "size",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeyStatusMap",
    prop: "values",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySystemAccess",
    prop: "createMediaKeys",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySystemAccess",
    prop: "getConfiguration",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeySystemAccess",
    prop: "keySystem",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeys",
    prop: "createSession",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeys",
    prop: "getStatusForPolicy",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "instanceMember",
    iface: "MediaKeys",
    prop: "setServerCertificate",
  },
  {
    featureId: "encrypted-media-extensions",
    kind: "member",
    base: "navigator",
    prop: "requestMediaKeySystemAccess",
  },
  {
    featureId: "enterkeyhint",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "enterKeyHint",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "EventCounts",
    prop: "@@iterator",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "EventCounts",
    prop: "entries",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "EventCounts",
    prop: "forEach",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "EventCounts",
    prop: "get",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "EventCounts",
    prop: "has",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "EventCounts",
    prop: "keys",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "EventCounts",
    prop: "size",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "EventCounts",
    prop: "values",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "Performance",
    prop: "eventCounts",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "PerformanceEventTiming",
    prop: "cancelable",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "PerformanceEventTiming",
    prop: "interactionId",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "PerformanceEventTiming",
    prop: "processingEnd",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "PerformanceEventTiming",
    prop: "processingStart",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "PerformanceEventTiming",
    prop: "target",
  },
  {
    featureId: "event-timing",
    kind: "instanceMember",
    iface: "PerformanceEventTiming",
    prop: "toJSON",
  },
  {
    featureId: "events",
    kind: "newIdent",
    name: "CustomEvent",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "CustomEvent",
    prop: "detail",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "CustomEvent",
    prop: "worker_support",
  },
  {
    featureId: "events",
    kind: "newIdent",
    name: "Event",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "bubbles",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "cancelable",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "currentTarget",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "defaultPrevented",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "eventPhase",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "isTrusted",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "preventDefault",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "stopImmediatePropagation",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "stopPropagation",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "target",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "timeStamp",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "Event",
    prop: "type",
  },
  {
    featureId: "events",
    kind: "newIdent",
    name: "EventTarget",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "EventTarget",
    prop: "addEventListener",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "EventTarget",
    prop: "dispatchEvent",
  },
  {
    featureId: "events",
    kind: "instanceMember",
    iface: "EventTarget",
    prop: "removeEventListener",
  },
  {
    featureId: "execcommand",
    kind: "instanceMember",
    iface: "Document",
    prop: "execCommand",
  },
  {
    featureId: "execcommand",
    kind: "instanceMember",
    iface: "Document",
    prop: "queryCommandEnabled",
  },
  {
    featureId: "execcommand",
    kind: "instanceMember",
    iface: "Document",
    prop: "queryCommandIndeterm",
  },
  {
    featureId: "execcommand",
    kind: "instanceMember",
    iface: "Document",
    prop: "queryCommandState",
  },
  {
    featureId: "execcommand",
    kind: "instanceMember",
    iface: "Document",
    prop: "queryCommandSupported",
  },
  {
    featureId: "execcommand",
    kind: "instanceMember",
    iface: "Document",
    prop: "queryCommandValue",
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "instanceMember",
    iface: "EXT_disjoint_timer_query",
    prop: "beginQueryEXT",
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "instanceMember",
    iface: "EXT_disjoint_timer_query",
    prop: "createQueryEXT",
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "instanceMember",
    iface: "EXT_disjoint_timer_query",
    prop: "deleteQueryEXT",
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "instanceMember",
    iface: "EXT_disjoint_timer_query",
    prop: "endQueryEXT",
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "instanceMember",
    iface: "EXT_disjoint_timer_query",
    prop: "getQueryEXT",
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "instanceMember",
    iface: "EXT_disjoint_timer_query",
    prop: "getQueryObjectEXT",
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "instanceMember",
    iface: "EXT_disjoint_timer_query",
    prop: "isQueryEXT",
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "instanceMember",
    iface: "EXT_disjoint_timer_query",
    prop: "queryCounterEXT",
  },
  {
    featureId: "external",
    kind: "instanceMember",
    iface: "External",
    prop: "AddSearchProvider",
  },
  {
    featureId: "external",
    kind: "instanceMember",
    iface: "External",
    prop: "IsSearchProviderInstalled",
  },
  {
    featureId: "eyedropper",
    kind: "newIdent",
    name: "EyeDropper",
  },
  {
    featureId: "eyedropper",
    kind: "instanceMember",
    iface: "EyeDropper",
    prop: "open",
  },
  {
    featureId: "eyedropper",
    kind: "instanceMember",
    iface: "EyeDropper",
    prop: "secure_context_required",
  },
  {
    featureId: "fast-seek",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "fastSeek",
  },
  {
    featureId: "fedcm",
    kind: "instanceMember",
    iface: "IdentityCredential",
    prop: "token",
  },
  {
    featureId: "federated-credentials",
    kind: "newIdent",
    name: "FederatedCredential",
  },
  {
    featureId: "federated-credentials",
    kind: "instanceMember",
    iface: "FederatedCredential",
    prop: "iconURL",
  },
  {
    featureId: "federated-credentials",
    kind: "instanceMember",
    iface: "FederatedCredential",
    prop: "name",
  },
  {
    featureId: "federated-credentials",
    kind: "instanceMember",
    iface: "FederatedCredential",
    prop: "protocol",
  },
  {
    featureId: "federated-credentials",
    kind: "instanceMember",
    iface: "FederatedCredential",
    prop: "provider",
  },
  {
    featureId: "fencedframe",
    kind: "instanceMember",
    iface: "Fence",
    prop: "getNestedConfigs",
  },
  {
    featureId: "fencedframe",
    kind: "instanceMember",
    iface: "Fence",
    prop: "reportEvent",
  },
  {
    featureId: "fencedframe",
    kind: "instanceMember",
    iface: "Fence",
    prop: "setReportEventDataForAutomaticBeacons",
  },
  {
    featureId: "fencedframe",
    kind: "instanceMember",
    iface: "FencedFrameConfig",
    prop: "setSharedStorageContext",
  },
  {
    featureId: "fencedframe",
    kind: "instanceMember",
    iface: "HTMLFencedFrameElement",
    prop: "allow",
  },
  {
    featureId: "fencedframe",
    kind: "instanceMember",
    iface: "HTMLFencedFrameElement",
    prop: "config",
  },
  {
    featureId: "fencedframe",
    kind: "instanceMember",
    iface: "HTMLFencedFrameElement",
    prop: "height",
  },
  {
    featureId: "fencedframe",
    kind: "instanceMember",
    iface: "HTMLFencedFrameElement",
    prop: "sandbox",
  },
  {
    featureId: "fencedframe",
    kind: "instanceMember",
    iface: "HTMLFencedFrameElement",
    prop: "width",
  },
  {
    featureId: "fencedframe",
    kind: "member",
    base: "navigator",
    prop: "deprecatedReplaceInURN",
  },
  {
    featureId: "fencedframe",
    kind: "member",
    base: "window",
    prop: "fence",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "@@iterator",
  },
  {
    featureId: "fetch",
    kind: "newIdent",
    name: "Headers",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "append",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "delete",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "entries",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "forEach",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "get",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "getSetCookie",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "has",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "iterate_combined_duplicates",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "iterate_lexicographically",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "keys",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "set",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Headers",
    prop: "values",
  },
  {
    featureId: "fetch",
    kind: "newIdent",
    name: "Request",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "arrayBuffer",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "blob",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "bodyUsed",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "bytes",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "cache",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "clone",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "credentials",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "destination",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "duplex",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "formData",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "headers",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "integrity",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "isHistoryNavigation",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "json",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "keepalive",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "method",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "mode",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "redirect",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "referrer",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "referrerPolicy",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "text",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Request",
    prop: "url",
  },
  {
    featureId: "fetch",
    kind: "newIdent",
    name: "Response",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "arrayBuffer",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "blob",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "body",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "bodyUsed",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "bytes",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "clone",
  },
  {
    featureId: "fetch",
    kind: "callStatic",
    base: "Response",
    prop: "error",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "formData",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "headers",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "json",
  },
  {
    featureId: "fetch",
    kind: "callStatic",
    base: "Response",
    prop: "json",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "ok",
  },
  {
    featureId: "fetch",
    kind: "callStatic",
    base: "Response",
    prop: "redirect",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "redirected",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "status",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "statusText",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "text",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "type",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "Response",
    prop: "url",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "fetch",
    prop: "authorization_removed_cross_origin",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "fetch",
    prop: "blob_data_support",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "fetch",
    prop: "init_keepalive_parameter",
  },
  {
    featureId: "fetch",
    kind: "instanceMember",
    iface: "fetch",
    prop: "init_referrerPolicy_parameter",
  },
  {
    featureId: "fetch-priority",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "fetchPriority",
  },
  {
    featureId: "fetch-priority",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "fetchPriority",
  },
  {
    featureId: "fetch-priority",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "fetchPriority",
  },
  {
    featureId: "fetch-priority",
    kind: "instanceMember",
    iface: "fetch",
    prop: "init_priority_parameter",
  },
  {
    featureId: "fetch-request-streams",
    kind: "instanceMember",
    iface: "Request",
    prop: "body",
  },
  {
    featureId: "fetchlater",
    kind: "instanceMember",
    iface: "FetchLaterResult",
    prop: "activated",
  },
  {
    featureId: "fetchlater",
    kind: "member",
    base: "window",
    prop: "fetchLater",
  },
  {
    featureId: "fieldset",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "disabled",
  },
  {
    featureId: "fieldset",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "elements",
  },
  {
    featureId: "fieldset",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "form",
  },
  {
    featureId: "fieldset",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "name",
  },
  {
    featureId: "fieldset",
    kind: "instanceMember",
    iface: "HTMLFieldSetElement",
    prop: "type",
  },
  {
    featureId: "fieldset",
    kind: "instanceMember",
    iface: "HTMLLegendElement",
    prop: "form",
  },
  {
    featureId: "file",
    kind: "newIdent",
    name: "Blob",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "Blob",
    prop: "arrayBuffer",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "Blob",
    prop: "bytes",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "Blob",
    prop: "size",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "Blob",
    prop: "slice",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "Blob",
    prop: "stream",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "Blob",
    prop: "text",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "Blob",
    prop: "type",
  },
  {
    featureId: "file",
    kind: "newIdent",
    name: "File",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "File",
    prop: "lastModified",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "File",
    prop: "name",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileList",
    prop: "item",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileList",
    prop: "length",
  },
  {
    featureId: "file",
    kind: "newIdent",
    name: "FileReader",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "abort",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "abort_event",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "error",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "error_event",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "load_event",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "loadend_event",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "loadstart_event",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "progress_event",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "readAsArrayBuffer",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "readAsDataURL",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "readAsText",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "readyState",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "result",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReader",
    prop: "worker_support",
  },
  {
    featureId: "file",
    kind: "newIdent",
    name: "FileReaderSync",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReaderSync",
    prop: "readAsArrayBuffer",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReaderSync",
    prop: "readAsDataURL",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReaderSync",
    prop: "readAsText",
  },
  {
    featureId: "file",
    kind: "instanceMember",
    iface: "FileReaderSync",
    prop: "worker_support",
  },
  {
    featureId: "file",
    kind: "callStatic",
    base: "URL",
    prop: "createObjectURL",
  },
  {
    featureId: "file",
    kind: "callStatic",
    base: "URL",
    prop: "revokeObjectURL",
  },
  {
    featureId: "file-system-access",
    kind: "instanceMember",
    iface: "FileSystemDirectoryHandle",
    prop: "@@asyncIterator",
  },
  {
    featureId: "file-system-access",
    kind: "instanceMember",
    iface: "FileSystemFileHandle",
    prop: "createWritable",
  },
  {
    featureId: "file-system-access",
    kind: "instanceMember",
    iface: "FileSystemHandle",
    prop: "queryPermission",
  },
  {
    featureId: "file-system-access",
    kind: "instanceMember",
    iface: "FileSystemHandle",
    prop: "requestPermission",
  },
  {
    featureId: "file-system-access",
    kind: "instanceMember",
    iface: "FileSystemWritableFileStream",
    prop: "seek",
  },
  {
    featureId: "file-system-access",
    kind: "instanceMember",
    iface: "FileSystemWritableFileStream",
    prop: "truncate",
  },
  {
    featureId: "file-system-access",
    kind: "instanceMember",
    iface: "FileSystemWritableFileStream",
    prop: "write",
  },
  {
    featureId: "file-system-access",
    kind: "member",
    base: "window",
    prop: "showDirectoryPicker",
  },
  {
    featureId: "file-system-access",
    kind: "member",
    base: "window",
    prop: "showOpenFilePicker",
  },
  {
    featureId: "file-system-access",
    kind: "member",
    base: "window",
    prop: "showSaveFilePicker",
  },
  {
    featureId: "focus-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "blur_event",
  },
  {
    featureId: "focus-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "focus_event",
  },
  {
    featureId: "focus-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "focusin_event",
  },
  {
    featureId: "focus-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "focusout_event",
  },
  {
    featureId: "focus-events",
    kind: "newIdent",
    name: "FocusEvent",
  },
  {
    featureId: "focus-events",
    kind: "instanceMember",
    iface: "FocusEvent",
    prop: "relatedTarget",
  },
  {
    featureId: "focus-events",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "blur",
  },
  {
    featureId: "focus-events",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "focus",
  },
  {
    featureId: "font-face",
    kind: "instanceMember",
    iface: "CSSFontFaceRule",
    prop: "style",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "Document",
    prop: "fonts",
  },
  {
    featureId: "font-loading",
    kind: "newIdent",
    name: "FontFace",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "display",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "family",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "featureSettings",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "load",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "loaded",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "status",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "stretch",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "style",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "unicodeRange",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "variant",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "variationSettings",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "weight",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "worker_support",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "@@iterator",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "add",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "check",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "clear",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "delete",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "entries",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "forEach",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "has",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "keys",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "load",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "loading_event",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "loadingdone_event",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "loadingerror_event",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "ready",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "size",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "status",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "values",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSet",
    prop: "worker_support",
  },
  {
    featureId: "font-loading",
    kind: "newIdent",
    name: "FontFaceSetLoadEvent",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSetLoadEvent",
    prop: "fontfaces",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "FontFaceSetLoadEvent",
    prop: "worker_support",
  },
  {
    featureId: "font-loading",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "fonts",
  },
  {
    featureId: "font-metric-overrides",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "ascentOverride",
  },
  {
    featureId: "font-metric-overrides",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "descentOverride",
  },
  {
    featureId: "font-metric-overrides",
    kind: "instanceMember",
    iface: "FontFace",
    prop: "lineGapOverride",
  },
  {
    featureId: "font-palette",
    kind: "instanceMember",
    iface: "CSSFontPaletteValuesRule",
    prop: "basePalette",
  },
  {
    featureId: "font-palette",
    kind: "instanceMember",
    iface: "CSSFontPaletteValuesRule",
    prop: "fontFamily",
  },
  {
    featureId: "font-palette",
    kind: "instanceMember",
    iface: "CSSFontPaletteValuesRule",
    prop: "name",
  },
  {
    featureId: "font-palette",
    kind: "instanceMember",
    iface: "CSSFontPaletteValuesRule",
    prop: "overrideColors",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "@@iterator",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "clear",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "delete",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "entries",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "forEach",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "get",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "has",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "keys",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "set",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "size",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesMap",
    prop: "values",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesRule",
    prop: "annotation",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesRule",
    prop: "characterVariant",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesRule",
    prop: "fontFamily",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesRule",
    prop: "ornaments",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesRule",
    prop: "styleset",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesRule",
    prop: "stylistic",
  },
  {
    featureId: "font-variant-alternates",
    kind: "instanceMember",
    iface: "CSSFontFeatureValuesRule",
    prop: "swash",
  },
  {
    featureId: "form",
    kind: "newIdent",
    name: "FormDataEvent",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "FormDataEvent",
    prop: "formData",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormControlsCollection",
    prop: "namedItem",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "acceptCharset",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "action",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "autocomplete",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "elements",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "encoding",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "enctype",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "formdata_event",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "length",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "method",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "name",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "noValidate",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "rel",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "relList",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "requestSubmit",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "reset",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "reset_event",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "submit",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "submit_event",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "HTMLFormElement",
    prop: "target",
  },
  {
    featureId: "form",
    kind: "newIdent",
    name: "SubmitEvent",
  },
  {
    featureId: "form",
    kind: "instanceMember",
    iface: "SubmitEvent",
    prop: "submitter",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "checkValidity",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "form",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "labels",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "reportValidity",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "setFormValue",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "setValidity",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "validationMessage",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "validity",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "willValidate",
  },
  {
    featureId: "form-associated-custom-elements",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "attachInternals",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "Document",
    prop: "exitFullscreen",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "Document",
    prop: "fullscreenElement",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "Document",
    prop: "fullscreenEnabled",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "Document",
    prop: "fullscreenchange_event",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "Document",
    prop: "fullscreenerror_event",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "Element",
    prop: "fullscreenchange_event",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "Element",
    prop: "fullscreenerror_event",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "Element",
    prop: "requestFullscreen",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "allowFullscreen",
  },
  {
    featureId: "fullscreen",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "fullscreenElement",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "axes",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "buttons",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "connected",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "id",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "index",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "mapping",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "secure_context_required",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "timestamp",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "GamepadButton",
    prop: "pressed",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "GamepadButton",
    prop: "secure_context_required",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "GamepadButton",
    prop: "value",
  },
  {
    featureId: "gamepad",
    kind: "newIdent",
    name: "GamepadEvent",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "GamepadEvent",
    prop: "gamepad",
  },
  {
    featureId: "gamepad",
    kind: "instanceMember",
    iface: "GamepadEvent",
    prop: "secure_context_required",
  },
  {
    featureId: "gamepad",
    kind: "member",
    base: "navigator",
    prop: "getGamepads",
  },
  {
    featureId: "gamepad",
    kind: "member",
    base: "window",
    prop: "gamepadconnected_event",
  },
  {
    featureId: "gamepad",
    kind: "member",
    base: "window",
    prop: "gamepaddisconnected_event",
  },
  {
    featureId: "gamepad-haptics",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "hapticActuators",
  },
  {
    featureId: "gamepad-haptics",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "vibrationActuator",
  },
  {
    featureId: "gamepad-haptics",
    kind: "instanceMember",
    iface: "GamepadHapticActuator",
    prop: "effects",
  },
  {
    featureId: "gamepad-haptics",
    kind: "instanceMember",
    iface: "GamepadHapticActuator",
    prop: "playEffect",
  },
  {
    featureId: "gamepad-haptics",
    kind: "instanceMember",
    iface: "GamepadHapticActuator",
    prop: "pulse",
  },
  {
    featureId: "gamepad-haptics",
    kind: "instanceMember",
    iface: "GamepadHapticActuator",
    prop: "reset",
  },
  {
    featureId: "gamepad-haptics",
    kind: "instanceMember",
    iface: "GamepadHapticActuator",
    prop: "secure_context_required",
  },
  {
    featureId: "gamepad-touch",
    kind: "instanceMember",
    iface: "GamepadButton",
    prop: "touched",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "hand",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "pose",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "GamepadPose",
    prop: "angularAcceleration",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "GamepadPose",
    prop: "angularVelocity",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "GamepadPose",
    prop: "hasOrientation",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "GamepadPose",
    prop: "hasPosition",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "GamepadPose",
    prop: "linearAcceleration",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "GamepadPose",
    prop: "linearVelocity",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "GamepadPose",
    prop: "orientation",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "GamepadPose",
    prop: "position",
  },
  {
    featureId: "gamepad-vr",
    kind: "instanceMember",
    iface: "GamepadPose",
    prop: "secure_context_required",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "Geolocation",
    prop: "clearWatch",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "Geolocation",
    prop: "getCurrentPosition",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "Geolocation",
    prop: "secure_context_required",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "Geolocation",
    prop: "watchPosition",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationCoordinates",
    prop: "accuracy",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationCoordinates",
    prop: "altitude",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationCoordinates",
    prop: "altitudeAccuracy",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationCoordinates",
    prop: "heading",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationCoordinates",
    prop: "latitude",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationCoordinates",
    prop: "longitude",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationCoordinates",
    prop: "secure_context_required",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationCoordinates",
    prop: "speed",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationCoordinates",
    prop: "toJSON",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationPosition",
    prop: "coords",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationPosition",
    prop: "secure_context_required",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationPosition",
    prop: "timestamp",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationPosition",
    prop: "toJSON",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationPositionError",
    prop: "code",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationPositionError",
    prop: "message",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "GeolocationPositionError",
    prop: "secure_context_required",
  },
  {
    featureId: "geolocation",
    kind: "member",
    base: "navigator",
    prop: "geolocation",
  },
  {
    featureId: "geolocation",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_geolocation",
  },
  {
    featureId: "get-computed-style",
    kind: "member",
    base: "window",
    prop: "getComputedStyle",
  },
  {
    featureId: "getboxquads",
    kind: "instanceMember",
    iface: "Document",
    prop: "getBoxQuads",
  },
  {
    featureId: "getboxquads",
    kind: "instanceMember",
    iface: "Element",
    prop: "getBoxQuads",
  },
  {
    featureId: "getboxquads",
    kind: "instanceMember",
    iface: "Text",
    prop: "getBoxQuads",
  },
  {
    featureId: "gethtml",
    kind: "instanceMember",
    iface: "Element",
    prop: "getHTML",
  },
  {
    featureId: "gethtml",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "getHTML",
  },
  {
    featureId: "gpc",
    kind: "member",
    base: "navigator",
    prop: "globalPrivacyControl",
  },
  {
    featureId: "gpc",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "globalPrivacyControl",
  },
  {
    featureId: "gyroscope",
    kind: "newIdent",
    name: "Gyroscope",
  },
  {
    featureId: "gyroscope",
    kind: "instanceMember",
    iface: "Gyroscope",
    prop: "x",
  },
  {
    featureId: "gyroscope",
    kind: "instanceMember",
    iface: "Gyroscope",
    prop: "y",
  },
  {
    featureId: "gyroscope",
    kind: "instanceMember",
    iface: "Gyroscope",
    prop: "z",
  },
  {
    featureId: "gyroscope",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_gyroscope",
  },
  {
    featureId: "hardware-concurrency",
    kind: "member",
    base: "navigator",
    prop: "hardwareConcurrency",
  },
  {
    featureId: "hardware-concurrency",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "hardwareConcurrency",
  },
  {
    featureId: "hashchange",
    kind: "newIdent",
    name: "HashChangeEvent",
  },
  {
    featureId: "hashchange",
    kind: "instanceMember",
    iface: "HashChangeEvent",
    prop: "newURL",
  },
  {
    featureId: "hashchange",
    kind: "instanceMember",
    iface: "HashChangeEvent",
    prop: "oldURL",
  },
  {
    featureId: "hashchange",
    kind: "member",
    base: "window",
    prop: "hashchange_event",
  },
  {
    featureId: "hidden-until-found",
    kind: "instanceMember",
    iface: "Element",
    prop: "beforematch_event",
  },
  {
    featureId: "highlight",
    kind: "callStatic",
    base: "CSS",
    prop: "highlights",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "@@iterator",
  },
  {
    featureId: "highlight",
    kind: "newIdent",
    name: "Highlight",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "add",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "clear",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "delete",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "entries",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "forEach",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "has",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "keys",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "priority",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "size",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "type",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "Highlight",
    prop: "values",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "@@iterator",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "clear",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "delete",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "entries",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "forEach",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "get",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "has",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "highlightsFromPoint",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "keys",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "set",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "size",
  },
  {
    featureId: "highlight",
    kind: "instanceMember",
    iface: "HighlightRegistry",
    prop: "values",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "History",
    prop: "back",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "History",
    prop: "forward",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "History",
    prop: "go",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "History",
    prop: "length",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "History",
    prop: "pushState",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "History",
    prop: "replaceState",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "History",
    prop: "scrollRestoration",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "History",
    prop: "state",
  },
  {
    featureId: "history",
    kind: "newIdent",
    name: "PopStateEvent",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "PopStateEvent",
    prop: "hasUAVisualTransition",
  },
  {
    featureId: "history",
    kind: "instanceMember",
    iface: "PopStateEvent",
    prop: "state",
  },
  {
    featureId: "history",
    kind: "member",
    base: "window",
    prop: "history",
  },
  {
    featureId: "history",
    kind: "member",
    base: "window",
    prop: "popstate_event",
  },
  {
    featureId: "html-media-capture",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "capture",
  },
  {
    featureId: "idle-detection",
    kind: "newIdent",
    name: "IdleDetector",
  },
  {
    featureId: "idle-detection",
    kind: "instanceMember",
    iface: "IdleDetector",
    prop: "change_event",
  },
  {
    featureId: "idle-detection",
    kind: "callStatic",
    base: "IdleDetector",
    prop: "requestPermission",
  },
  {
    featureId: "idle-detection",
    kind: "instanceMember",
    iface: "IdleDetector",
    prop: "screenState",
  },
  {
    featureId: "idle-detection",
    kind: "instanceMember",
    iface: "IdleDetector",
    prop: "start",
  },
  {
    featureId: "idle-detection",
    kind: "instanceMember",
    iface: "IdleDetector",
    prop: "userState",
  },
  {
    featureId: "iframe",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "allow",
  },
  {
    featureId: "iframe",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "contentDocument",
  },
  {
    featureId: "iframe",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "contentWindow",
  },
  {
    featureId: "iframe",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "getSVGDocument",
  },
  {
    featureId: "iframe",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "height",
  },
  {
    featureId: "iframe",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "name",
  },
  {
    featureId: "iframe",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "src",
  },
  {
    featureId: "iframe",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "width",
  },
  {
    featureId: "iframe-credentialless",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "credentialless",
  },
  {
    featureId: "iframe-credentialless",
    kind: "member",
    base: "window",
    prop: "credentialless",
  },
  {
    featureId: "iframe-sandbox",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "sandbox",
  },
  {
    featureId: "iframe-srcdoc",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "srcdoc",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "alt",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "coords",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "hash",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "host",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "hostname",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "href",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "origin",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "password",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "pathname",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "port",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "protocol",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "rel",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "relList",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "search",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "shape",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "target",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "toString",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "username",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "isMap",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "useMap",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLMapElement",
    prop: "areas",
  },
  {
    featureId: "image-maps",
    kind: "instanceMember",
    iface: "HTMLMapElement",
    prop: "name",
  },
  {
    featureId: "imagebitmaprenderingcontext",
    kind: "instanceMember",
    iface: "ImageBitmapRenderingContext",
    prop: "canvas",
  },
  {
    featureId: "imagebitmaprenderingcontext",
    kind: "instanceMember",
    iface: "ImageBitmapRenderingContext",
    prop: "transferFromImageBitmap",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "Image",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "alt",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "complete",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "crossOrigin",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "decode",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "decoding",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "height",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "naturalHeight",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "naturalWidth",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "src",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "width",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "x",
  },
  {
    featureId: "img",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "y",
  },
  {
    featureId: "import",
    kind: "instanceMember",
    iface: "CSSImportRule",
    prop: "href",
  },
  {
    featureId: "import",
    kind: "instanceMember",
    iface: "CSSImportRule",
    prop: "media",
  },
  {
    featureId: "import",
    kind: "instanceMember",
    iface: "CSSImportRule",
    prop: "styleSheet",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "advance",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "continue",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "continuePrimaryKey",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "delete",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "direction",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "key",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "primaryKey",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "request",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "source",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "update",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursor",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursorWithValue",
    prop: "value",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBCursorWithValue",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "close",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "close_event",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "createObjectStore",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "deleteObjectStore",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "name",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "objectStoreNames",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "transaction",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "version",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "versionchange_event",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBDatabase",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBFactory",
    prop: "cmp",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBFactory",
    prop: "databases",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBFactory",
    prop: "deleteDatabase",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBFactory",
    prop: "open",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBFactory",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "count",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "get",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "getAll",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "getAllKeys",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "getKey",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "keyPath",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "multiEntry",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "name",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "objectStore",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "openCursor",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "openKeyCursor",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "unique",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBIndex",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "callStatic",
    base: "IDBKeyRange",
    prop: "bound",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBKeyRange",
    prop: "includes",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBKeyRange",
    prop: "lower",
  },
  {
    featureId: "indexeddb",
    kind: "callStatic",
    base: "IDBKeyRange",
    prop: "lowerBound",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBKeyRange",
    prop: "lowerOpen",
  },
  {
    featureId: "indexeddb",
    kind: "callStatic",
    base: "IDBKeyRange",
    prop: "only",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBKeyRange",
    prop: "upper",
  },
  {
    featureId: "indexeddb",
    kind: "callStatic",
    base: "IDBKeyRange",
    prop: "upperBound",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBKeyRange",
    prop: "upperOpen",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBKeyRange",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "add",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "autoIncrement",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "clear",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "count",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "createIndex",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "delete",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "deleteIndex",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "get",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "getAll",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "getAllKeys",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "getKey",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "index",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "indexNames",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "keyPath",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "name",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "openCursor",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "openKeyCursor",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "put",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "transaction",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBObjectStore",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBOpenDBRequest",
    prop: "blocked_event",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBOpenDBRequest",
    prop: "upgradeneeded_event",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBOpenDBRequest",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBRequest",
    prop: "error",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBRequest",
    prop: "error_event",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBRequest",
    prop: "readyState",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBRequest",
    prop: "result",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBRequest",
    prop: "source",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBRequest",
    prop: "success_event",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBRequest",
    prop: "transaction",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBRequest",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "abort",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "abort_event",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "commit",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "complete_event",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "db",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "durability",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "error",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "error_event",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "mode",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "objectStore",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "objectStoreNames",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBTransaction",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "newIdent",
    name: "IDBVersionChangeEvent",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBVersionChangeEvent",
    prop: "newVersion",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBVersionChangeEvent",
    prop: "oldVersion",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "IDBVersionChangeEvent",
    prop: "worker_support",
  },
  {
    featureId: "indexeddb",
    kind: "instanceMember",
    iface: "indexedDB",
    prop: "worker_support",
  },
  {
    featureId: "inert",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "inert",
  },
  {
    featureId: "ink",
    kind: "instanceMember",
    iface: "DelegatedInkTrailPresenter",
    prop: "presentationArea",
  },
  {
    featureId: "ink",
    kind: "instanceMember",
    iface: "DelegatedInkTrailPresenter",
    prop: "updateInkTrailStartPoint",
  },
  {
    featureId: "ink",
    kind: "instanceMember",
    iface: "Ink",
    prop: "requestPresenter",
  },
  {
    featureId: "ink",
    kind: "member",
    base: "navigator",
    prop: "ink",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "accept",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "alt",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "autocomplete",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "cancel_event",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "checked",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "defaultValue",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "disabled",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "form",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "formAction",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "formEnctype",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "formMethod",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "formNoValidate",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "formTarget",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "height",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "invalid_event",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "labels",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "list",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "maxLength",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "minLength",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "multiple",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "name",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "pattern",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "placeholder",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "readOnly",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "required",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "select",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "select_event",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "selectionDirection",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "selectionEnd",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "selectionStart",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "setRangeText",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "setSelectionRange",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "size",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "type",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "value",
  },
  {
    featureId: "input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "width",
  },
  {
    featureId: "input-checkbox",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "defaultChecked",
  },
  {
    featureId: "input-checkbox",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "indeterminate",
  },
  {
    featureId: "input-color",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "alpha",
  },
  {
    featureId: "input-color",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "colorSpace",
  },
  {
    featureId: "input-date-time",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "valueAsDate",
  },
  {
    featureId: "input-event",
    kind: "instanceMember",
    iface: "Element",
    prop: "beforeinput_event",
  },
  {
    featureId: "input-event",
    kind: "instanceMember",
    iface: "Element",
    prop: "input_event",
  },
  {
    featureId: "input-event",
    kind: "newIdent",
    name: "InputEvent",
  },
  {
    featureId: "input-event",
    kind: "instanceMember",
    iface: "InputEvent",
    prop: "data",
  },
  {
    featureId: "input-event",
    kind: "instanceMember",
    iface: "InputEvent",
    prop: "dataTransfer",
  },
  {
    featureId: "input-event",
    kind: "instanceMember",
    iface: "InputEvent",
    prop: "getTargetRanges",
  },
  {
    featureId: "input-event",
    kind: "instanceMember",
    iface: "InputEvent",
    prop: "inputType",
  },
  {
    featureId: "input-event",
    kind: "instanceMember",
    iface: "InputEvent",
    prop: "isComposing",
  },
  {
    featureId: "input-file",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "files",
  },
  {
    featureId: "input-image",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "src",
  },
  {
    featureId: "input-number",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "max",
  },
  {
    featureId: "input-number",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "min",
  },
  {
    featureId: "input-number",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "step",
  },
  {
    featureId: "input-number",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "stepDown",
  },
  {
    featureId: "input-number",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "stepUp",
  },
  {
    featureId: "input-number",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "valueAsNumber",
  },
  {
    featureId: "inputmode",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "inputMode",
  },
  {
    featureId: "insertable-streams",
    kind: "newIdent",
    name: "MediaStreamTrackProcessor",
  },
  {
    featureId: "insertable-streams",
    kind: "instanceMember",
    iface: "MediaStreamTrackProcessor",
    prop: "readable",
  },
  {
    featureId: "insertable-streams",
    kind: "newIdent",
    name: "VideoTrackGenerator",
  },
  {
    featureId: "insertable-streams",
    kind: "instanceMember",
    iface: "VideoTrackGenerator",
    prop: "muted",
  },
  {
    featureId: "insertable-streams",
    kind: "instanceMember",
    iface: "VideoTrackGenerator",
    prop: "track",
  },
  {
    featureId: "insertable-streams",
    kind: "instanceMember",
    iface: "VideoTrackGenerator",
    prop: "writable",
  },
  {
    featureId: "intersection-observer",
    kind: "newIdent",
    name: "IntersectionObserver",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "delay",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "disconnect",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "observe",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "root",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "rootMargin",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "scrollMargin",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "takeRecords",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "thresholds",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "trackVisibility",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserver",
    prop: "unobserve",
  },
  {
    featureId: "intersection-observer",
    kind: "newIdent",
    name: "IntersectionObserverEntry",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserverEntry",
    prop: "boundingClientRect",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserverEntry",
    prop: "intersectionRatio",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserverEntry",
    prop: "intersectionRect",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserverEntry",
    prop: "isIntersecting",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserverEntry",
    prop: "isVisible",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserverEntry",
    prop: "rootBounds",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserverEntry",
    prop: "target",
  },
  {
    featureId: "intersection-observer",
    kind: "instanceMember",
    iface: "IntersectionObserverEntry",
    prop: "time",
  },
  {
    featureId: "invoker-commands",
    kind: "newIdent",
    name: "CommandEvent",
  },
  {
    featureId: "invoker-commands",
    kind: "instanceMember",
    iface: "CommandEvent",
    prop: "command",
  },
  {
    featureId: "invoker-commands",
    kind: "instanceMember",
    iface: "CommandEvent",
    prop: "source",
  },
  {
    featureId: "invoker-commands",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "command",
  },
  {
    featureId: "invoker-commands",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "commandForElement",
  },
  {
    featureId: "invoker-commands",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "command_event",
  },
  {
    featureId: "is-input-pending",
    kind: "member",
    base: "navigator",
    prop: "scheduling",
  },
  {
    featureId: "is-input-pending",
    kind: "instanceMember",
    iface: "Scheduling",
    prop: "isInputPending",
  },
  {
    featureId: "is-secure-context",
    kind: "instanceMember",
    iface: "isSecureContext",
    prop: "worker_support",
  },
  {
    featureId: "js-modules",
    kind: "instanceMember",
    iface: "Worklet",
    prop: "ecmascript_modules",
  },
  {
    featureId: "js-modules-service-workers",
    kind: "instanceMember",
    iface: "ServiceWorker",
    prop: "ecmascript_modules",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "keydown_event",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "keyup_event",
  },
  {
    featureId: "keyboard-events",
    kind: "newIdent",
    name: "KeyboardEvent",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "altKey",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "code",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "ctrlKey",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "getModifierState",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "isComposing",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "key",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "location",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "metaKey",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "repeat",
  },
  {
    featureId: "keyboard-events",
    kind: "instanceMember",
    iface: "KeyboardEvent",
    prop: "shiftKey",
  },
  {
    featureId: "keyboard-lock",
    kind: "instanceMember",
    iface: "Keyboard",
    prop: "lock",
  },
  {
    featureId: "keyboard-lock",
    kind: "instanceMember",
    iface: "Keyboard",
    prop: "unlock",
  },
  {
    featureId: "keyboard-lock",
    kind: "member",
    base: "navigator",
    prop: "keyboard",
  },
  {
    featureId: "keyboard-map",
    kind: "instanceMember",
    iface: "Keyboard",
    prop: "getLayoutMap",
  },
  {
    featureId: "keyboard-map",
    kind: "instanceMember",
    iface: "KeyboardLayoutMap",
    prop: "@@iterator",
  },
  {
    featureId: "keyboard-map",
    kind: "instanceMember",
    iface: "KeyboardLayoutMap",
    prop: "entries",
  },
  {
    featureId: "keyboard-map",
    kind: "instanceMember",
    iface: "KeyboardLayoutMap",
    prop: "forEach",
  },
  {
    featureId: "keyboard-map",
    kind: "instanceMember",
    iface: "KeyboardLayoutMap",
    prop: "get",
  },
  {
    featureId: "keyboard-map",
    kind: "instanceMember",
    iface: "KeyboardLayoutMap",
    prop: "has",
  },
  {
    featureId: "keyboard-map",
    kind: "instanceMember",
    iface: "KeyboardLayoutMap",
    prop: "keys",
  },
  {
    featureId: "keyboard-map",
    kind: "instanceMember",
    iface: "KeyboardLayoutMap",
    prop: "size",
  },
  {
    featureId: "keyboard-map",
    kind: "instanceMember",
    iface: "KeyboardLayoutMap",
    prop: "values",
  },
  {
    featureId: "label",
    kind: "instanceMember",
    iface: "HTMLLabelElement",
    prop: "control",
  },
  {
    featureId: "label",
    kind: "instanceMember",
    iface: "HTMLLabelElement",
    prop: "form",
  },
  {
    featureId: "label",
    kind: "instanceMember",
    iface: "HTMLLabelElement",
    prop: "htmlFor",
  },
  {
    featureId: "lang-attr",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "lang",
  },
  {
    featureId: "language",
    kind: "member",
    base: "navigator",
    prop: "language",
  },
  {
    featureId: "language",
    kind: "member",
    base: "navigator",
    prop: "languages",
  },
  {
    featureId: "language",
    kind: "member",
    base: "window",
    prop: "languagechange_event",
  },
  {
    featureId: "language",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "languagechange_event",
  },
  {
    featureId: "language",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "language",
  },
  {
    featureId: "language",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "languages",
  },
  {
    featureId: "largest-contentful-paint",
    kind: "instanceMember",
    iface: "LargestContentfulPaint",
    prop: "element",
  },
  {
    featureId: "largest-contentful-paint",
    kind: "instanceMember",
    iface: "LargestContentfulPaint",
    prop: "id",
  },
  {
    featureId: "largest-contentful-paint",
    kind: "instanceMember",
    iface: "LargestContentfulPaint",
    prop: "loadTime",
  },
  {
    featureId: "largest-contentful-paint",
    kind: "instanceMember",
    iface: "LargestContentfulPaint",
    prop: "renderTime",
  },
  {
    featureId: "largest-contentful-paint",
    kind: "instanceMember",
    iface: "LargestContentfulPaint",
    prop: "size",
  },
  {
    featureId: "largest-contentful-paint",
    kind: "instanceMember",
    iface: "LargestContentfulPaint",
    prop: "toJSON",
  },
  {
    featureId: "largest-contentful-paint",
    kind: "instanceMember",
    iface: "LargestContentfulPaint",
    prop: "url",
  },
  {
    featureId: "layout-instability",
    kind: "instanceMember",
    iface: "LayoutShift",
    prop: "hadRecentInput",
  },
  {
    featureId: "layout-instability",
    kind: "instanceMember",
    iface: "LayoutShift",
    prop: "lastInputTime",
  },
  {
    featureId: "layout-instability",
    kind: "instanceMember",
    iface: "LayoutShift",
    prop: "sources",
  },
  {
    featureId: "layout-instability",
    kind: "instanceMember",
    iface: "LayoutShift",
    prop: "toJSON",
  },
  {
    featureId: "layout-instability",
    kind: "instanceMember",
    iface: "LayoutShift",
    prop: "value",
  },
  {
    featureId: "layout-instability",
    kind: "instanceMember",
    iface: "LayoutShiftAttribution",
    prop: "currentRect",
  },
  {
    featureId: "layout-instability",
    kind: "instanceMember",
    iface: "LayoutShiftAttribution",
    prop: "node",
  },
  {
    featureId: "layout-instability",
    kind: "instanceMember",
    iface: "LayoutShiftAttribution",
    prop: "previousRect",
  },
  {
    featureId: "layout-instability",
    kind: "instanceMember",
    iface: "LayoutShiftAttribution",
    prop: "toJSON",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "as",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "crossOrigin",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "disabled",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "href",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "hreflang",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "integrity",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "media",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "rel",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "relList",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "sizes",
  },
  {
    featureId: "link",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "type",
  },
  {
    featureId: "list-elements",
    kind: "instanceMember",
    iface: "HTMLLIElement",
    prop: "value",
  },
  {
    featureId: "list-elements",
    kind: "instanceMember",
    iface: "HTMLOListElement",
    prop: "reversed",
  },
  {
    featureId: "list-elements",
    kind: "instanceMember",
    iface: "HTMLOListElement",
    prop: "start",
  },
  {
    featureId: "list-elements",
    kind: "instanceMember",
    iface: "HTMLOListElement",
    prop: "type",
  },
  {
    featureId: "loading-lazy",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "loading",
  },
  {
    featureId: "loading-lazy",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "loading",
  },
  {
    featureId: "local-fonts",
    kind: "instanceMember",
    iface: "FontData",
    prop: "blob",
  },
  {
    featureId: "local-fonts",
    kind: "instanceMember",
    iface: "FontData",
    prop: "family",
  },
  {
    featureId: "local-fonts",
    kind: "instanceMember",
    iface: "FontData",
    prop: "fullName",
  },
  {
    featureId: "local-fonts",
    kind: "instanceMember",
    iface: "FontData",
    prop: "postscriptName",
  },
  {
    featureId: "local-fonts",
    kind: "instanceMember",
    iface: "FontData",
    prop: "style",
  },
  {
    featureId: "local-fonts",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_local-fonts",
  },
  {
    featureId: "local-fonts",
    kind: "member",
    base: "window",
    prop: "queryLocalFonts",
  },
  {
    featureId: "local-network-access",
    kind: "instanceMember",
    iface: "Request",
    prop: "targetAddressSpace",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "Storage",
    prop: "clear",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "Storage",
    prop: "getItem",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "Storage",
    prop: "key",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "Storage",
    prop: "length",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "Storage",
    prop: "removeItem",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "Storage",
    prop: "setItem",
  },
  {
    featureId: "localstorage",
    kind: "newIdent",
    name: "StorageEvent",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "StorageEvent",
    prop: "key",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "StorageEvent",
    prop: "newValue",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "StorageEvent",
    prop: "oldValue",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "StorageEvent",
    prop: "storageArea",
  },
  {
    featureId: "localstorage",
    kind: "instanceMember",
    iface: "StorageEvent",
    prop: "url",
  },
  {
    featureId: "localstorage",
    kind: "member",
    base: "window",
    prop: "localStorage",
  },
  {
    featureId: "localstorage",
    kind: "member",
    base: "window",
    prop: "sessionStorage",
  },
  {
    featureId: "localstorage",
    kind: "member",
    base: "window",
    prop: "storage_event",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Document",
    prop: "location",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "ancestorOrigins",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "assign",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "hash",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "host",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "hostname",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "href",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "origin",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "pathname",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "port",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "protocol",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "reload",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "replace",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "search",
  },
  {
    featureId: "location",
    kind: "instanceMember",
    iface: "Location",
    prop: "toString",
  },
  {
    featureId: "location",
    kind: "member",
    base: "window",
    prop: "location",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceLongAnimationFrameTiming",
    prop: "blockingDuration",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceLongAnimationFrameTiming",
    prop: "firstUIEventTimestamp",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceLongAnimationFrameTiming",
    prop: "renderStart",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceLongAnimationFrameTiming",
    prop: "scripts",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceLongAnimationFrameTiming",
    prop: "styleAndLayoutStart",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceLongAnimationFrameTiming",
    prop: "toJSON",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "executionStart",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "forcedStyleAndLayoutDuration",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "invoker",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "invokerType",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "pauseDuration",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "sourceCharPosition",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "sourceFunctionName",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "sourceURL",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "toJSON",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "window",
  },
  {
    featureId: "long-animation-frames",
    kind: "instanceMember",
    iface: "PerformanceScriptTiming",
    prop: "windowAttribution",
  },
  {
    featureId: "longtasks",
    kind: "instanceMember",
    iface: "PerformanceLongTaskTiming",
    prop: "attribution",
  },
  {
    featureId: "longtasks",
    kind: "instanceMember",
    iface: "PerformanceLongTaskTiming",
    prop: "toJSON",
  },
  {
    featureId: "longtasks",
    kind: "instanceMember",
    iface: "TaskAttributionTiming",
    prop: "containerId",
  },
  {
    featureId: "longtasks",
    kind: "instanceMember",
    iface: "TaskAttributionTiming",
    prop: "containerName",
  },
  {
    featureId: "longtasks",
    kind: "instanceMember",
    iface: "TaskAttributionTiming",
    prop: "containerSrc",
  },
  {
    featureId: "longtasks",
    kind: "instanceMember",
    iface: "TaskAttributionTiming",
    prop: "containerType",
  },
  {
    featureId: "longtasks",
    kind: "instanceMember",
    iface: "TaskAttributionTiming",
    prop: "toJSON",
  },
  {
    featureId: "magnetometer",
    kind: "newIdent",
    name: "Magnetometer",
  },
  {
    featureId: "magnetometer",
    kind: "instanceMember",
    iface: "Magnetometer",
    prop: "x",
  },
  {
    featureId: "magnetometer",
    kind: "instanceMember",
    iface: "Magnetometer",
    prop: "y",
  },
  {
    featureId: "magnetometer",
    kind: "instanceMember",
    iface: "Magnetometer",
    prop: "z",
  },
  {
    featureId: "magnetometer",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_magnetometer",
  },
  {
    featureId: "managed-media-source",
    kind: "newIdent",
    name: "ManagedMediaSource",
  },
  {
    featureId: "managed-media-source",
    kind: "instanceMember",
    iface: "ManagedMediaSource",
    prop: "endstreaming_event",
  },
  {
    featureId: "managed-media-source",
    kind: "instanceMember",
    iface: "ManagedMediaSource",
    prop: "startstreaming_event",
  },
  {
    featureId: "managed-media-source",
    kind: "instanceMember",
    iface: "ManagedMediaSource",
    prop: "streaming",
  },
  {
    featureId: "managed-media-source",
    kind: "instanceMember",
    iface: "ManagedSourceBuffer",
    prop: "bufferedchange_event",
  },
  {
    featureId: "matchmedia",
    kind: "instanceMember",
    iface: "MediaQueryList",
    prop: "EventTarget_inheritance",
  },
  {
    featureId: "matchmedia",
    kind: "instanceMember",
    iface: "MediaQueryList",
    prop: "change_event",
  },
  {
    featureId: "matchmedia",
    kind: "instanceMember",
    iface: "MediaQueryList",
    prop: "matches",
  },
  {
    featureId: "matchmedia",
    kind: "instanceMember",
    iface: "MediaQueryList",
    prop: "media",
  },
  {
    featureId: "matchmedia",
    kind: "newIdent",
    name: "MediaQueryListEvent",
  },
  {
    featureId: "matchmedia",
    kind: "instanceMember",
    iface: "MediaQueryListEvent",
    prop: "matches",
  },
  {
    featureId: "matchmedia",
    kind: "instanceMember",
    iface: "MediaQueryListEvent",
    prop: "media",
  },
  {
    featureId: "matchmedia",
    kind: "member",
    base: "window",
    prop: "matchMedia",
  },
  {
    featureId: "mathml",
    kind: "instanceMember",
    iface: "MathMLElement",
    prop: "attributeStyleMap",
  },
  {
    featureId: "mathml",
    kind: "instanceMember",
    iface: "MathMLElement",
    prop: "blur",
  },
  {
    featureId: "mathml",
    kind: "instanceMember",
    iface: "MathMLElement",
    prop: "focus",
  },
  {
    featureId: "mathml",
    kind: "instanceMember",
    iface: "MathMLElement",
    prop: "nonce",
  },
  {
    featureId: "mathml",
    kind: "instanceMember",
    iface: "MathMLElement",
    prop: "style",
  },
  {
    featureId: "mathml",
    kind: "instanceMember",
    iface: "MathMLElement",
    prop: "tabIndex",
  },
  {
    featureId: "measure-memory",
    kind: "instanceMember",
    iface: "Performance",
    prop: "measureUserAgentSpecificMemory",
  },
  {
    featureId: "media-capabilities",
    kind: "instanceMember",
    iface: "MediaCapabilities",
    prop: "decodingInfo",
  },
  {
    featureId: "media-capabilities",
    kind: "instanceMember",
    iface: "MediaCapabilities",
    prop: "encodingInfo",
  },
  {
    featureId: "media-capabilities",
    kind: "member",
    base: "navigator",
    prop: "mediaCapabilities",
  },
  {
    featureId: "media-capabilities",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "mediaCapabilities",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "InputDeviceInfo",
    prop: "getCapabilities",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaDeviceInfo",
    prop: "deviceId",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaDeviceInfo",
    prop: "groupId",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaDeviceInfo",
    prop: "kind",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaDeviceInfo",
    prop: "label",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaDeviceInfo",
    prop: "toJSON",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaDevices",
    prop: "devicechange_event",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaDevices",
    prop: "enumerateDevices",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaDevices",
    prop: "getSupportedConstraints",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaDevices",
    prop: "getUserMedia",
  },
  {
    featureId: "media-capture",
    kind: "newIdent",
    name: "MediaStream",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "active",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "addTrack",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "addtrack_event",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "clone",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "getAudioTracks",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "getTrackById",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "getTracks",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "getVideoTracks",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "id",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "removeTrack",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStream",
    prop: "removetrack_event",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "applyConstraints",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "clone",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "enabled",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "ended_event",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "getCapabilities",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "getConstraints",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "getSettings",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "id",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "kind",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "label",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "mute_event",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "muted",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "readyState",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "stop",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrack",
    prop: "unmute_event",
  },
  {
    featureId: "media-capture",
    kind: "newIdent",
    name: "MediaStreamTrackEvent",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "MediaStreamTrackEvent",
    prop: "track",
  },
  {
    featureId: "media-capture",
    kind: "member",
    base: "navigator",
    prop: "mediaDevices",
  },
  {
    featureId: "media-capture",
    kind: "newIdent",
    name: "OverconstrainedError",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "OverconstrainedError",
    prop: "constraint",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_camera",
  },
  {
    featureId: "media-capture",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_microphone",
  },
  {
    featureId: "media-playback-quality",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "getVideoPlaybackQuality",
  },
  {
    featureId: "media-playback-quality",
    kind: "instanceMember",
    iface: "VideoPlaybackQuality",
    prop: "creationTime",
  },
  {
    featureId: "media-playback-quality",
    kind: "instanceMember",
    iface: "VideoPlaybackQuality",
    prop: "droppedVideoFrames",
  },
  {
    featureId: "media-playback-quality",
    kind: "instanceMember",
    iface: "VideoPlaybackQuality",
    prop: "totalVideoFrames",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "ChapterInformation",
    prop: "artwork",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "ChapterInformation",
    prop: "startTime",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "ChapterInformation",
    prop: "title",
  },
  {
    featureId: "media-session",
    kind: "newIdent",
    name: "MediaMetadata",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaMetadata",
    prop: "album",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaMetadata",
    prop: "artist",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaMetadata",
    prop: "artwork",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaMetadata",
    prop: "chapterInfo",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaMetadata",
    prop: "title",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaSession",
    prop: "metadata",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaSession",
    prop: "playbackState",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaSession",
    prop: "setActionHandler",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaSession",
    prop: "setCameraActive",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaSession",
    prop: "setMicrophoneActive",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaSession",
    prop: "setPositionState",
  },
  {
    featureId: "media-session",
    kind: "instanceMember",
    iface: "MediaSession",
    prop: "setScreenshareActive",
  },
  {
    featureId: "media-session",
    kind: "member",
    base: "navigator",
    prop: "mediaSession",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "AudioTrack",
    prop: "sourceBuffer",
  },
  {
    featureId: "media-source",
    kind: "newIdent",
    name: "BufferedChangeEvent",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "BufferedChangeEvent",
    prop: "addedRanges",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "BufferedChangeEvent",
    prop: "removedRanges",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "srcObject",
  },
  {
    featureId: "media-source",
    kind: "newIdent",
    name: "MediaSource",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "activeSourceBuffers",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "addSourceBuffer",
  },
  {
    featureId: "media-source",
    kind: "callStatic",
    base: "MediaSource",
    prop: "canConstructInDedicatedWorker",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "clearLiveSeekableRange",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "duration",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "endOfStream",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "handle",
  },
  {
    featureId: "media-source",
    kind: "callStatic",
    base: "MediaSource",
    prop: "isTypeSupported",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "readyState",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "removeSourceBuffer",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "setLiveSeekableRange",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "sourceBuffers",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "sourceclose_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "sourceended_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "sourceopen_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "MediaSource",
    prop: "worker_support",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "abort",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "abort_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "appendBuffer",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "appendWindowEnd",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "appendWindowStart",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "audioTracks",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "buffered",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "changeType",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "error_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "mode",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "remove",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "textTracks",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "timestampOffset",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "update_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "updateend_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "updatestart_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "updating",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBuffer",
    prop: "videoTracks",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBufferList",
    prop: "addsourcebuffer_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBufferList",
    prop: "length",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "SourceBufferList",
    prop: "removesourcebuffer_event",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "sourceBuffer",
  },
  {
    featureId: "media-source",
    kind: "instanceMember",
    iface: "VideoTrack",
    prop: "sourceBuffer",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "controller",
  },
  {
    featureId: "mediacontroller",
    kind: "newIdent",
    name: "MediaController",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "buffered",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "currentTime",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "defaultPlaybackRate",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "duration",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "muted",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "pause",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "paused",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "play",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "playbackRate",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "playbackState",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "played",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "seekable",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "unpause",
  },
  {
    featureId: "mediacontroller",
    kind: "instanceMember",
    iface: "MediaController",
    prop: "volume",
  },
  {
    featureId: "mediastream-recording",
    kind: "newIdent",
    name: "BlobEvent",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "BlobEvent",
    prop: "data",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "BlobEvent",
    prop: "timecode",
  },
  {
    featureId: "mediastream-recording",
    kind: "newIdent",
    name: "MediaRecorder",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "audioBitrateMode",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "audioBitsPerSecond",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "dataavailable_event",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "error_event",
  },
  {
    featureId: "mediastream-recording",
    kind: "callStatic",
    base: "MediaRecorder",
    prop: "isTypeSupported",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "mimeType",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "pause",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "pause_event",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "requestData",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "resume",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "resume_event",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "start",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "start_event",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "state",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "stop",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "stop_event",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "stream",
  },
  {
    featureId: "mediastream-recording",
    kind: "instanceMember",
    iface: "MediaRecorder",
    prop: "videoBitsPerSecond",
  },
  {
    featureId: "messageerror",
    kind: "instanceMember",
    iface: "DedicatedWorkerGlobalScope",
    prop: "messageerror_event",
  },
  {
    featureId: "messageerror",
    kind: "instanceMember",
    iface: "MessagePort",
    prop: "messageerror_event",
  },
  {
    featureId: "messageerror",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "messageerror_event",
  },
  {
    featureId: "messageerror",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "messageerror_event",
  },
  {
    featureId: "messageerror",
    kind: "member",
    base: "window",
    prop: "messageerror_event",
  },
  {
    featureId: "messageerror",
    kind: "instanceMember",
    iface: "Worker",
    prop: "messageerror_event",
  },
  {
    featureId: "meta",
    kind: "instanceMember",
    iface: "HTMLMetaElement",
    prop: "content",
  },
  {
    featureId: "meta",
    kind: "instanceMember",
    iface: "HTMLMetaElement",
    prop: "httpEquiv",
  },
  {
    featureId: "meta",
    kind: "instanceMember",
    iface: "HTMLMetaElement",
    prop: "media",
  },
  {
    featureId: "meta",
    kind: "instanceMember",
    iface: "HTMLMetaElement",
    prop: "name",
  },
  {
    featureId: "meter",
    kind: "instanceMember",
    iface: "HTMLMeterElement",
    prop: "high",
  },
  {
    featureId: "meter",
    kind: "instanceMember",
    iface: "HTMLMeterElement",
    prop: "labels",
  },
  {
    featureId: "meter",
    kind: "instanceMember",
    iface: "HTMLMeterElement",
    prop: "low",
  },
  {
    featureId: "meter",
    kind: "instanceMember",
    iface: "HTMLMeterElement",
    prop: "max",
  },
  {
    featureId: "meter",
    kind: "instanceMember",
    iface: "HTMLMeterElement",
    prop: "min",
  },
  {
    featureId: "meter",
    kind: "instanceMember",
    iface: "HTMLMeterElement",
    prop: "optimum",
  },
  {
    featureId: "meter",
    kind: "instanceMember",
    iface: "HTMLMeterElement",
    prop: "value",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "auxclick_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "click_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "contextmenu_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "dblclick_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "mousedown_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "mouseenter_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "mouseleave_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "mousemove_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "mouseout_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "mouseover_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "mouseup_event",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "click",
  },
  {
    featureId: "mouse-events",
    kind: "newIdent",
    name: "MouseEvent",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "altKey",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "button",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "buttons",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "clientX",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "clientY",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "ctrlKey",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "getModifierState",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "metaKey",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "movementX",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "movementY",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "offsetX",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "offsetY",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "pageX",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "pageY",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "relatedTarget",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "screenX",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "screenY",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "shiftKey",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "x",
  },
  {
    featureId: "mouse-events",
    kind: "instanceMember",
    iface: "MouseEvent",
    prop: "y",
  },
  {
    featureId: "move-before",
    kind: "instanceMember",
    iface: "Document",
    prop: "moveBefore",
  },
  {
    featureId: "move-before",
    kind: "instanceMember",
    iface: "DocumentFragment",
    prop: "moveBefore",
  },
  {
    featureId: "move-before",
    kind: "instanceMember",
    iface: "Element",
    prop: "moveBefore",
  },
  {
    featureId: "mutation-events",
    kind: "instanceMember",
    iface: "MutationEvent",
    prop: "attrChange",
  },
  {
    featureId: "mutation-events",
    kind: "instanceMember",
    iface: "MutationEvent",
    prop: "attrName",
  },
  {
    featureId: "mutation-events",
    kind: "instanceMember",
    iface: "MutationEvent",
    prop: "initMutationEvent",
  },
  {
    featureId: "mutation-events",
    kind: "instanceMember",
    iface: "MutationEvent",
    prop: "newValue",
  },
  {
    featureId: "mutation-events",
    kind: "instanceMember",
    iface: "MutationEvent",
    prop: "prevValue",
  },
  {
    featureId: "mutation-events",
    kind: "instanceMember",
    iface: "MutationEvent",
    prop: "relatedNode",
  },
  {
    featureId: "mutationobserver",
    kind: "newIdent",
    name: "MutationObserver",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationObserver",
    prop: "disconnect",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationObserver",
    prop: "observe",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationObserver",
    prop: "takeRecords",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationRecord",
    prop: "addedNodes",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationRecord",
    prop: "attributeName",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationRecord",
    prop: "attributeNamespace",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationRecord",
    prop: "nextSibling",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationRecord",
    prop: "oldValue",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationRecord",
    prop: "previousSibling",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationRecord",
    prop: "removedNodes",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationRecord",
    prop: "target",
  },
  {
    featureId: "mutationobserver",
    kind: "instanceMember",
    iface: "MutationRecord",
    prop: "type",
  },
  {
    featureId: "namespace",
    kind: "instanceMember",
    iface: "CSSNamespaceRule",
    prop: "namespaceURI",
  },
  {
    featureId: "namespace",
    kind: "instanceMember",
    iface: "CSSNamespaceRule",
    prop: "prefix",
  },
  {
    featureId: "navigation",
    kind: "newIdent",
    name: "NavigateEvent",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "canIntercept",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "destination",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "downloadRequest",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "formData",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "hasUAVisualTransition",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "hashChange",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "info",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "intercept",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "navigationType",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "scroll",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "signal",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigateEvent",
    prop: "userInitiated",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "activation",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "back",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "canGoBack",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "canGoForward",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "currentEntry",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "currententrychange_event",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "entries",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "forward",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "navigate",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "navigate_event",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "navigateerror_event",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "navigatesuccess_event",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "reload",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "transition",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "traverseTo",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "Navigation",
    prop: "updateCurrentEntry",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationActivation",
    prop: "entry",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationActivation",
    prop: "from",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationActivation",
    prop: "navigationType",
  },
  {
    featureId: "navigation",
    kind: "newIdent",
    name: "NavigationCurrentEntryChangeEvent",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationCurrentEntryChangeEvent",
    prop: "from",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationCurrentEntryChangeEvent",
    prop: "navigationType",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationDestination",
    prop: "getState",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationDestination",
    prop: "id",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationDestination",
    prop: "index",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationDestination",
    prop: "key",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationDestination",
    prop: "sameDocument",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationDestination",
    prop: "url",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationHistoryEntry",
    prop: "dispose_event",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationHistoryEntry",
    prop: "getState",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationHistoryEntry",
    prop: "id",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationHistoryEntry",
    prop: "index",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationHistoryEntry",
    prop: "key",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationHistoryEntry",
    prop: "sameDocument",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationHistoryEntry",
    prop: "url",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationTransition",
    prop: "finished",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationTransition",
    prop: "from",
  },
  {
    featureId: "navigation",
    kind: "instanceMember",
    iface: "NavigationTransition",
    prop: "navigationType",
  },
  {
    featureId: "navigation",
    kind: "member",
    base: "window",
    prop: "navigation",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "criticalCHRestart",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "domComplete",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "domContentLoadedEventEnd",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "domContentLoadedEventStart",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "domInteractive",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "loadEventEnd",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "loadEventStart",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "redirectCount",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "toJSON",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "type",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "unloadEventEnd",
  },
  {
    featureId: "navigation-timing",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "unloadEventStart",
  },
  {
    featureId: "navigator",
    kind: "member",
    base: "window",
    prop: "navigator",
  },
  {
    featureId: "nesting",
    kind: "instanceMember",
    iface: "CSSNestedDeclarations",
    prop: "style",
  },
  {
    featureId: "nesting",
    kind: "instanceMember",
    iface: "CSSStyleRule",
    prop: "cssRules",
  },
  {
    featureId: "nesting",
    kind: "instanceMember",
    iface: "CSSStyleRule",
    prop: "deleteRule",
  },
  {
    featureId: "nesting",
    kind: "instanceMember",
    iface: "CSSStyleRule",
    prop: "insertRule",
  },
  {
    featureId: "network-information",
    kind: "member",
    base: "navigator",
    prop: "connection",
  },
  {
    featureId: "network-information",
    kind: "instanceMember",
    iface: "NetworkInformation",
    prop: "change_event",
  },
  {
    featureId: "network-information",
    kind: "instanceMember",
    iface: "NetworkInformation",
    prop: "downlink",
  },
  {
    featureId: "network-information",
    kind: "instanceMember",
    iface: "NetworkInformation",
    prop: "downlinkMax",
  },
  {
    featureId: "network-information",
    kind: "instanceMember",
    iface: "NetworkInformation",
    prop: "effectiveType",
  },
  {
    featureId: "network-information",
    kind: "instanceMember",
    iface: "NetworkInformation",
    prop: "rtt",
  },
  {
    featureId: "network-information",
    kind: "instanceMember",
    iface: "NetworkInformation",
    prop: "type",
  },
  {
    featureId: "network-information",
    kind: "instanceMember",
    iface: "NetworkInformation",
    prop: "worker_support",
  },
  {
    featureId: "network-information",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "connection",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "Document",
    prop: "hasUnpartitionedCookieAccess",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "BroadcastChannel",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "SharedWorker",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "caches",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "createObjectURL",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "estimate",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "getDirectory",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "indexedDB",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "localStorage",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "locks",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "revokeObjectURL",
  },
  {
    featureId: "non-cookie-storage-access",
    kind: "instanceMember",
    iface: "StorageAccessHandle",
    prop: "sessionStorage",
  },
  {
    featureId: "notifications",
    kind: "newIdent",
    name: "Notification",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "actions",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "badge",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "body",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "click_event",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "close",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "close_event",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "data",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "dir",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "error_event",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "icon",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "image",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "lang",
  },
  {
    featureId: "notifications",
    kind: "callStatic",
    base: "Notification",
    prop: "maxActions",
  },
  {
    featureId: "notifications",
    kind: "callStatic",
    base: "Notification",
    prop: "permission",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "renotify",
  },
  {
    featureId: "notifications",
    kind: "callStatic",
    base: "Notification",
    prop: "requestPermission",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "requireInteraction",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "secure_context_required",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "show_event",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "silent",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "tag",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "timestamp",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "title",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "vibrate",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Notification",
    prop: "worker_support",
  },
  {
    featureId: "notifications",
    kind: "newIdent",
    name: "NotificationEvent",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "NotificationEvent",
    prop: "action",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "NotificationEvent",
    prop: "notification",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_notifications",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "notificationclick_event",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "notificationclose_event",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "getNotifications",
  },
  {
    featureId: "notifications",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "showNotification",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "Hz",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "Q",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "cap",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "ch",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "cm",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "cqb",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "cqh",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "cqi",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "cqmax",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "cqmin",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "cqw",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "deg",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "dpcm",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "dpi",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "dppx",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "dvb",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "dvh",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "dvi",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "dvmax",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "dvmin",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "dvw",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "em",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "ex",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "fr",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "grad",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "ic",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "in",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "kHz",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "lh",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "lvb",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "lvh",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "lvi",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "lvmax",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "lvmin",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "lvw",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "mm",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "ms",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "number",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "pc",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "percent",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "pt",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "px",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "rad",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "rcap",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "rch",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "rem",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "rex",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "ric",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "rlh",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "s",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "svb",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "svh",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "svi",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "svmax",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "svmin",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "svw",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "turn",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "vb",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "vh",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "vi",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "vmax",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "vmin",
  },
  {
    featureId: "numeric-factory-functions",
    kind: "callStatic",
    base: "CSS",
    prop: "vw",
  },
  {
    featureId: "object",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "contentDocument",
  },
  {
    featureId: "object",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "contentWindow",
  },
  {
    featureId: "object",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "data",
  },
  {
    featureId: "object",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "form",
  },
  {
    featureId: "object",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "getSVGDocument",
  },
  {
    featureId: "object",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "height",
  },
  {
    featureId: "object",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "name",
  },
  {
    featureId: "object",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "type",
  },
  {
    featureId: "object",
    kind: "instanceMember",
    iface: "HTMLObjectElement",
    prop: "width",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "EventTarget",
    prop: "when",
  },
  {
    featureId: "observable",
    kind: "newIdent",
    name: "Observable",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "catch",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "drop",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "every",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "filter",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "finally",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "find",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "first",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "flatMap",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "forEach",
  },
  {
    featureId: "observable",
    kind: "callStatic",
    base: "Observable",
    prop: "from",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "inspect",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "last",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "map",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "reduce",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "some",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "subscribe",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "switchMap",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "take",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "takeUntil",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Observable",
    prop: "toArray",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Subscriber",
    prop: "active",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Subscriber",
    prop: "addTeardown",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Subscriber",
    prop: "complete",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Subscriber",
    prop: "error",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Subscriber",
    prop: "next",
  },
  {
    featureId: "observable",
    kind: "instanceMember",
    iface: "Subscriber",
    prop: "signal",
  },
  {
    featureId: "oes-vertex-array-object",
    kind: "instanceMember",
    iface: "OES_vertex_array_object",
    prop: "bindVertexArrayOES",
  },
  {
    featureId: "oes-vertex-array-object",
    kind: "instanceMember",
    iface: "OES_vertex_array_object",
    prop: "createVertexArrayOES",
  },
  {
    featureId: "oes-vertex-array-object",
    kind: "instanceMember",
    iface: "OES_vertex_array_object",
    prop: "deleteVertexArrayOES",
  },
  {
    featureId: "oes-vertex-array-object",
    kind: "instanceMember",
    iface: "OES_vertex_array_object",
    prop: "isVertexArrayOES",
  },
  {
    featureId: "offline-audio-context",
    kind: "newIdent",
    name: "OfflineAudioCompletionEvent",
  },
  {
    featureId: "offline-audio-context",
    kind: "instanceMember",
    iface: "OfflineAudioCompletionEvent",
    prop: "renderedBuffer",
  },
  {
    featureId: "offline-audio-context",
    kind: "newIdent",
    name: "OfflineAudioContext",
  },
  {
    featureId: "offline-audio-context",
    kind: "instanceMember",
    iface: "OfflineAudioContext",
    prop: "complete_event",
  },
  {
    featureId: "offline-audio-context",
    kind: "instanceMember",
    iface: "OfflineAudioContext",
    prop: "length",
  },
  {
    featureId: "offline-audio-context",
    kind: "instanceMember",
    iface: "OfflineAudioContext",
    prop: "resume",
  },
  {
    featureId: "offline-audio-context",
    kind: "instanceMember",
    iface: "OfflineAudioContext",
    prop: "startRendering",
  },
  {
    featureId: "offline-audio-context",
    kind: "instanceMember",
    iface: "OfflineAudioContext",
    prop: "suspend",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "transferControlToOffscreen",
  },
  {
    featureId: "offscreen-canvas",
    kind: "newIdent",
    name: "OffscreenCanvas",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvas",
    prop: "convertToBlob",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvas",
    prop: "getContext",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvas",
    prop: "height",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvas",
    prop: "transferToImageBitmap",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvas",
    prop: "width",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "arc",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "arcTo",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "beginPath",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "bezierCurveTo",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "canvas",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "clearRect",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "clip",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "closePath",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "createImageData",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "createLinearGradient",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "createPattern",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "createRadialGradient",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "direction",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "drawImage",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "ellipse",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "fill",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "fillRect",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "fillStyle",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "fillText",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "filter",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "font",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "fontKerning",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "fontStretch",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "fontVariantCaps",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "getImageData",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "getLineDash",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "getTransform",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "globalAlpha",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "globalCompositeOperation",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "imageSmoothingEnabled",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "imageSmoothingQuality",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "isPointInPath",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "isPointInStroke",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "letterSpacing",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "lineCap",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "lineDashOffset",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "lineJoin",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "lineTo",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "lineWidth",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "measureText",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "miterLimit",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "moveTo",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "putImageData",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "quadraticCurveTo",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "rect",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "resetTransform",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "restore",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "rotate",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "save",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "scale",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "setLineDash",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "setTransform",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "shadowBlur",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "shadowColor",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "shadowOffsetX",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "shadowOffsetY",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "stroke",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "strokeRect",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "strokeStyle",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "strokeText",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "textAlign",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "textBaseline",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "textRendering",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "transform",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "translate",
  },
  {
    featureId: "offscreen-canvas",
    kind: "instanceMember",
    iface: "OffscreenCanvasRenderingContext2D",
    prop: "wordSpacing",
  },
  {
    featureId: "online",
    kind: "member",
    base: "navigator",
    prop: "onLine",
  },
  {
    featureId: "online",
    kind: "member",
    base: "window",
    prop: "offline_event",
  },
  {
    featureId: "online",
    kind: "member",
    base: "window",
    prop: "online_event",
  },
  {
    featureId: "online",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "offline_event",
  },
  {
    featureId: "online",
    kind: "instanceMember",
    iface: "WorkerGlobalScope",
    prop: "online_event",
  },
  {
    featureId: "online",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "onLine",
  },
  {
    featureId: "orientation-sensor",
    kind: "newIdent",
    name: "AbsoluteOrientationSensor",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "OrientationSensor",
    prop: "populateMatrix",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "OrientationSensor",
    prop: "quaternion",
  },
  {
    featureId: "orientation-sensor",
    kind: "newIdent",
    name: "RelativeOrientationSensor",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "Sensor",
    prop: "activate_event",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "Sensor",
    prop: "activated",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "Sensor",
    prop: "error_event",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "Sensor",
    prop: "hasReading",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "Sensor",
    prop: "reading_event",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "Sensor",
    prop: "start",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "Sensor",
    prop: "stop",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "Sensor",
    prop: "timestamp",
  },
  {
    featureId: "orientation-sensor",
    kind: "newIdent",
    name: "SensorErrorEvent",
  },
  {
    featureId: "orientation-sensor",
    kind: "instanceMember",
    iface: "SensorErrorEvent",
    prop: "error",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemDirectoryHandle",
    prop: "entries",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemDirectoryHandle",
    prop: "getDirectoryHandle",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemDirectoryHandle",
    prop: "getFileHandle",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemDirectoryHandle",
    prop: "keys",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemDirectoryHandle",
    prop: "removeEntry",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemDirectoryHandle",
    prop: "resolve",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemDirectoryHandle",
    prop: "values",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemFileHandle",
    prop: "createSyncAccessHandle",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemFileHandle",
    prop: "getFile",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemHandle",
    prop: "isSameEntry",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemHandle",
    prop: "kind",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemHandle",
    prop: "name",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemSyncAccessHandle",
    prop: "close",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemSyncAccessHandle",
    prop: "flush",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemSyncAccessHandle",
    prop: "getSize",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemSyncAccessHandle",
    prop: "read",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemSyncAccessHandle",
    prop: "truncate",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "FileSystemSyncAccessHandle",
    prop: "write",
  },
  {
    featureId: "origin-private-file-system",
    kind: "instanceMember",
    iface: "StorageManager",
    prop: "getDirectory",
  },
  {
    featureId: "output",
    kind: "newIdent",
    name: "HTMLOutputElement",
  },
  {
    featureId: "output",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "defaultValue",
  },
  {
    featureId: "output",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "form",
  },
  {
    featureId: "output",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "htmlFor",
  },
  {
    featureId: "output",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "labels",
  },
  {
    featureId: "output",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "name",
  },
  {
    featureId: "output",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "type",
  },
  {
    featureId: "output",
    kind: "instanceMember",
    iface: "HTMLOutputElement",
    prop: "value",
  },
  {
    featureId: "ovr-multiview2",
    kind: "instanceMember",
    iface: "OVR_multiview2",
    prop: "framebufferTextureMultiviewOVR",
  },
  {
    featureId: "page-lifecycle",
    kind: "instanceMember",
    iface: "Document",
    prop: "freeze_event",
  },
  {
    featureId: "page-lifecycle",
    kind: "instanceMember",
    iface: "Document",
    prop: "resume_event",
  },
  {
    featureId: "page-lifecycle",
    kind: "instanceMember",
    iface: "Document",
    prop: "wasDiscarded",
  },
  {
    featureId: "page-transition-events",
    kind: "newIdent",
    name: "PageTransitionEvent",
  },
  {
    featureId: "page-transition-events",
    kind: "instanceMember",
    iface: "PageTransitionEvent",
    prop: "persisted",
  },
  {
    featureId: "page-transition-events",
    kind: "member",
    base: "window",
    prop: "pagehide_event",
  },
  {
    featureId: "page-transition-events",
    kind: "member",
    base: "window",
    prop: "pageshow_event",
  },
  {
    featureId: "page-visibility",
    kind: "instanceMember",
    iface: "Document",
    prop: "hidden",
  },
  {
    featureId: "page-visibility",
    kind: "instanceMember",
    iface: "Document",
    prop: "visibilityState",
  },
  {
    featureId: "page-visibility",
    kind: "instanceMember",
    iface: "Document",
    prop: "visibilitychange_event",
  },
  {
    featureId: "page-visibility-state",
    kind: "instanceMember",
    iface: "VisibilityStateEntry",
    prop: "duration",
  },
  {
    featureId: "page-visibility-state",
    kind: "instanceMember",
    iface: "VisibilityStateEntry",
    prop: "entryType",
  },
  {
    featureId: "page-visibility-state",
    kind: "instanceMember",
    iface: "VisibilityStateEntry",
    prop: "name",
  },
  {
    featureId: "page-visibility-state",
    kind: "instanceMember",
    iface: "VisibilityStateEntry",
    prop: "startTime",
  },
  {
    featureId: "paint",
    kind: "callStatic",
    base: "CSS",
    prop: "paintWorklet",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "beginPath",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "clearRect",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "clip",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "createLinearGradient",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "createPattern",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "createRadialGradient",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "drawImage",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "fill",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "fillRect",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "fillStyle",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "filter",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "getLineDash",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "getTransform",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "globalAlpha",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "globalCompositeOperation",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "imageSmoothingEnabled",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "imageSmoothingQuality",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "isPointInPath",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "isPointInStroke",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "lineCap",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "lineDashOffset",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "lineJoin",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "lineWidth",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "miterLimit",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "resetTransform",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "restore",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "rotate",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "save",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "scale",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "setLineDash",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "setTransform",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "shadowBlur",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "shadowColor",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "shadowOffsetX",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "shadowOffsetY",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "stroke",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "strokeRect",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "strokeStyle",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "transform",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintRenderingContext2D",
    prop: "translate",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintSize",
    prop: "height",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintSize",
    prop: "width",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintWorkletGlobalScope",
    prop: "devicePixelRatio",
  },
  {
    featureId: "paint",
    kind: "instanceMember",
    iface: "PaintWorkletGlobalScope",
    prop: "registerPaint",
  },
  {
    featureId: "paint-timing",
    kind: "instanceMember",
    iface: "PerformancePaintTiming",
    prop: "first-contentful-paint",
  },
  {
    featureId: "paint-timing",
    kind: "instanceMember",
    iface: "PerformancePaintTiming",
    prop: "first-paint",
  },
  {
    featureId: "parse-html-unsafe",
    kind: "callStatic",
    base: "Document",
    prop: "parseHTMLUnsafe",
  },
  {
    featureId: "parse-html-unsafe",
    kind: "instanceMember",
    iface: "Element",
    prop: "setHTMLUnsafe",
  },
  {
    featureId: "parse-html-unsafe",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "setHTMLUnsafe",
  },
  {
    featureId: "password-credentials",
    kind: "newIdent",
    name: "PasswordCredential",
  },
  {
    featureId: "password-credentials",
    kind: "instanceMember",
    iface: "PasswordCredential",
    prop: "iconURL",
  },
  {
    featureId: "password-credentials",
    kind: "instanceMember",
    iface: "PasswordCredential",
    prop: "name",
  },
  {
    featureId: "password-credentials",
    kind: "instanceMember",
    iface: "PasswordCredential",
    prop: "password",
  },
  {
    featureId: "payment-handler",
    kind: "newIdent",
    name: "CanMakePaymentEvent",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "CanMakePaymentEvent",
    prop: "respondWith",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentManager",
    prop: "enableDelegations",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentManager",
    prop: "secure_context_required",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentManager",
    prop: "userHint",
  },
  {
    featureId: "payment-handler",
    kind: "newIdent",
    name: "PaymentRequestEvent",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "changePaymentMethod",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "changeShippingAddress",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "changeShippingOption",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "methodData",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "modifiers",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "openWindow",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "paymentOptions",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "paymentRequestId",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "paymentRequestOrigin",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "respondWith",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "shippingOptions",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "topOrigin",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "PaymentRequestEvent",
    prop: "total",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_payment-handler",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "canmakepayment_event",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "paymentrequest_event",
  },
  {
    featureId: "payment-handler",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "paymentManager",
  },
  {
    featureId: "payment-request",
    kind: "newIdent",
    name: "PaymentMethodChangeEvent",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentMethodChangeEvent",
    prop: "methodDetails",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentMethodChangeEvent",
    prop: "methodName",
  },
  {
    featureId: "payment-request",
    kind: "newIdent",
    name: "PaymentRequest",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentRequest",
    prop: "abort",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentRequest",
    prop: "canMakePayment",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentRequest",
    prop: "id",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentRequest",
    prop: "paymentmethodchange_event",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentRequest",
    prop: "show",
  },
  {
    featureId: "payment-request",
    kind: "newIdent",
    name: "PaymentRequestUpdateEvent",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentRequestUpdateEvent",
    prop: "secure_context_required",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentRequestUpdateEvent",
    prop: "updateWith",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "complete",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "details",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "methodName",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "payerEmail",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "payerName",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "payerPhone",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "payerdetailchange_event",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "requestId",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "retry",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "shippingAddress",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "shippingOption",
  },
  {
    featureId: "payment-request",
    kind: "instanceMember",
    iface: "PaymentResponse",
    prop: "toJSON",
  },
  {
    featureId: "pdf-viewer",
    kind: "member",
    base: "navigator",
    prop: "pdfViewerEnabled",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "clearMarks",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "clearMeasures",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "getEntries",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "getEntriesByName",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "getEntriesByType",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "mark",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "measure",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "now",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "timeOrigin",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "Performance",
    prop: "toJSON",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceEntry",
    prop: "duration",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceEntry",
    prop: "entryType",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceEntry",
    prop: "name",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceEntry",
    prop: "startTime",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceEntry",
    prop: "toJSON",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceEntry",
    prop: "worker_support",
  },
  {
    featureId: "performance",
    kind: "newIdent",
    name: "PerformanceMark",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceMark",
    prop: "detail",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceMeasure",
    prop: "detail",
  },
  {
    featureId: "performance",
    kind: "newIdent",
    name: "PerformanceObserver",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceObserver",
    prop: "disconnect",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceObserver",
    prop: "observe",
  },
  {
    featureId: "performance",
    kind: "callStatic",
    base: "PerformanceObserver",
    prop: "supportedEntryTypes",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceObserver",
    prop: "takeRecords",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceObserver",
    prop: "worker_support",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceObserverEntryList",
    prop: "getEntries",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceObserverEntryList",
    prop: "getEntriesByName",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "PerformanceObserverEntryList",
    prop: "getEntriesByType",
  },
  {
    featureId: "performance",
    kind: "instanceMember",
    iface: "performance",
    prop: "worker_support",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "Performance",
    prop: "navigation",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "Performance",
    prop: "timing",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceNavigation",
    prop: "redirectCount",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceNavigation",
    prop: "toJSON",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceNavigation",
    prop: "type",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "connectEnd",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "connectStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "domComplete",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "domContentLoadedEventEnd",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "domContentLoadedEventStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "domInteractive",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "domLoading",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "domainLookupEnd",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "domainLookupStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "fetchStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "loadEventEnd",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "loadEventStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "navigationStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "redirectEnd",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "redirectStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "requestStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "responseEnd",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "responseStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "secureConnectionStart",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "toJSON",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "unloadEventEnd",
  },
  {
    featureId: "performancetiming",
    kind: "instanceMember",
    iface: "PerformanceTiming",
    prop: "unloadEventStart",
  },
  {
    featureId: "periodic-background-sync",
    kind: "newIdent",
    name: "PeriodicSyncEvent",
  },
  {
    featureId: "periodic-background-sync",
    kind: "instanceMember",
    iface: "PeriodicSyncEvent",
    prop: "tag",
  },
  {
    featureId: "periodic-background-sync",
    kind: "instanceMember",
    iface: "PeriodicSyncManager",
    prop: "getTags",
  },
  {
    featureId: "periodic-background-sync",
    kind: "instanceMember",
    iface: "PeriodicSyncManager",
    prop: "register",
  },
  {
    featureId: "periodic-background-sync",
    kind: "instanceMember",
    iface: "PeriodicSyncManager",
    prop: "unregister",
  },
  {
    featureId: "periodic-background-sync",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "periodicsync_event",
  },
  {
    featureId: "periodic-background-sync",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "periodicSync",
  },
  {
    featureId: "permissions",
    kind: "member",
    base: "navigator",
    prop: "permissions",
  },
  {
    featureId: "permissions",
    kind: "instanceMember",
    iface: "PermissionStatus",
    prop: "change_event",
  },
  {
    featureId: "permissions",
    kind: "instanceMember",
    iface: "PermissionStatus",
    prop: "name",
  },
  {
    featureId: "permissions",
    kind: "instanceMember",
    iface: "PermissionStatus",
    prop: "state",
  },
  {
    featureId: "permissions",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "query",
  },
  {
    featureId: "permissions",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "request",
  },
  {
    featureId: "permissions",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "permissions",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "Document",
    prop: "exitPictureInPicture",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "Document",
    prop: "pictureInPictureElement",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "Document",
    prop: "pictureInPictureEnabled",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "disablePictureInPicture",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "enterpictureinpicture_event",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "leavepictureinpicture_event",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "requestPictureInPicture",
  },
  {
    featureId: "picture-in-picture",
    kind: "newIdent",
    name: "PictureInPictureEvent",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "PictureInPictureEvent",
    prop: "pictureInPictureWindow",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "PictureInPictureWindow",
    prop: "height",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "PictureInPictureWindow",
    prop: "resize_event",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "PictureInPictureWindow",
    prop: "width",
  },
  {
    featureId: "picture-in-picture",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "pictureInPictureElement",
  },
  {
    featureId: "ping",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "ping",
  },
  {
    featureId: "ping",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "ping",
  },
  {
    featureId: "ping",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "ping",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "gotpointercapture_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "hasPointerCapture",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "lostpointercapture_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "pointercancel_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "pointerdown_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "pointerenter_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "pointerleave_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "pointermove_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "pointerout_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "pointerover_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "pointerrawupdate_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "pointerup_event",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "releasePointerCapture",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "Element",
    prop: "setPointerCapture",
  },
  {
    featureId: "pointer-events-api",
    kind: "member",
    base: "navigator",
    prop: "maxTouchPoints",
  },
  {
    featureId: "pointer-events-api",
    kind: "newIdent",
    name: "PointerEvent",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "altitudeAngle",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "azimuthAngle",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "getCoalescedEvents",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "getPredictedEvents",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "height",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "isPrimary",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "persistentDeviceId",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "pointerId",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "pointerType",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "pressure",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "tangentialPressure",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "tiltX",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "tiltY",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "twist",
  },
  {
    featureId: "pointer-events-api",
    kind: "instanceMember",
    iface: "PointerEvent",
    prop: "width",
  },
  {
    featureId: "pointer-lock",
    kind: "instanceMember",
    iface: "Document",
    prop: "exitPointerLock",
  },
  {
    featureId: "pointer-lock",
    kind: "instanceMember",
    iface: "Document",
    prop: "pointerLockElement",
  },
  {
    featureId: "pointer-lock",
    kind: "instanceMember",
    iface: "Document",
    prop: "pointerlockchange_event",
  },
  {
    featureId: "pointer-lock",
    kind: "instanceMember",
    iface: "Document",
    prop: "pointerlockerror_event",
  },
  {
    featureId: "pointer-lock",
    kind: "instanceMember",
    iface: "Element",
    prop: "requestPointerLock",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "popoverTargetAction",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "HTMLButtonElement",
    prop: "popoverTargetElement",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "beforetoggle_event",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "hidePopover",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "popover",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "showPopover",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "togglePopover",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "popoverTargetAction",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "popoverTargetElement",
  },
  {
    featureId: "popover",
    kind: "newIdent",
    name: "ToggleEvent",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "ToggleEvent",
    prop: "newState",
  },
  {
    featureId: "popover",
    kind: "instanceMember",
    iface: "ToggleEvent",
    prop: "oldState",
  },
  {
    featureId: "postmessage",
    kind: "instanceMember",
    iface: "DedicatedWorkerGlobalScope",
    prop: "message_event",
  },
  {
    featureId: "postmessage",
    kind: "instanceMember",
    iface: "DedicatedWorkerGlobalScope",
    prop: "postMessage",
  },
  {
    featureId: "postmessage",
    kind: "newIdent",
    name: "MessageEvent",
  },
  {
    featureId: "postmessage",
    kind: "instanceMember",
    iface: "MessageEvent",
    prop: "data",
  },
  {
    featureId: "postmessage",
    kind: "instanceMember",
    iface: "MessageEvent",
    prop: "lastEventId",
  },
  {
    featureId: "postmessage",
    kind: "instanceMember",
    iface: "MessageEvent",
    prop: "origin",
  },
  {
    featureId: "postmessage",
    kind: "instanceMember",
    iface: "MessageEvent",
    prop: "source",
  },
  {
    featureId: "postmessage",
    kind: "member",
    base: "window",
    prop: "message_event",
  },
  {
    featureId: "postmessage",
    kind: "member",
    base: "window",
    prop: "postMessage",
  },
  {
    featureId: "postmessage",
    kind: "instanceMember",
    iface: "Worker",
    prop: "message_event",
  },
  {
    featureId: "postmessage",
    kind: "instanceMember",
    iface: "Worker",
    prop: "postMessage",
  },
  {
    featureId: "preloading-responsive-images",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "imageSizes",
  },
  {
    featureId: "preloading-responsive-images",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "imageSrcset",
  },
  {
    featureId: "presentation-api",
    kind: "member",
    base: "navigator",
    prop: "presentation",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "Presentation",
    prop: "defaultRequest",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "Presentation",
    prop: "receiver",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationAvailability",
    prop: "change_event",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationAvailability",
    prop: "value",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "binaryType",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "close",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "close_event",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "connect_event",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "id",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "message_event",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "send",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "state",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "terminate",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "terminate_event",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnection",
    prop: "url",
  },
  {
    featureId: "presentation-api",
    kind: "newIdent",
    name: "PresentationConnectionAvailableEvent",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnectionAvailableEvent",
    prop: "connection",
  },
  {
    featureId: "presentation-api",
    kind: "newIdent",
    name: "PresentationConnectionCloseEvent",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnectionCloseEvent",
    prop: "message",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnectionCloseEvent",
    prop: "reason",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnectionList",
    prop: "connectionavailable_event",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationConnectionList",
    prop: "connections",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationReceiver",
    prop: "connectionList",
  },
  {
    featureId: "presentation-api",
    kind: "newIdent",
    name: "PresentationRequest",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationRequest",
    prop: "connectionavailable_event",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationRequest",
    prop: "getAvailability",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationRequest",
    prop: "reconnect",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationRequest",
    prop: "secure_context_required",
  },
  {
    featureId: "presentation-api",
    kind: "instanceMember",
    iface: "PresentationRequest",
    prop: "start",
  },
  {
    featureId: "preserves-pitch",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "preservesPitch",
  },
  {
    featureId: "print",
    kind: "member",
    base: "window",
    prop: "print",
  },
  {
    featureId: "print-events",
    kind: "member",
    base: "window",
    prop: "afterprint_event",
  },
  {
    featureId: "print-events",
    kind: "member",
    base: "window",
    prop: "beforeprint_event",
  },
  {
    featureId: "private-click-measurement",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "attributionSourceId",
  },
  {
    featureId: "profiler",
    kind: "newIdent",
    name: "Profiler",
  },
  {
    featureId: "profiler",
    kind: "instanceMember",
    iface: "Profiler",
    prop: "sampleInterval",
  },
  {
    featureId: "profiler",
    kind: "instanceMember",
    iface: "Profiler",
    prop: "stop",
  },
  {
    featureId: "profiler",
    kind: "instanceMember",
    iface: "Profiler",
    prop: "stopped",
  },
  {
    featureId: "progress",
    kind: "instanceMember",
    iface: "HTMLProgressElement",
    prop: "labels",
  },
  {
    featureId: "progress",
    kind: "instanceMember",
    iface: "HTMLProgressElement",
    prop: "max",
  },
  {
    featureId: "progress",
    kind: "instanceMember",
    iface: "HTMLProgressElement",
    prop: "position",
  },
  {
    featureId: "progress",
    kind: "instanceMember",
    iface: "HTMLProgressElement",
    prop: "value",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_push",
  },
  {
    featureId: "push",
    kind: "newIdent",
    name: "PushEvent",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushEvent",
    prop: "data",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushManager",
    prop: "getSubscription",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushManager",
    prop: "permissionState",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushManager",
    prop: "subscribe",
  },
  {
    featureId: "push",
    kind: "callStatic",
    base: "PushManager",
    prop: "supportedContentEncodings",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushMessageData",
    prop: "arrayBuffer",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushMessageData",
    prop: "blob",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushMessageData",
    prop: "bytes",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushMessageData",
    prop: "json",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushMessageData",
    prop: "text",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscription",
    prop: "endpoint",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscription",
    prop: "expirationTime",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscription",
    prop: "getKey",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscription",
    prop: "options",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscription",
    prop: "toJSON",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscription",
    prop: "unsubscribe",
  },
  {
    featureId: "push",
    kind: "newIdent",
    name: "PushSubscriptionChangeEvent",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscriptionChangeEvent",
    prop: "newSubscription",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscriptionChangeEvent",
    prop: "oldSubscription",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscriptionOptions",
    prop: "applicationServerKey",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "PushSubscriptionOptions",
    prop: "userVisibleOnly",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "push_event",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "pushsubscriptionchange_event",
  },
  {
    featureId: "push",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "pushManager",
  },
  {
    featureId: "q",
    kind: "instanceMember",
    iface: "HTMLQuoteElement",
    prop: "cite",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableByteStreamController",
    prop: "byobRequest",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableByteStreamController",
    prop: "close",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableByteStreamController",
    prop: "desiredSize",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableByteStreamController",
    prop: "enqueue",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableByteStreamController",
    prop: "error",
  },
  {
    featureId: "readable-byte-streams",
    kind: "newIdent",
    name: "ReadableStreamBYOBReader",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableStreamBYOBReader",
    prop: "cancel",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableStreamBYOBReader",
    prop: "closed",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableStreamBYOBReader",
    prop: "read",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableStreamBYOBReader",
    prop: "releaseLock",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableStreamBYOBRequest",
    prop: "respond",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableStreamBYOBRequest",
    prop: "respondWithNewView",
  },
  {
    featureId: "readable-byte-streams",
    kind: "instanceMember",
    iface: "ReadableStreamBYOBRequest",
    prop: "view",
  },
  {
    featureId: "readablestream-from",
    kind: "callStatic",
    base: "ReadableStream",
    prop: "from",
  },
  {
    featureId: "referrer-policy",
    kind: "instanceMember",
    iface: "HTMLAnchorElement",
    prop: "referrerPolicy",
  },
  {
    featureId: "referrer-policy",
    kind: "instanceMember",
    iface: "HTMLAreaElement",
    prop: "referrerPolicy",
  },
  {
    featureId: "referrer-policy",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "referrerPolicy",
  },
  {
    featureId: "referrer-policy",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "referrerPolicy",
  },
  {
    featureId: "referrer-policy",
    kind: "instanceMember",
    iface: "HTMLLinkElement",
    prop: "referrerPolicy",
  },
  {
    featureId: "referrer-policy",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "referrerPolicy",
  },
  {
    featureId: "region-capture",
    kind: "instanceMember",
    iface: "BrowserCaptureMediaStreamTrack",
    prop: "clone",
  },
  {
    featureId: "region-capture",
    kind: "instanceMember",
    iface: "BrowserCaptureMediaStreamTrack",
    prop: "cropTo",
  },
  {
    featureId: "region-capture",
    kind: "callStatic",
    base: "CropTarget",
    prop: "fromElement",
  },
  {
    featureId: "registered-custom-properties",
    kind: "callStatic",
    base: "CSS",
    prop: "registerProperty",
  },
  {
    featureId: "registered-custom-properties",
    kind: "instanceMember",
    iface: "CSSPropertyRule",
    prop: "inherits",
  },
  {
    featureId: "registered-custom-properties",
    kind: "instanceMember",
    iface: "CSSPropertyRule",
    prop: "initialValue",
  },
  {
    featureId: "registered-custom-properties",
    kind: "instanceMember",
    iface: "CSSPropertyRule",
    prop: "name",
  },
  {
    featureId: "registered-custom-properties",
    kind: "instanceMember",
    iface: "CSSPropertyRule",
    prop: "syntax",
  },
  {
    featureId: "registerprotocolhandler",
    kind: "member",
    base: "navigator",
    prop: "registerProtocolHandler",
  },
  {
    featureId: "registerprotocolhandler",
    kind: "member",
    base: "navigator",
    prop: "unregisterProtocolHandler",
  },
  {
    featureId: "remote-playback",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "disableRemotePlayback",
  },
  {
    featureId: "remote-playback",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "remote",
  },
  {
    featureId: "remote-playback",
    kind: "instanceMember",
    iface: "RemotePlayback",
    prop: "cancelWatchAvailability",
  },
  {
    featureId: "remote-playback",
    kind: "instanceMember",
    iface: "RemotePlayback",
    prop: "connect_event",
  },
  {
    featureId: "remote-playback",
    kind: "instanceMember",
    iface: "RemotePlayback",
    prop: "connecting_event",
  },
  {
    featureId: "remote-playback",
    kind: "instanceMember",
    iface: "RemotePlayback",
    prop: "disconnect_event",
  },
  {
    featureId: "remote-playback",
    kind: "instanceMember",
    iface: "RemotePlayback",
    prop: "prompt",
  },
  {
    featureId: "remote-playback",
    kind: "instanceMember",
    iface: "RemotePlayback",
    prop: "state",
  },
  {
    featureId: "remote-playback",
    kind: "instanceMember",
    iface: "RemotePlayback",
    prop: "watchAvailability",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "DeprecationReportBody",
    prop: "anticipatedRemoval",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "DeprecationReportBody",
    prop: "columnNumber",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "DeprecationReportBody",
    prop: "id",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "DeprecationReportBody",
    prop: "lineNumber",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "DeprecationReportBody",
    prop: "message",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "DeprecationReportBody",
    prop: "sourceFile",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "DeprecationReportBody",
    prop: "toJSON",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "InterventionReportBody",
    prop: "columnNumber",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "InterventionReportBody",
    prop: "id",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "InterventionReportBody",
    prop: "lineNumber",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "InterventionReportBody",
    prop: "message",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "InterventionReportBody",
    prop: "sourceFile",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "InterventionReportBody",
    prop: "toJSON",
  },
  {
    featureId: "reporting",
    kind: "newIdent",
    name: "ReportingObserver",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "ReportingObserver",
    prop: "disconnect",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "ReportingObserver",
    prop: "observe",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "ReportingObserver",
    prop: "takeRecords",
  },
  {
    featureId: "reporting",
    kind: "instanceMember",
    iface: "ReportingObserver",
    prop: "worker_support",
  },
  {
    featureId: "request-animation-frame",
    kind: "member",
    base: "window",
    prop: "cancelAnimationFrame",
  },
  {
    featureId: "request-animation-frame",
    kind: "member",
    base: "window",
    prop: "requestAnimationFrame",
  },
  {
    featureId: "request-animation-frame-workers",
    kind: "instanceMember",
    iface: "DedicatedWorkerGlobalScope",
    prop: "cancelAnimationFrame",
  },
  {
    featureId: "request-animation-frame-workers",
    kind: "instanceMember",
    iface: "DedicatedWorkerGlobalScope",
    prop: "requestAnimationFrame",
  },
  {
    featureId: "request-video-frame-callback",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "cancelVideoFrameCallback",
  },
  {
    featureId: "request-video-frame-callback",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "requestVideoFrameCallback",
  },
  {
    featureId: "requestclose",
    kind: "instanceMember",
    iface: "HTMLDialogElement",
    prop: "requestClose",
  },
  {
    featureId: "requestidlecallback",
    kind: "instanceMember",
    iface: "IdleDeadline",
    prop: "didTimeout",
  },
  {
    featureId: "requestidlecallback",
    kind: "instanceMember",
    iface: "IdleDeadline",
    prop: "timeRemaining",
  },
  {
    featureId: "requestidlecallback",
    kind: "member",
    base: "window",
    prop: "cancelIdleCallback",
  },
  {
    featureId: "requestidlecallback",
    kind: "member",
    base: "window",
    prop: "requestIdleCallback",
  },
  {
    featureId: "resize-observer",
    kind: "newIdent",
    name: "ResizeObserver",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserver",
    prop: "disconnect",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserver",
    prop: "observe",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserver",
    prop: "unobserve",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserverEntry",
    prop: "borderBoxSize",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserverEntry",
    prop: "contentBoxSize",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserverEntry",
    prop: "contentRect",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserverEntry",
    prop: "devicePixelContentBoxSize",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserverEntry",
    prop: "target",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserverSize",
    prop: "blockSize",
  },
  {
    featureId: "resize-observer",
    kind: "instanceMember",
    iface: "ResizeObserverSize",
    prop: "inlineSize",
  },
  {
    featureId: "resource-size",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "decodedBodySize",
  },
  {
    featureId: "resource-size",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "encodedBodySize",
  },
  {
    featureId: "resource-size",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "transferSize",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "Performance",
    prop: "clearResourceTimings",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "Performance",
    prop: "resourcetimingbufferfull_event",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "Performance",
    prop: "setResourceTimingBufferSize",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "connectEnd",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "connectStart",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "contentType",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "deliveryType",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "domainLookupEnd",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "domainLookupStart",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "fetchStart",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "firstInterimResponseStart",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "initiatorType",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "nextHopProtocol",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "redirectEnd",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "redirectStart",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "renderBlockingStatus",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "requestStart",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "responseEnd",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "responseStart",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "responseStatus",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "secureConnectionStart",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "toJSON",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "workerStart",
  },
  {
    featureId: "resource-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "worker_support",
  },
  {
    featureId: "sanitizer",
    kind: "callStatic",
    base: "Document",
    prop: "parseHTML",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Element",
    prop: "setHTML",
  },
  {
    featureId: "sanitizer",
    kind: "newIdent",
    name: "Sanitizer",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Sanitizer",
    prop: "allowAttribute",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Sanitizer",
    prop: "allowElement",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Sanitizer",
    prop: "get",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Sanitizer",
    prop: "removeAttribute",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Sanitizer",
    prop: "removeElement",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Sanitizer",
    prop: "removeUnsafe",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Sanitizer",
    prop: "replaceElementWithChildren",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Sanitizer",
    prop: "setComments",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "Sanitizer",
    prop: "setDataAttributes",
  },
  {
    featureId: "sanitizer",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "setHTML",
  },
  {
    featureId: "savedata",
    kind: "instanceMember",
    iface: "NetworkInformation",
    prop: "saveData",
  },
  {
    featureId: "scheduler",
    kind: "instanceMember",
    iface: "Scheduler",
    prop: "postTask",
  },
  {
    featureId: "scheduler",
    kind: "instanceMember",
    iface: "Scheduler",
    prop: "yield",
  },
  {
    featureId: "scheduler",
    kind: "newIdent",
    name: "TaskController",
  },
  {
    featureId: "scheduler",
    kind: "instanceMember",
    iface: "TaskController",
    prop: "setPriority",
  },
  {
    featureId: "scheduler",
    kind: "newIdent",
    name: "TaskPriorityChangeEvent",
  },
  {
    featureId: "scheduler",
    kind: "instanceMember",
    iface: "TaskPriorityChangeEvent",
    prop: "previousPriority",
  },
  {
    featureId: "scheduler",
    kind: "callStatic",
    base: "TaskSignal",
    prop: "any",
  },
  {
    featureId: "scheduler",
    kind: "instanceMember",
    iface: "TaskSignal",
    prop: "priority",
  },
  {
    featureId: "scheduler",
    kind: "instanceMember",
    iface: "TaskSignal",
    prop: "prioritychange_event",
  },
  {
    featureId: "scope",
    kind: "instanceMember",
    iface: "CSSScopeRule",
    prop: "end",
  },
  {
    featureId: "scope",
    kind: "instanceMember",
    iface: "CSSScopeRule",
    prop: "start",
  },
  {
    featureId: "scoped-custom-element-registries",
    kind: "newIdent",
    name: "CustomElementRegistry",
  },
  {
    featureId: "scoped-custom-element-registries",
    kind: "instanceMember",
    iface: "CustomElementRegistry",
    prop: "initialize",
  },
  {
    featureId: "scoped-custom-element-registries",
    kind: "instanceMember",
    iface: "Document",
    prop: "customElementRegistry",
  },
  {
    featureId: "scoped-custom-element-registries",
    kind: "instanceMember",
    iface: "Element",
    prop: "customElementRegistry",
  },
  {
    featureId: "scoped-custom-element-registries",
    kind: "instanceMember",
    iface: "HTMLTemplateElement",
    prop: "shadowRootCustomElementRegistry",
  },
  {
    featureId: "scoped-custom-element-registries",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "customElementRegistry",
  },
  {
    featureId: "screen",
    kind: "instanceMember",
    iface: "Screen",
    prop: "availHeight",
  },
  {
    featureId: "screen",
    kind: "instanceMember",
    iface: "Screen",
    prop: "availWidth",
  },
  {
    featureId: "screen",
    kind: "instanceMember",
    iface: "Screen",
    prop: "colorDepth",
  },
  {
    featureId: "screen",
    kind: "instanceMember",
    iface: "Screen",
    prop: "height",
  },
  {
    featureId: "screen",
    kind: "instanceMember",
    iface: "Screen",
    prop: "pixelDepth",
  },
  {
    featureId: "screen",
    kind: "instanceMember",
    iface: "Screen",
    prop: "width",
  },
  {
    featureId: "screen-capture",
    kind: "newIdent",
    name: "CaptureController",
  },
  {
    featureId: "screen-capture",
    kind: "instanceMember",
    iface: "CaptureController",
    prop: "setFocusBehavior",
  },
  {
    featureId: "screen-capture",
    kind: "instanceMember",
    iface: "MediaDevices",
    prop: "getDisplayMedia",
  },
  {
    featureId: "screen-orientation",
    kind: "instanceMember",
    iface: "Screen",
    prop: "orientation",
  },
  {
    featureId: "screen-orientation",
    kind: "instanceMember",
    iface: "ScreenOrientation",
    prop: "angle",
  },
  {
    featureId: "screen-orientation",
    kind: "instanceMember",
    iface: "ScreenOrientation",
    prop: "change_event",
  },
  {
    featureId: "screen-orientation",
    kind: "instanceMember",
    iface: "ScreenOrientation",
    prop: "type",
  },
  {
    featureId: "screen-orientation-lock",
    kind: "instanceMember",
    iface: "ScreenOrientation",
    prop: "lock",
  },
  {
    featureId: "screen-orientation-lock",
    kind: "instanceMember",
    iface: "ScreenOrientation",
    prop: "unlock",
  },
  {
    featureId: "screen-wake-lock",
    kind: "member",
    base: "navigator",
    prop: "wakeLock",
  },
  {
    featureId: "screen-wake-lock",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_screen-wake-lock",
  },
  {
    featureId: "screen-wake-lock",
    kind: "instanceMember",
    iface: "WakeLock",
    prop: "request",
  },
  {
    featureId: "screen-wake-lock",
    kind: "instanceMember",
    iface: "WakeLockSentinel",
    prop: "release",
  },
  {
    featureId: "screen-wake-lock",
    kind: "instanceMember",
    iface: "WakeLockSentinel",
    prop: "release_event",
  },
  {
    featureId: "screen-wake-lock",
    kind: "instanceMember",
    iface: "WakeLockSentinel",
    prop: "released",
  },
  {
    featureId: "screen-wake-lock",
    kind: "instanceMember",
    iface: "WakeLockSentinel",
    prop: "type",
  },
  {
    featureId: "script",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "async",
  },
  {
    featureId: "script",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "crossOrigin",
  },
  {
    featureId: "script",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "defer",
  },
  {
    featureId: "script",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "integrity",
  },
  {
    featureId: "script",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "src",
  },
  {
    featureId: "script",
    kind: "callStatic",
    base: "HTMLScriptElement",
    prop: "supports",
  },
  {
    featureId: "script",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "text",
  },
  {
    featureId: "script",
    kind: "instanceMember",
    iface: "HTMLScriptElement",
    prop: "type",
  },
  {
    featureId: "scroll-driven-animations",
    kind: "newIdent",
    name: "ScrollTimeline",
  },
  {
    featureId: "scroll-driven-animations",
    kind: "instanceMember",
    iface: "ScrollTimeline",
    prop: "axis",
  },
  {
    featureId: "scroll-driven-animations",
    kind: "instanceMember",
    iface: "ScrollTimeline",
    prop: "source",
  },
  {
    featureId: "scroll-driven-animations",
    kind: "newIdent",
    name: "ViewTimeline",
  },
  {
    featureId: "scroll-driven-animations",
    kind: "instanceMember",
    iface: "ViewTimeline",
    prop: "endOffset",
  },
  {
    featureId: "scroll-driven-animations",
    kind: "instanceMember",
    iface: "ViewTimeline",
    prop: "startOffset",
  },
  {
    featureId: "scroll-driven-animations",
    kind: "instanceMember",
    iface: "ViewTimeline",
    prop: "subject",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Document",
    prop: "scroll_event",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Document",
    prop: "scrollingElement",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Element",
    prop: "scroll",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollBy",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollHeight",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollLeft",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollTo",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollTop",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollWidth",
  },
  {
    featureId: "scroll-elements",
    kind: "instanceMember",
    iface: "Element",
    prop: "scroll_event",
  },
  {
    featureId: "scroll-elements",
    kind: "member",
    base: "window",
    prop: "scroll",
  },
  {
    featureId: "scroll-elements",
    kind: "member",
    base: "window",
    prop: "scrollBy",
  },
  {
    featureId: "scroll-elements",
    kind: "member",
    base: "window",
    prop: "scrollTo",
  },
  {
    featureId: "scroll-elements",
    kind: "member",
    base: "window",
    prop: "scrollX",
  },
  {
    featureId: "scroll-elements",
    kind: "member",
    base: "window",
    prop: "scrollY",
  },
  {
    featureId: "scroll-into-view",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollIntoView",
  },
  {
    featureId: "scroll-snap-events",
    kind: "instanceMember",
    iface: "Document",
    prop: "scrollsnapchange_event",
  },
  {
    featureId: "scroll-snap-events",
    kind: "instanceMember",
    iface: "Document",
    prop: "scrollsnapchanging_event",
  },
  {
    featureId: "scroll-snap-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollsnapchange_event",
  },
  {
    featureId: "scroll-snap-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollsnapchanging_event",
  },
  {
    featureId: "scroll-snap-events",
    kind: "newIdent",
    name: "SnapEvent",
  },
  {
    featureId: "scroll-snap-events",
    kind: "instanceMember",
    iface: "SnapEvent",
    prop: "snapTargetBlock",
  },
  {
    featureId: "scroll-snap-events",
    kind: "instanceMember",
    iface: "SnapEvent",
    prop: "snapTargetInline",
  },
  {
    featureId: "scroll-snap-events",
    kind: "member",
    base: "window",
    prop: "scrollsnapchange_event",
  },
  {
    featureId: "scroll-snap-events",
    kind: "member",
    base: "window",
    prop: "scrollsnapchanging_event",
  },
  {
    featureId: "scroll-to-text-fragment",
    kind: "instanceMember",
    iface: "Document",
    prop: "fragmentDirective",
  },
  {
    featureId: "scrollend",
    kind: "instanceMember",
    iface: "Document",
    prop: "scrollend_event",
  },
  {
    featureId: "scrollend",
    kind: "instanceMember",
    iface: "Element",
    prop: "scrollend_event",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptGroupElement",
    prop: "disabled",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptGroupElement",
    prop: "label",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptionElement",
    prop: "Option",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptionElement",
    prop: "defaultSelected",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptionElement",
    prop: "disabled",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptionElement",
    prop: "form",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptionElement",
    prop: "index",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptionElement",
    prop: "label",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptionElement",
    prop: "selected",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptionElement",
    prop: "text",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLOptionElement",
    prop: "value",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "add",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "autocomplete",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "disabled",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "form",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "item",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "labels",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "length",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "multiple",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "name",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "namedItem",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "options",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "remove",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "required",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "selectedIndex",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "selectedOptions",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "size",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "type",
  },
  {
    featureId: "select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "value",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "AbstractRange",
    prop: "collapsed",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "AbstractRange",
    prop: "endContainer",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "AbstractRange",
    prop: "endOffset",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "AbstractRange",
    prop: "startContainer",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "AbstractRange",
    prop: "startOffset",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Document",
    prop: "createRange",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Document",
    prop: "getSelection",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Document",
    prop: "selectionchange_event",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "selectionchange_event",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "selectionchange_event",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Node",
    prop: "selectstart_event",
  },
  {
    featureId: "selection-api",
    kind: "newIdent",
    name: "Range",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "cloneContents",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "cloneRange",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "collapse",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "collapsed",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "commonAncestorContainer",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "compareBoundaryPoints",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "comparePoint",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "createContextualFragment",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "deleteContents",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "detach",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "endContainer",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "endOffset",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "extractContents",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "getBoundingClientRect",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "getClientRects",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "insertNode",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "intersectsNode",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "isPointInRange",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "selectNode",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "selectNodeContents",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "setEnd",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "setEndAfter",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "setEndBefore",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "setStart",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "setStartAfter",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "setStartBefore",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "startContainer",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "startOffset",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "surroundContents",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Range",
    prop: "toString",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "addRange",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "anchorNode",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "anchorOffset",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "collapse",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "collapseToEnd",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "collapseToStart",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "containsNode",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "deleteFromDocument",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "direction",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "empty",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "extend",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "focusNode",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "focusOffset",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "getRangeAt",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "isCollapsed",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "modify",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "rangeCount",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "removeAllRanges",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "removeRange",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "selectAllChildren",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "setBaseAndExtent",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "setPosition",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "toString",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "Selection",
    prop: "type",
  },
  {
    featureId: "selection-api",
    kind: "newIdent",
    name: "StaticRange",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "StaticRange",
    prop: "collapsed",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "StaticRange",
    prop: "endContainer",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "StaticRange",
    prop: "endOffset",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "StaticRange",
    prop: "startContainer",
  },
  {
    featureId: "selection-api",
    kind: "instanceMember",
    iface: "StaticRange",
    prop: "startOffset",
  },
  {
    featureId: "selection-api",
    kind: "member",
    base: "window",
    prop: "getSelection",
  },
  {
    featureId: "serial",
    kind: "member",
    base: "navigator",
    prop: "serial",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "Serial",
    prop: "getPorts",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "Serial",
    prop: "requestPort",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "close",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "connect_event",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "connected",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "disconnect_event",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "forget",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "getInfo",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "getSignals",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "open",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "readable",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "setSignals",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "SerialPort",
    prop: "writable",
  },
  {
    featureId: "serial",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "serial",
  },
  {
    featureId: "serializable-errors",
    kind: "instanceMember",
    iface: "DOMException",
    prop: "serializable_object",
  },
  {
    featureId: "server-sent-events",
    kind: "newIdent",
    name: "EventSource",
  },
  {
    featureId: "server-sent-events",
    kind: "instanceMember",
    iface: "EventSource",
    prop: "close",
  },
  {
    featureId: "server-sent-events",
    kind: "instanceMember",
    iface: "EventSource",
    prop: "error_event",
  },
  {
    featureId: "server-sent-events",
    kind: "instanceMember",
    iface: "EventSource",
    prop: "message_event",
  },
  {
    featureId: "server-sent-events",
    kind: "instanceMember",
    iface: "EventSource",
    prop: "open_event",
  },
  {
    featureId: "server-sent-events",
    kind: "instanceMember",
    iface: "EventSource",
    prop: "readyState",
  },
  {
    featureId: "server-sent-events",
    kind: "instanceMember",
    iface: "EventSource",
    prop: "url",
  },
  {
    featureId: "server-sent-events",
    kind: "instanceMember",
    iface: "EventSource",
    prop: "withCredentials",
  },
  {
    featureId: "server-sent-events",
    kind: "instanceMember",
    iface: "EventSource",
    prop: "worker_support",
  },
  {
    featureId: "server-timing",
    kind: "instanceMember",
    iface: "PerformanceResourceTiming",
    prop: "serverTiming",
  },
  {
    featureId: "server-timing",
    kind: "instanceMember",
    iface: "PerformanceServerTiming",
    prop: "description",
  },
  {
    featureId: "server-timing",
    kind: "instanceMember",
    iface: "PerformanceServerTiming",
    prop: "duration",
  },
  {
    featureId: "server-timing",
    kind: "instanceMember",
    iface: "PerformanceServerTiming",
    prop: "name",
  },
  {
    featureId: "server-timing",
    kind: "instanceMember",
    iface: "PerformanceServerTiming",
    prop: "toJSON",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Cache",
    prop: "add",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Cache",
    prop: "addAll",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Cache",
    prop: "delete",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Cache",
    prop: "keys",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Cache",
    prop: "match",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Cache",
    prop: "matchAll",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Cache",
    prop: "put",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Cache",
    prop: "worker_support",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "CacheStorage",
    prop: "delete",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "CacheStorage",
    prop: "has",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "CacheStorage",
    prop: "keys",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "CacheStorage",
    prop: "match",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "CacheStorage",
    prop: "open",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "CacheStorage",
    prop: "secure_context_required",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "CacheStorage",
    prop: "worker_support",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Client",
    prop: "frameType",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Client",
    prop: "id",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Client",
    prop: "postMessage",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Client",
    prop: "type",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Client",
    prop: "url",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Clients",
    prop: "claim",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Clients",
    prop: "get",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Clients",
    prop: "matchAll",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "Clients",
    prop: "openWindow",
  },
  {
    featureId: "service-workers",
    kind: "newIdent",
    name: "ExtendableEvent",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ExtendableEvent",
    prop: "waitUntil",
  },
  {
    featureId: "service-workers",
    kind: "newIdent",
    name: "ExtendableMessageEvent",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ExtendableMessageEvent",
    prop: "data",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ExtendableMessageEvent",
    prop: "lastEventId",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ExtendableMessageEvent",
    prop: "origin",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ExtendableMessageEvent",
    prop: "ports",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ExtendableMessageEvent",
    prop: "source",
  },
  {
    featureId: "service-workers",
    kind: "newIdent",
    name: "FetchEvent",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "FetchEvent",
    prop: "clientId",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "FetchEvent",
    prop: "handled",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "FetchEvent",
    prop: "preloadResponse",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "FetchEvent",
    prop: "request",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "FetchEvent",
    prop: "respondWith",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "FetchEvent",
    prop: "resultingClientId",
  },
  {
    featureId: "service-workers",
    kind: "newIdent",
    name: "InstallEvent",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "InstallEvent",
    prop: "addRoutes",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "NavigationPreloadManager",
    prop: "disable",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "NavigationPreloadManager",
    prop: "enable",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "NavigationPreloadManager",
    prop: "getState",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "NavigationPreloadManager",
    prop: "setHeaderValue",
  },
  {
    featureId: "service-workers",
    kind: "member",
    base: "navigator",
    prop: "serviceWorker",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorker",
    prop: "postMessage",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorker",
    prop: "scriptURL",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorker",
    prop: "state",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorker",
    prop: "statechange_event",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "controller",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "controllerchange_event",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "getRegistration",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "getRegistrations",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "message_event",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "ready",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "register",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "startMessages",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerContainer",
    prop: "worker_support",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "activate_event",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "clients",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "fetch_event",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "install_event",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "message_event",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "registration",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "serviceWorker",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerGlobalScope",
    prop: "skipWaiting",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "active",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "installing",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "navigationPreload",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "scope",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "unregister",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "update",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "updateViaCache",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "updatefound_event",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "ServiceWorkerRegistration",
    prop: "waiting",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "WindowClient",
    prop: "ancestorOrigins",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "WindowClient",
    prop: "focus",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "WindowClient",
    prop: "focused",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "WindowClient",
    prop: "navigate",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "WindowClient",
    prop: "visibilityState",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "serviceWorker",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "caches",
    prop: "secure_context_required",
  },
  {
    featureId: "service-workers",
    kind: "instanceMember",
    iface: "caches",
    prop: "worker_support",
  },
  {
    featureId: "setinterval",
    kind: "instanceMember",
    iface: "clearInterval",
    prop: "worker_support",
  },
  {
    featureId: "setinterval",
    kind: "instanceMember",
    iface: "setInterval",
    prop: "worker_support",
  },
  {
    featureId: "settimeout",
    kind: "instanceMember",
    iface: "clearTimeout",
    prop: "worker_support",
  },
  {
    featureId: "settimeout",
    kind: "instanceMember",
    iface: "setTimeout",
    prop: "worker_support",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "attachShadow",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "Element",
    prop: "shadowRoot",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "Event",
    prop: "composed",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "Event",
    prop: "composedPath",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "getRootNode",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "Node",
    prop: "isConnected",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "clonable",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "delegatesFocus",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "host",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "mode",
  },
  {
    featureId: "shadow-dom",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "serializable",
  },
  {
    featureId: "shadow-parts",
    kind: "instanceMember",
    iface: "Element",
    prop: "part",
  },
  {
    featureId: "share",
    kind: "member",
    base: "navigator",
    prop: "canShare",
  },
  {
    featureId: "share",
    kind: "member",
    base: "navigator",
    prop: "share",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "HTMLIFrameElement",
    prop: "sharedStorageWritable",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "sharedStorageWritable",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "append",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "clear",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "createWorklet",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "delete",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "get",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "run",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "selectURL",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "set",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "worklet",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorageWorklet",
    prop: "run",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorageWorklet",
    prop: "selectURL",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorageWorkletGlobalScope",
    prop: "register",
  },
  {
    featureId: "shared-storage",
    kind: "instanceMember",
    iface: "SharedStorageWorkletGlobalScope",
    prop: "sharedStorage",
  },
  {
    featureId: "shared-storage",
    kind: "member",
    base: "window",
    prop: "sharedStorage",
  },
  {
    featureId: "shared-storage-locks",
    kind: "instanceMember",
    iface: "SharedStorage",
    prop: "batchUpdate",
  },
  {
    featureId: "shared-storage-locks",
    kind: "newIdent",
    name: "SharedStorageAppendMethod",
  },
  {
    featureId: "shared-storage-locks",
    kind: "newIdent",
    name: "SharedStorageClearMethod",
  },
  {
    featureId: "shared-storage-locks",
    kind: "newIdent",
    name: "SharedStorageDeleteMethod",
  },
  {
    featureId: "shared-storage-locks",
    kind: "newIdent",
    name: "SharedStorageSetMethod",
  },
  {
    featureId: "shared-workers",
    kind: "newIdent",
    name: "SharedWorker",
  },
  {
    featureId: "shared-workers",
    kind: "instanceMember",
    iface: "SharedWorker",
    prop: "error_event",
  },
  {
    featureId: "shared-workers",
    kind: "instanceMember",
    iface: "SharedWorker",
    prop: "port",
  },
  {
    featureId: "shared-workers",
    kind: "instanceMember",
    iface: "SharedWorkerGlobalScope",
    prop: "close",
  },
  {
    featureId: "shared-workers",
    kind: "instanceMember",
    iface: "SharedWorkerGlobalScope",
    prop: "connect_event",
  },
  {
    featureId: "shared-workers",
    kind: "instanceMember",
    iface: "SharedWorkerGlobalScope",
    prop: "name",
  },
  {
    featureId: "show-picker-input",
    kind: "instanceMember",
    iface: "HTMLInputElement",
    prop: "showPicker",
  },
  {
    featureId: "show-picker-select",
    kind: "instanceMember",
    iface: "HTMLSelectElement",
    prop: "showPicker",
  },
  {
    featureId: "slot",
    kind: "instanceMember",
    iface: "Element",
    prop: "assignedSlot",
  },
  {
    featureId: "slot",
    kind: "instanceMember",
    iface: "Element",
    prop: "slot",
  },
  {
    featureId: "slot",
    kind: "instanceMember",
    iface: "HTMLSlotElement",
    prop: "assignedElements",
  },
  {
    featureId: "slot",
    kind: "instanceMember",
    iface: "HTMLSlotElement",
    prop: "assignedNodes",
  },
  {
    featureId: "slot",
    kind: "instanceMember",
    iface: "HTMLSlotElement",
    prop: "name",
  },
  {
    featureId: "slot",
    kind: "instanceMember",
    iface: "HTMLSlotElement",
    prop: "slotchange_event",
  },
  {
    featureId: "slot",
    kind: "instanceMember",
    iface: "Text",
    prop: "assignedSlot",
  },
  {
    featureId: "slot-assign",
    kind: "instanceMember",
    iface: "HTMLSlotElement",
    prop: "assign",
  },
  {
    featureId: "slot-assign",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "slotAssignment",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedAngle",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedAngle",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedBoolean",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedBoolean",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedEnumeration",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedEnumeration",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedInteger",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedInteger",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedLength",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedLength",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedLengthList",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedLengthList",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedNumber",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedNumber",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedNumberList",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedNumberList",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedPreserveAspectRatio",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedPreserveAspectRatio",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedRect",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedRect",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedString",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedString",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedTransformList",
    prop: "animVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimatedTransformList",
    prop: "baseVal",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "beginElement",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "beginElementAt",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "beginEvent_event",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "endElement",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "endElementAt",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "endEvent_event",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "getCurrentTime",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "getSimpleDuration",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "getStartTime",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "repeatEvent_event",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "requiredExtensions",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "systemLanguage",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGAnimationElement",
    prop: "targetElement",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGPolygonElement",
    prop: "animatedPoints",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGPolylineElement",
    prop: "animatedPoints",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "animationsPaused",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "pauseAnimations",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "unpauseAnimations",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "TimeEvent",
    prop: "detail",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "TimeEvent",
    prop: "initTimeEvent",
  },
  {
    featureId: "smil-svg-animations",
    kind: "instanceMember",
    iface: "TimeEvent",
    prop: "view",
  },
  {
    featureId: "speculation-rules",
    kind: "instanceMember",
    iface: "Document",
    prop: "prerendering",
  },
  {
    featureId: "speculation-rules",
    kind: "instanceMember",
    iface: "Document",
    prop: "prerenderingchange_event",
  },
  {
    featureId: "speculation-rules",
    kind: "instanceMember",
    iface: "PerformanceNavigationTiming",
    prop: "activationStart",
  },
  {
    featureId: "speech-recognition",
    kind: "newIdent",
    name: "SpeechRecognition",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "abort",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "audioend_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "audiostart_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "continuous",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "end_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "error_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "interimResults",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "lang",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "maxAlternatives",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "nomatch_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "result_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "soundend_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "soundstart_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "speechend_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "speechstart_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "start",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "start_event",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "stop",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionAlternative",
    prop: "confidence",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionAlternative",
    prop: "transcript",
  },
  {
    featureId: "speech-recognition",
    kind: "newIdent",
    name: "SpeechRecognitionErrorEvent",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionErrorEvent",
    prop: "error",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionErrorEvent",
    prop: "message",
  },
  {
    featureId: "speech-recognition",
    kind: "newIdent",
    name: "SpeechRecognitionEvent",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionEvent",
    prop: "resultIndex",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionEvent",
    prop: "results",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionResult",
    prop: "isFinal",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionResult",
    prop: "item",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionResult",
    prop: "length",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionResultList",
    prop: "item",
  },
  {
    featureId: "speech-recognition",
    kind: "instanceMember",
    iface: "SpeechRecognitionResultList",
    prop: "length",
  },
  {
    featureId: "speech-recognition-grammar",
    kind: "instanceMember",
    iface: "SpeechGrammar",
    prop: "src",
  },
  {
    featureId: "speech-recognition-grammar",
    kind: "instanceMember",
    iface: "SpeechGrammar",
    prop: "weight",
  },
  {
    featureId: "speech-recognition-grammar",
    kind: "newIdent",
    name: "SpeechGrammarList",
  },
  {
    featureId: "speech-recognition-grammar",
    kind: "instanceMember",
    iface: "SpeechGrammarList",
    prop: "addFromString",
  },
  {
    featureId: "speech-recognition-grammar",
    kind: "instanceMember",
    iface: "SpeechGrammarList",
    prop: "addFromURI",
  },
  {
    featureId: "speech-recognition-grammar",
    kind: "instanceMember",
    iface: "SpeechGrammarList",
    prop: "item",
  },
  {
    featureId: "speech-recognition-grammar",
    kind: "instanceMember",
    iface: "SpeechGrammarList",
    prop: "length",
  },
  {
    featureId: "speech-recognition-grammar",
    kind: "instanceMember",
    iface: "SpeechRecognition",
    prop: "grammars",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesis",
    prop: "cancel",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesis",
    prop: "getVoices",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesis",
    prop: "pause",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesis",
    prop: "paused",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesis",
    prop: "pending",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesis",
    prop: "resume",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesis",
    prop: "speak",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesis",
    prop: "speaking",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesis",
    prop: "voiceschanged_event",
  },
  {
    featureId: "speech-synthesis",
    kind: "newIdent",
    name: "SpeechSynthesisErrorEvent",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisErrorEvent",
    prop: "error",
  },
  {
    featureId: "speech-synthesis",
    kind: "newIdent",
    name: "SpeechSynthesisEvent",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisEvent",
    prop: "charIndex",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisEvent",
    prop: "charLength",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisEvent",
    prop: "elapsedTime",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisEvent",
    prop: "name",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisEvent",
    prop: "utterance",
  },
  {
    featureId: "speech-synthesis",
    kind: "newIdent",
    name: "SpeechSynthesisUtterance",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "boundary_event",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "end_event",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "error_event",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "lang",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "mark_event",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "pause_event",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "pitch",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "rate",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "resume_event",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "start_event",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "text",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "voice",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisUtterance",
    prop: "volume",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisVoice",
    prop: "default",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisVoice",
    prop: "lang",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisVoice",
    prop: "localService",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisVoice",
    prop: "name",
  },
  {
    featureId: "speech-synthesis",
    kind: "instanceMember",
    iface: "SpeechSynthesisVoice",
    prop: "voiceURI",
  },
  {
    featureId: "speech-synthesis",
    kind: "member",
    base: "window",
    prop: "speechSynthesis",
  },
  {
    featureId: "spellcheck",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "spellcheck",
  },
  {
    featureId: "srcset",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "sizes",
  },
  {
    featureId: "srcset",
    kind: "instanceMember",
    iface: "HTMLImageElement",
    prop: "srcset",
  },
  {
    featureId: "srcset",
    kind: "instanceMember",
    iface: "HTMLSourceElement",
    prop: "sizes",
  },
  {
    featureId: "srcset",
    kind: "instanceMember",
    iface: "HTMLSourceElement",
    prop: "srcset",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "@@iterator",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "add",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "clear",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "delete",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "entries",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "forEach",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "has",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "keys",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "size",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "CustomStateSet",
    prop: "values",
  },
  {
    featureId: "state",
    kind: "instanceMember",
    iface: "ElementInternals",
    prop: "states",
  },
  {
    featureId: "storage-access",
    kind: "instanceMember",
    iface: "Document",
    prop: "hasStorageAccess",
  },
  {
    featureId: "storage-access",
    kind: "instanceMember",
    iface: "Document",
    prop: "requestStorageAccess",
  },
  {
    featureId: "storage-access",
    kind: "instanceMember",
    iface: "Document",
    prop: "requestStorageAccessFor",
  },
  {
    featureId: "storage-access",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_storage-access",
  },
  {
    featureId: "storage-access",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_top-level-storage-access",
  },
  {
    featureId: "storage-buckets",
    kind: "member",
    base: "navigator",
    prop: "storageBuckets",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucket",
    prop: "caches",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucket",
    prop: "estimate",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucket",
    prop: "expires",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucket",
    prop: "getDirectory",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucket",
    prop: "indexedDB",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucket",
    prop: "name",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucket",
    prop: "persist",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucket",
    prop: "persisted",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucket",
    prop: "setExpires",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucketManager",
    prop: "delete",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucketManager",
    prop: "keys",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "StorageBucketManager",
    prop: "open",
  },
  {
    featureId: "storage-buckets",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "storageBuckets",
  },
  {
    featureId: "storage-manager",
    kind: "member",
    base: "navigator",
    prop: "storage",
  },
  {
    featureId: "storage-manager",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_persistent-storage",
  },
  {
    featureId: "storage-manager",
    kind: "instanceMember",
    iface: "StorageManager",
    prop: "estimate",
  },
  {
    featureId: "storage-manager",
    kind: "instanceMember",
    iface: "StorageManager",
    prop: "persist",
  },
  {
    featureId: "storage-manager",
    kind: "instanceMember",
    iface: "StorageManager",
    prop: "persisted",
  },
  {
    featureId: "storage-manager",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "storage",
  },
  {
    featureId: "streams",
    kind: "newIdent",
    name: "ByteLengthQueuingStrategy",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ByteLengthQueuingStrategy",
    prop: "highWaterMark",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ByteLengthQueuingStrategy",
    prop: "size",
  },
  {
    featureId: "streams",
    kind: "newIdent",
    name: "CountQueuingStrategy",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "CountQueuingStrategy",
    prop: "highWaterMark",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "CountQueuingStrategy",
    prop: "size",
  },
  {
    featureId: "streams",
    kind: "newIdent",
    name: "ReadableStream",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStream",
    prop: "cancel",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStream",
    prop: "getReader",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStream",
    prop: "locked",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStream",
    prop: "pipeThrough",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStream",
    prop: "pipeTo",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStream",
    prop: "tee",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStreamDefaultController",
    prop: "close",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStreamDefaultController",
    prop: "desiredSize",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStreamDefaultController",
    prop: "enqueue",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStreamDefaultController",
    prop: "error",
  },
  {
    featureId: "streams",
    kind: "newIdent",
    name: "ReadableStreamDefaultReader",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStreamDefaultReader",
    prop: "cancel",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStreamDefaultReader",
    prop: "closed",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStreamDefaultReader",
    prop: "read",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "ReadableStreamDefaultReader",
    prop: "releaseLock",
  },
  {
    featureId: "streams",
    kind: "newIdent",
    name: "TransformStream",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "TransformStream",
    prop: "readable",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "TransformStream",
    prop: "writable",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "TransformStreamDefaultController",
    prop: "desiredSize",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "TransformStreamDefaultController",
    prop: "enqueue",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "TransformStreamDefaultController",
    prop: "error",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "TransformStreamDefaultController",
    prop: "terminate",
  },
  {
    featureId: "streams",
    kind: "newIdent",
    name: "WritableStream",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStream",
    prop: "abort",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStream",
    prop: "close",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStream",
    prop: "getWriter",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStream",
    prop: "locked",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStreamDefaultController",
    prop: "error",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStreamDefaultController",
    prop: "signal",
  },
  {
    featureId: "streams",
    kind: "newIdent",
    name: "WritableStreamDefaultWriter",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStreamDefaultWriter",
    prop: "abort",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStreamDefaultWriter",
    prop: "close",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStreamDefaultWriter",
    prop: "closed",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStreamDefaultWriter",
    prop: "desiredSize",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStreamDefaultWriter",
    prop: "ready",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStreamDefaultWriter",
    prop: "releaseLock",
  },
  {
    featureId: "streams",
    kind: "instanceMember",
    iface: "WritableStreamDefaultWriter",
    prop: "write",
  },
  {
    featureId: "style",
    kind: "instanceMember",
    iface: "HTMLStyleElement",
    prop: "disabled",
  },
  {
    featureId: "style",
    kind: "instanceMember",
    iface: "HTMLStyleElement",
    prop: "media",
  },
  {
    featureId: "summarizer",
    kind: "callStatic",
    base: "Summarizer",
    prop: "availability",
  },
  {
    featureId: "summarizer",
    kind: "callStatic",
    base: "Summarizer",
    prop: "create",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "destroy",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "expectedContextLanguages",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "expectedInputLanguages",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "format",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "inputQuota",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "length",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "measureInputUsage",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "outputLanguage",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "sharedContext",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "summarize",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "summarizeStreaming",
  },
  {
    featureId: "summarizer",
    kind: "instanceMember",
    iface: "Summarizer",
    prop: "type",
  },
  {
    featureId: "supports",
    kind: "instanceMember",
    iface: "CSSImportRule",
    prop: "supportsText",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "href",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "hreflang",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "referrerPolicy",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "rel",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "relList",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "target",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "type",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAngle",
    prop: "convertToSpecifiedUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAngle",
    prop: "newValueSpecifiedUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAngle",
    prop: "unitType",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAngle",
    prop: "value",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAngle",
    prop: "valueAsString",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGAngle",
    prop: "valueInSpecifiedUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGCircleElement",
    prop: "cx",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGCircleElement",
    prop: "cy",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGCircleElement",
    prop: "r",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGComponentTransferFunctionElement",
    prop: "amplitude",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGComponentTransferFunctionElement",
    prop: "exponent",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGComponentTransferFunctionElement",
    prop: "intercept",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGComponentTransferFunctionElement",
    prop: "offset",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGComponentTransferFunctionElement",
    prop: "slope",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGComponentTransferFunctionElement",
    prop: "tableValues",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGComponentTransferFunctionElement",
    prop: "type",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "attributeStyleMap",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "blur",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "error_event",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "focus",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "load_event",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "nonce",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "ownerSVGElement",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "style",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "tabIndex",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "viewportElement",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGEllipseElement",
    prop: "cx",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGEllipseElement",
    prop: "cy",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGEllipseElement",
    prop: "rx",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGEllipseElement",
    prop: "ry",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGForeignObjectElement",
    prop: "height",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGForeignObjectElement",
    prop: "width",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGForeignObjectElement",
    prop: "x",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGForeignObjectElement",
    prop: "y",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGeometryElement",
    prop: "getPointAtLength",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGeometryElement",
    prop: "getTotalLength",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGeometryElement",
    prop: "isPointInFill",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGeometryElement",
    prop: "isPointInStroke",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGeometryElement",
    prop: "pathLength",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGradientElement",
    prop: "gradientTransform",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGradientElement",
    prop: "gradientUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGradientElement",
    prop: "href",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGradientElement",
    prop: "spreadMethod",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGraphicsElement",
    prop: "getBBox",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGraphicsElement",
    prop: "getCTM",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGraphicsElement",
    prop: "getScreenCTM",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGraphicsElement",
    prop: "requiredExtensions",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGraphicsElement",
    prop: "systemLanguage",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGGraphicsElement",
    prop: "transform",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGImageElement",
    prop: "crossOrigin",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGImageElement",
    prop: "decode",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGImageElement",
    prop: "decoding",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGImageElement",
    prop: "height",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGImageElement",
    prop: "href",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGImageElement",
    prop: "preserveAspectRatio",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGImageElement",
    prop: "width",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGImageElement",
    prop: "x",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGImageElement",
    prop: "y",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLength",
    prop: "convertToSpecifiedUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLength",
    prop: "newValueSpecifiedUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLength",
    prop: "unitType",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLength",
    prop: "value",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLength",
    prop: "valueAsString",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLength",
    prop: "valueInSpecifiedUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLengthList",
    prop: "appendItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLengthList",
    prop: "clear",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLengthList",
    prop: "getItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLengthList",
    prop: "initialize",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLengthList",
    prop: "insertItemBefore",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLengthList",
    prop: "length",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLengthList",
    prop: "numberOfItems",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLengthList",
    prop: "removeItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLengthList",
    prop: "replaceItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLineElement",
    prop: "x1",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLineElement",
    prop: "x2",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLineElement",
    prop: "y1",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLineElement",
    prop: "y2",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLinearGradientElement",
    prop: "x1",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLinearGradientElement",
    prop: "x2",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLinearGradientElement",
    prop: "y1",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGLinearGradientElement",
    prop: "y2",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMPathElement",
    prop: "href",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "markerHeight",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "markerUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "markerWidth",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "orient",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "orientAngle",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "orientType",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "preserveAspectRatio",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "refX",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "refY",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "setOrientToAngle",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "setOrientToAuto",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMarkerElement",
    prop: "viewBox",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMaskElement",
    prop: "height",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMaskElement",
    prop: "maskContentUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMaskElement",
    prop: "maskUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMaskElement",
    prop: "width",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMaskElement",
    prop: "x",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGMaskElement",
    prop: "y",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumber",
    prop: "value",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumberList",
    prop: "appendItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumberList",
    prop: "clear",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumberList",
    prop: "getItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumberList",
    prop: "initialize",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumberList",
    prop: "insertItemBefore",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumberList",
    prop: "length",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumberList",
    prop: "numberOfItems",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumberList",
    prop: "removeItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGNumberList",
    prop: "replaceItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "height",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "href",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "patternContentUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "patternTransform",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "patternUnits",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "preserveAspectRatio",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "viewBox",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "width",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "x",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPatternElement",
    prop: "y",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPointList",
    prop: "appendItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPointList",
    prop: "clear",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPointList",
    prop: "getItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPointList",
    prop: "initialize",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPointList",
    prop: "insertItemBefore",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPointList",
    prop: "length",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPointList",
    prop: "numberOfItems",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPointList",
    prop: "removeItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPointList",
    prop: "replaceItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPolygonElement",
    prop: "points",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPolylineElement",
    prop: "points",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPreserveAspectRatio",
    prop: "align",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGPreserveAspectRatio",
    prop: "meetOrSlice",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRadialGradientElement",
    prop: "cx",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRadialGradientElement",
    prop: "cy",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRadialGradientElement",
    prop: "fr",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRadialGradientElement",
    prop: "fx",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRadialGradientElement",
    prop: "fy",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRadialGradientElement",
    prop: "r",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRect",
    prop: "height",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRect",
    prop: "width",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRect",
    prop: "x",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRect",
    prop: "y",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRectElement",
    prop: "height",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRectElement",
    prop: "rx",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRectElement",
    prop: "ry",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRectElement",
    prop: "width",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRectElement",
    prop: "x",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGRectElement",
    prop: "y",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "checkEnclosure",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "checkIntersection",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "createSVGAngle",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "createSVGLength",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "createSVGMatrix",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "createSVGNumber",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "createSVGPoint",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "createSVGRect",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "createSVGTransform",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "createSVGTransformFromMatrix",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "currentScale",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "currentTranslate",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "deselectAll",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "getCurrentTime",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "getElementById",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "getEnclosureList",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "getIntersectionList",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "height",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "preserveAspectRatio",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "setCurrentTime",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "viewBox",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "width",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "x",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "y",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGScriptElement",
    prop: "async",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGScriptElement",
    prop: "crossOrigin",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGScriptElement",
    prop: "defer",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGScriptElement",
    prop: "href",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGScriptElement",
    prop: "type",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStopElement",
    prop: "offset",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStringList",
    prop: "appendItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStringList",
    prop: "clear",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStringList",
    prop: "getItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStringList",
    prop: "initialize",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStringList",
    prop: "insertItemBefore",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStringList",
    prop: "length",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStringList",
    prop: "numberOfItems",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStringList",
    prop: "removeItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStringList",
    prop: "replaceItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStyleElement",
    prop: "disabled",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStyleElement",
    prop: "media",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStyleElement",
    prop: "sheet",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGStyleElement",
    prop: "title",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSymbolElement",
    prop: "preserveAspectRatio",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGSymbolElement",
    prop: "viewBox",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "getCharNumAtPosition",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "getComputedTextLength",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "getEndPositionOfChar",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "getExtentOfChar",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "getNumberOfChars",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "getRotationOfChar",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "getStartPositionOfChar",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "getSubStringLength",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "lengthAdjust",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "textLength",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextPathElement",
    prop: "href",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextPathElement",
    prop: "method",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextPathElement",
    prop: "spacing",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextPathElement",
    prop: "startOffset",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextPositioningElement",
    prop: "dx",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextPositioningElement",
    prop: "dy",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextPositioningElement",
    prop: "rotate",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextPositioningElement",
    prop: "x",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTextPositioningElement",
    prop: "y",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransform",
    prop: "angle",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransform",
    prop: "matrix",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransform",
    prop: "setMatrix",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransform",
    prop: "setRotate",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransform",
    prop: "setScale",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransform",
    prop: "setSkewX",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransform",
    prop: "setSkewY",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransform",
    prop: "setTranslate",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransform",
    prop: "type",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "appendItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "clear",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "consolidate",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "createSVGTransformFromMatrix",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "getItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "initialize",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "insertItemBefore",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "length",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "numberOfItems",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "removeItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGTransformList",
    prop: "replaceItem",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGUseElement",
    prop: "height",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGUseElement",
    prop: "href",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGUseElement",
    prop: "width",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGUseElement",
    prop: "x",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGUseElement",
    prop: "y",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGViewElement",
    prop: "preserveAspectRatio",
  },
  {
    featureId: "svg",
    kind: "instanceMember",
    iface: "SVGViewElement",
    prop: "viewBox",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGAElement",
    prop: "text",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGElement",
    prop: "className",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegArcAbs",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegArcRel",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegClosePath",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegCurvetoCubicAbs",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegCurvetoCubicRel",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegCurvetoCubicSmoothAbs",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegCurvetoCubicSmoothRel",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegCurvetoQuadraticAbs",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegCurvetoQuadraticRel",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegCurvetoQuadraticSmoothAbs",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegCurvetoQuadraticSmoothRel",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegLinetoAbs",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegLinetoHorizontalAbs",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegLinetoHorizontalRel",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegLinetoRel",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegLinetoVerticalAbs",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegLinetoVerticalRel",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegMovetoAbs",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "createSVGPathSegMovetoRel",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPathElement",
    prop: "getPathSegAtLength",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPoint",
    prop: "matrixTransform",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPoint",
    prop: "x",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGPoint",
    prop: "y",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "currentView",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "forceRedraw",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "suspendRedraw",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "unsuspendRedraw",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "unsuspendRedrawAll",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGSVGElement",
    prop: "useCurrentView",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGStyleElement",
    prop: "type",
  },
  {
    featureId: "svg-discouraged",
    kind: "instanceMember",
    iface: "SVGTextContentElement",
    prop: "selectSubString",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEBlendElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEBlendElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEBlendElement",
    prop: "in2",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEBlendElement",
    prop: "mode",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEBlendElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEBlendElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEBlendElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEBlendElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEColorMatrixElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEColorMatrixElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEColorMatrixElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEColorMatrixElement",
    prop: "type",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEColorMatrixElement",
    prop: "values",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEColorMatrixElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEColorMatrixElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEColorMatrixElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEComponentTransferElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEComponentTransferElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEComponentTransferElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEComponentTransferElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEComponentTransferElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEComponentTransferElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "in2",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "k1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "k2",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "k3",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "k4",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "operator",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFECompositeElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "bias",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "divisor",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "edgeMode",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "kernelMatrix",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "kernelUnitLengthX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "kernelUnitLengthY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "orderX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "orderY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "preserveAlpha",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "targetX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "targetY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEConvolveMatrixElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "diffuseConstant",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "kernelUnitLengthX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "kernelUnitLengthY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "surfaceScale",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDiffuseLightingElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "in2",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "scale",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "xChannelSelector",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDisplacementMapElement",
    prop: "yChannelSelector",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDistantLightElement",
    prop: "azimuth",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDistantLightElement",
    prop: "elevation",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "dx",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "dy",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "setStdDeviation",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "stdDeviationX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "stdDeviationY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEDropShadowElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEFloodElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEFloodElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEFloodElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEFloodElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEFloodElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "edgeMode",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "setStdDeviation",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "stdDeviationX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "stdDeviationY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEGaussianBlurElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEImageElement",
    prop: "crossOrigin",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEImageElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEImageElement",
    prop: "href",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEImageElement",
    prop: "preserveAspectRatio",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEImageElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEImageElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEImageElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEImageElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMergeElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMergeElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMergeElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMergeElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMergeElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMergeNodeElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMorphologyElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMorphologyElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMorphologyElement",
    prop: "operator",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMorphologyElement",
    prop: "radiusX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMorphologyElement",
    prop: "radiusY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMorphologyElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMorphologyElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMorphologyElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEMorphologyElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEOffsetElement",
    prop: "dx",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEOffsetElement",
    prop: "dy",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEOffsetElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEOffsetElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEOffsetElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEOffsetElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEOffsetElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEOffsetElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEPointLightElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEPointLightElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFEPointLightElement",
    prop: "z",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "kernelUnitLengthX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "kernelUnitLengthY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "specularConstant",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "specularExponent",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "surfaceScale",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpecularLightingElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpotLightElement",
    prop: "limitingConeAngle",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpotLightElement",
    prop: "pointsAtX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpotLightElement",
    prop: "pointsAtY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpotLightElement",
    prop: "pointsAtZ",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpotLightElement",
    prop: "specularExponent",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpotLightElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpotLightElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFESpotLightElement",
    prop: "z",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETileElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETileElement",
    prop: "in1",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETileElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETileElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETileElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETileElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "baseFrequencyX",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "baseFrequencyY",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "numOctaves",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "result",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "seed",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "stitchTiles",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "type",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFETurbulenceElement",
    prop: "y",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFilterElement",
    prop: "filterUnits",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFilterElement",
    prop: "height",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFilterElement",
    prop: "href",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFilterElement",
    prop: "primitiveUnits",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFilterElement",
    prop: "width",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFilterElement",
    prop: "x",
  },
  {
    featureId: "svg-filters",
    kind: "instanceMember",
    iface: "SVGFilterElement",
    prop: "y",
  },
  {
    featureId: "tabindex",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "tabIndex",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "abbr",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "cellIndex",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "colSpan",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "headers",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "rowSpan",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "scope",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableColElement",
    prop: "span",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "caption",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "createCaption",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "createTBody",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "createTFoot",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "createTHead",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "deleteCaption",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "deleteRow",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "deleteTFoot",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "deleteTHead",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "insertRow",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "rows",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "tBodies",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "tFoot",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "tHead",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "cells",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "deleteCell",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "insertCell",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "rowIndex",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "sectionRowIndex",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableSectionElement",
    prop: "deleteRow",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableSectionElement",
    prop: "insertRow",
  },
  {
    featureId: "table",
    kind: "instanceMember",
    iface: "HTMLTableSectionElement",
    prop: "rows",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCaptionElement",
    prop: "align",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "align",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "axis",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "bgColor",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "ch",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "chOff",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "height",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "noWrap",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "vAlign",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableCellElement",
    prop: "width",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableColElement",
    prop: "align",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableColElement",
    prop: "ch",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableColElement",
    prop: "chOff",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableColElement",
    prop: "vAlign",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableColElement",
    prop: "width",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "align",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "bgColor",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "border",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "cellPadding",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "cellSpacing",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "frame",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "rules",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "summary",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableElement",
    prop: "width",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "align",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "bgColor",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "ch",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "chOff",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableRowElement",
    prop: "vAlign",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableSectionElement",
    prop: "align",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableSectionElement",
    prop: "ch",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableSectionElement",
    prop: "chOff",
  },
  {
    featureId: "table-discouraged",
    kind: "instanceMember",
    iface: "HTMLTableSectionElement",
    prop: "vAlign",
  },
  {
    featureId: "template",
    kind: "instanceMember",
    iface: "HTMLTemplateElement",
    prop: "content",
  },
  {
    featureId: "text-encoding",
    kind: "newIdent",
    name: "TextDecoder",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoder",
    prop: "decode",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoder",
    prop: "encoding",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoder",
    prop: "fatal",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoder",
    prop: "ignoreBOM",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoder",
    prop: "worker_support",
  },
  {
    featureId: "text-encoding",
    kind: "newIdent",
    name: "TextDecoderStream",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoderStream",
    prop: "encoding",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoderStream",
    prop: "fatal",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoderStream",
    prop: "ignoreBOM",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoderStream",
    prop: "readable",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextDecoderStream",
    prop: "writable",
  },
  {
    featureId: "text-encoding",
    kind: "newIdent",
    name: "TextEncoder",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextEncoder",
    prop: "encode",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextEncoder",
    prop: "encodeInto",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextEncoder",
    prop: "encoding",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextEncoder",
    prop: "worker_support",
  },
  {
    featureId: "text-encoding",
    kind: "newIdent",
    name: "TextEncoderStream",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextEncoderStream",
    prop: "encoding",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextEncoderStream",
    prop: "readable",
  },
  {
    featureId: "text-encoding",
    kind: "instanceMember",
    iface: "TextEncoderStream",
    prop: "writable",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "addTextTrack",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "textTracks",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLTrackElement",
    prop: "cuechange_event",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLTrackElement",
    prop: "default",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLTrackElement",
    prop: "kind",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLTrackElement",
    prop: "label",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLTrackElement",
    prop: "readyState",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLTrackElement",
    prop: "src",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLTrackElement",
    prop: "srclang",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "HTMLTrackElement",
    prop: "track",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "activeCues",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "addCue",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "cuechange_event",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "cues",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "id",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "inBandMetadataTrackDispatchType",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "kind",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "label",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "language",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "mode",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrack",
    prop: "removeCue",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackCue",
    prop: "endTime",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackCue",
    prop: "enter_event",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackCue",
    prop: "exit_event",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackCue",
    prop: "id",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackCue",
    prop: "pauseOnExit",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackCue",
    prop: "startTime",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackCue",
    prop: "track",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackCueList",
    prop: "getCueById",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackCueList",
    prop: "length",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackList",
    prop: "addtrack_event",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackList",
    prop: "change_event",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackList",
    prop: "getTrackById",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackList",
    prop: "length",
  },
  {
    featureId: "text-tracks",
    kind: "instanceMember",
    iface: "TextTrackList",
    prop: "removetrack_event",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "autocomplete",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "cols",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "defaultValue",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "disabled",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "form",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "labels",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "maxLength",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "minLength",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "name",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "placeholder",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "readOnly",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "required",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "rows",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "select",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "select_event",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "selectionDirection",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "selectionEnd",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "selectionStart",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "setRangeText",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "setSelectionRange",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "textLength",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "type",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "value",
  },
  {
    featureId: "textarea",
    kind: "instanceMember",
    iface: "HTMLTextAreaElement",
    prop: "wrap",
  },
  {
    featureId: "time",
    kind: "instanceMember",
    iface: "HTMLTimeElement",
    prop: "dateTime",
  },
  {
    featureId: "title",
    kind: "instanceMember",
    iface: "HTMLTitleElement",
    prop: "text",
  },
  {
    featureId: "title-attr",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "title",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "touchcancel_event",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "touchend_event",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "touchmove_event",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "touchstart_event",
  },
  {
    featureId: "touch-events",
    kind: "newIdent",
    name: "Touch",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "altitudeAngle",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "azimuthAngle",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "clientX",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "clientY",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "force",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "identifier",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "pageX",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "pageY",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "radiusX",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "radiusY",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "rotationAngle",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "screenX",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "screenY",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "target",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "Touch",
    prop: "touchType",
  },
  {
    featureId: "touch-events",
    kind: "newIdent",
    name: "TouchEvent",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "TouchEvent",
    prop: "altKey",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "TouchEvent",
    prop: "changedTouches",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "TouchEvent",
    prop: "ctrlKey",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "TouchEvent",
    prop: "metaKey",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "TouchEvent",
    prop: "shiftKey",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "TouchEvent",
    prop: "targetTouches",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "TouchEvent",
    prop: "touches",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "TouchList",
    prop: "item",
  },
  {
    featureId: "touch-events",
    kind: "instanceMember",
    iface: "TouchList",
    prop: "length",
  },
  {
    featureId: "transferable-streams",
    kind: "instanceMember",
    iface: "ReadableStream",
    prop: "transferable",
  },
  {
    featureId: "transferable-streams",
    kind: "instanceMember",
    iface: "TransformStream",
    prop: "transferable",
  },
  {
    featureId: "transferable-streams",
    kind: "instanceMember",
    iface: "WritableStream",
    prop: "transferable",
  },
  {
    featureId: "transitions",
    kind: "instanceMember",
    iface: "CSSTransition",
    prop: "transitionProperty",
  },
  {
    featureId: "transitions",
    kind: "instanceMember",
    iface: "Element",
    prop: "transitioncancel_event",
  },
  {
    featureId: "transitions",
    kind: "instanceMember",
    iface: "Element",
    prop: "transitionend_event",
  },
  {
    featureId: "transitions",
    kind: "instanceMember",
    iface: "Element",
    prop: "transitionrun_event",
  },
  {
    featureId: "transitions",
    kind: "instanceMember",
    iface: "Element",
    prop: "transitionstart_event",
  },
  {
    featureId: "transitions",
    kind: "newIdent",
    name: "TransitionEvent",
  },
  {
    featureId: "transitions",
    kind: "instanceMember",
    iface: "TransitionEvent",
    prop: "elapsedTime",
  },
  {
    featureId: "transitions",
    kind: "instanceMember",
    iface: "TransitionEvent",
    prop: "propertyName",
  },
  {
    featureId: "transitions",
    kind: "instanceMember",
    iface: "TransitionEvent",
    prop: "pseudoElement",
  },
  {
    featureId: "translate",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "translate",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedHTML",
    prop: "toJSON",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedHTML",
    prop: "toString",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedScript",
    prop: "toJSON",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedScript",
    prop: "toString",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedScriptURL",
    prop: "toJSON",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedScriptURL",
    prop: "toString",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicy",
    prop: "createHTML",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicy",
    prop: "createScript",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicy",
    prop: "createScriptURL",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicy",
    prop: "name",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicyFactory",
    prop: "createPolicy",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicyFactory",
    prop: "defaultPolicy",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicyFactory",
    prop: "emptyHTML",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicyFactory",
    prop: "emptyScript",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicyFactory",
    prop: "getAttributeType",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicyFactory",
    prop: "getPropertyType",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicyFactory",
    prop: "isHTML",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicyFactory",
    prop: "isScript",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "TrustedTypePolicyFactory",
    prop: "isScriptURL",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "setInterval",
    prop: "code_param_enforces_trusted_types",
  },
  {
    featureId: "trusted-types",
    kind: "instanceMember",
    iface: "setTimeout",
    prop: "code_param_enforces_trusted_types",
  },
  {
    featureId: "ua-client-hints",
    kind: "member",
    base: "navigator",
    prop: "userAgentData",
  },
  {
    featureId: "ua-client-hints",
    kind: "instanceMember",
    iface: "NavigatorUAData",
    prop: "brands",
  },
  {
    featureId: "ua-client-hints",
    kind: "instanceMember",
    iface: "NavigatorUAData",
    prop: "getHighEntropyValues",
  },
  {
    featureId: "ua-client-hints",
    kind: "instanceMember",
    iface: "NavigatorUAData",
    prop: "mobile",
  },
  {
    featureId: "ua-client-hints",
    kind: "instanceMember",
    iface: "NavigatorUAData",
    prop: "platform",
  },
  {
    featureId: "ua-client-hints",
    kind: "instanceMember",
    iface: "NavigatorUAData",
    prop: "toJSON",
  },
  {
    featureId: "ua-client-hints",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "userAgentData",
  },
  {
    featureId: "url",
    kind: "newIdent",
    name: "URL",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "hash",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "host",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "hostname",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "href",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "origin",
  },
  {
    featureId: "url",
    kind: "callStatic",
    base: "URL",
    prop: "parse",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "password",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "pathname",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "port",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "protocol",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "search",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "searchParams",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "toJSON",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "toString",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URL",
    prop: "username",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "@@iterator",
  },
  {
    featureId: "url",
    kind: "newIdent",
    name: "URLSearchParams",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "append",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "delete",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "entries",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "forEach",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "get",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "getAll",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "has",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "keys",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "set",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "size",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "sort",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "toString",
  },
  {
    featureId: "url",
    kind: "instanceMember",
    iface: "URLSearchParams",
    prop: "values",
  },
  {
    featureId: "url-canparse",
    kind: "callStatic",
    base: "URL",
    prop: "canParse",
  },
  {
    featureId: "urlpattern",
    kind: "newIdent",
    name: "URLPattern",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "exec",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "hasRegExpGroups",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "hash",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "hostname",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "password",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "pathname",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "port",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "protocol",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "search",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "test",
  },
  {
    featureId: "urlpattern",
    kind: "instanceMember",
    iface: "URLPattern",
    prop: "username",
  },
  {
    featureId: "user-activation",
    kind: "member",
    base: "navigator",
    prop: "userActivation",
  },
  {
    featureId: "user-activation",
    kind: "instanceMember",
    iface: "UserActivation",
    prop: "hasBeenActive",
  },
  {
    featureId: "user-activation",
    kind: "instanceMember",
    iface: "UserActivation",
    prop: "isActive",
  },
  {
    featureId: "user-agent-sniffing",
    kind: "member",
    base: "navigator",
    prop: "userAgent",
  },
  {
    featureId: "user-agent-sniffing",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "userAgent",
  },
  {
    featureId: "vibration",
    kind: "member",
    base: "navigator",
    prop: "vibrate",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "abort_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "autoplay",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "buffered",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "canPlayType",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "canplay_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "canplaythrough_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "controls",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "crossOrigin",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "currentSrc",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "currentTime",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "defaultMuted",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "defaultPlaybackRate",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "duration",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "durationchange_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "emptied_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "ended",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "ended_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "error",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "error_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "load",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "loadeddata_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "loadedmetadata_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "loadstart_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "loop",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "muted",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "networkState",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "pause",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "pause_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "paused",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "play",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "play_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "playbackRate",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "played",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "playing_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "preload",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "progress_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "ratechange_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "readyState",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "seekable",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "seeked_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "seeking",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "seeking_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "src",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "stalled_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "suspend_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "timeupdate_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "volume",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "volumechange_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLMediaElement",
    prop: "waiting_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "height",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "playsInline",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "poster",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "resize_event",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "videoHeight",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "videoWidth",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "HTMLVideoElement",
    prop: "width",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "MediaError",
    prop: "code",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "MediaError",
    prop: "message",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "TimeRanges",
    prop: "end",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "TimeRanges",
    prop: "length",
  },
  {
    featureId: "video",
    kind: "instanceMember",
    iface: "TimeRanges",
    prop: "start",
  },
  {
    featureId: "view-transitions",
    kind: "instanceMember",
    iface: "Document",
    prop: "startViewTransition",
  },
  {
    featureId: "view-transitions",
    kind: "newIdent",
    name: "PageRevealEvent",
  },
  {
    featureId: "view-transitions",
    kind: "instanceMember",
    iface: "PageRevealEvent",
    prop: "viewTransition",
  },
  {
    featureId: "view-transitions",
    kind: "newIdent",
    name: "PageSwapEvent",
  },
  {
    featureId: "view-transitions",
    kind: "instanceMember",
    iface: "PageSwapEvent",
    prop: "activation",
  },
  {
    featureId: "view-transitions",
    kind: "instanceMember",
    iface: "PageSwapEvent",
    prop: "viewTransition",
  },
  {
    featureId: "view-transitions",
    kind: "instanceMember",
    iface: "ViewTransition",
    prop: "finished",
  },
  {
    featureId: "view-transitions",
    kind: "instanceMember",
    iface: "ViewTransition",
    prop: "ready",
  },
  {
    featureId: "view-transitions",
    kind: "instanceMember",
    iface: "ViewTransition",
    prop: "skipTransition",
  },
  {
    featureId: "view-transitions",
    kind: "instanceMember",
    iface: "ViewTransition",
    prop: "updateCallbackDone",
  },
  {
    featureId: "view-transitions",
    kind: "member",
    base: "window",
    prop: "pagereveal_event",
  },
  {
    featureId: "view-transitions",
    kind: "member",
    base: "window",
    prop: "pageswap_event",
  },
  {
    featureId: "viewport-segments",
    kind: "instanceMember",
    iface: "Viewport",
    prop: "segments",
  },
  {
    featureId: "viewport-segments",
    kind: "member",
    base: "window",
    prop: "viewport",
  },
  {
    featureId: "virtual-keyboard",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "virtualKeyboardPolicy",
  },
  {
    featureId: "virtual-keyboard",
    kind: "member",
    base: "navigator",
    prop: "virtualKeyboard",
  },
  {
    featureId: "virtual-keyboard",
    kind: "instanceMember",
    iface: "VirtualKeyboard",
    prop: "boundingRect",
  },
  {
    featureId: "virtual-keyboard",
    kind: "instanceMember",
    iface: "VirtualKeyboard",
    prop: "geometrychange_event",
  },
  {
    featureId: "virtual-keyboard",
    kind: "instanceMember",
    iface: "VirtualKeyboard",
    prop: "hide",
  },
  {
    featureId: "virtual-keyboard",
    kind: "instanceMember",
    iface: "VirtualKeyboard",
    prop: "overlaysContent",
  },
  {
    featureId: "virtual-keyboard",
    kind: "instanceMember",
    iface: "VirtualKeyboard",
    prop: "show",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "height",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "offsetLeft",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "offsetTop",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "pageLeft",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "pageTop",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "resize_event",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "scale",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "scroll_event",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "scrollend_event",
  },
  {
    featureId: "visual-viewport",
    kind: "instanceMember",
    iface: "VisualViewport",
    prop: "width",
  },
  {
    featureId: "visual-viewport",
    kind: "member",
    base: "window",
    prop: "visualViewport",
  },
  {
    featureId: "web-animations",
    kind: "newIdent",
    name: "Animation",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "cancel",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "cancel_event",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "commitStyles",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "currentTime",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "effect",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "finish",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "finish_event",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "finished",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "id",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "pause",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "pending",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "persist",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "play",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "playState",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "playbackRate",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "ready",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "remove_event",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "remove_filling_animation",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "replaceState",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "reverse",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "startTime",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "timeline",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Animation",
    prop: "updatePlaybackRate",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "AnimationEffect",
    prop: "getComputedTiming",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "AnimationEffect",
    prop: "getTiming",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "AnimationEffect",
    prop: "updateTiming",
  },
  {
    featureId: "web-animations",
    kind: "newIdent",
    name: "AnimationPlaybackEvent",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "AnimationPlaybackEvent",
    prop: "currentTime",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "AnimationPlaybackEvent",
    prop: "timelineTime",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "AnimationTimeline",
    prop: "currentTime",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "AnimationTimeline",
    prop: "duration",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Document",
    prop: "getAnimations",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Document",
    prop: "timeline",
  },
  {
    featureId: "web-animations",
    kind: "newIdent",
    name: "DocumentTimeline",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Element",
    prop: "animate",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Element",
    prop: "animationcancel_event",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Element",
    prop: "animationend_event",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Element",
    prop: "animationiteration_event",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Element",
    prop: "animationstart_event",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "Element",
    prop: "getAnimations",
  },
  {
    featureId: "web-animations",
    kind: "newIdent",
    name: "KeyframeEffect",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "KeyframeEffect",
    prop: "composite",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "KeyframeEffect",
    prop: "getKeyframes",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "KeyframeEffect",
    prop: "iterationComposite",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "KeyframeEffect",
    prop: "pseudoElement",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "KeyframeEffect",
    prop: "setKeyframes",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "KeyframeEffect",
    prop: "target",
  },
  {
    featureId: "web-animations",
    kind: "instanceMember",
    iface: "ShadowRoot",
    prop: "getAnimations",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "AnalyserNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AnalyserNode",
    prop: "fftSize",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AnalyserNode",
    prop: "frequencyBinCount",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AnalyserNode",
    prop: "getByteFrequencyData",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AnalyserNode",
    prop: "getByteTimeDomainData",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AnalyserNode",
    prop: "getFloatFrequencyData",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AnalyserNode",
    prop: "getFloatTimeDomainData",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AnalyserNode",
    prop: "maxDecibels",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AnalyserNode",
    prop: "minDecibels",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AnalyserNode",
    prop: "smoothingTimeConstant",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "AudioBuffer",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBuffer",
    prop: "copyFromChannel",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBuffer",
    prop: "copyToChannel",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBuffer",
    prop: "duration",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBuffer",
    prop: "getChannelData",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBuffer",
    prop: "length",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBuffer",
    prop: "numberOfChannels",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBuffer",
    prop: "sampleRate",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "AudioBufferSourceNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBufferSourceNode",
    prop: "buffer",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBufferSourceNode",
    prop: "detune",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBufferSourceNode",
    prop: "loop",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBufferSourceNode",
    prop: "loopEnd",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBufferSourceNode",
    prop: "loopStart",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBufferSourceNode",
    prop: "playbackRate",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioBufferSourceNode",
    prop: "start",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "AudioContext",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "baseLatency",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "close",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "createMediaElementSource",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "createMediaStreamDestination",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "createMediaStreamSource",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "createMediaStreamTrackSource",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "error_event",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "getOutputTimestamp",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "outputLatency",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "resume",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "setSinkId",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "sinkId",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "sinkchange_event",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioContext",
    prop: "suspend",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioDestinationNode",
    prop: "maxChannelCount",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioListener",
    prop: "forwardX",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioListener",
    prop: "forwardY",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioListener",
    prop: "forwardZ",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioListener",
    prop: "positionX",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioListener",
    prop: "positionY",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioListener",
    prop: "positionZ",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioListener",
    prop: "upX",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioListener",
    prop: "upY",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioListener",
    prop: "upZ",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioNode",
    prop: "channelCount",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioNode",
    prop: "channelCountMode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioNode",
    prop: "channelInterpretation",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioNode",
    prop: "connect",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioNode",
    prop: "context",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioNode",
    prop: "disconnect",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioNode",
    prop: "numberOfInputs",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioNode",
    prop: "numberOfOutputs",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "automationRate",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "cancelAndHoldAtTime",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "cancelScheduledValues",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "defaultValue",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "exponentialRampToValueAtTime",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "linearRampToValueAtTime",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "maxValue",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "minValue",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "setTargetAtTime",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "setValueAtTime",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "setValueCurveAtTime",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParam",
    prop: "value",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParamMap",
    prop: "@@iterator",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParamMap",
    prop: "entries",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParamMap",
    prop: "forEach",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParamMap",
    prop: "get",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParamMap",
    prop: "has",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParamMap",
    prop: "keys",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParamMap",
    prop: "size",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioParamMap",
    prop: "values",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioScheduledSourceNode",
    prop: "ended_event",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioScheduledSourceNode",
    prop: "start",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioScheduledSourceNode",
    prop: "stop",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "AudioSinkInfo",
    prop: "type",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createAnalyser",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createBiquadFilter",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createBuffer",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createBufferSource",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createChannelMerger",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createChannelSplitter",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createConstantSource",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createConvolver",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createDelay",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createDynamicsCompressor",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createGain",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createIIRFilter",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createOscillator",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createPanner",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createPeriodicWave",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createStereoPanner",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "createWaveShaper",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "currentTime",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "decodeAudioData",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "destination",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "listener",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "sampleRate",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "state",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BaseAudioContext",
    prop: "statechange_event",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "BiquadFilterNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BiquadFilterNode",
    prop: "Q",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BiquadFilterNode",
    prop: "detune",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BiquadFilterNode",
    prop: "frequency",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BiquadFilterNode",
    prop: "gain",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BiquadFilterNode",
    prop: "getFrequencyResponse",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "BiquadFilterNode",
    prop: "type",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "ChannelMergerNode",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "ChannelSplitterNode",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "ConstantSourceNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "ConstantSourceNode",
    prop: "offset",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "ConvolverNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "ConvolverNode",
    prop: "buffer",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "ConvolverNode",
    prop: "normalize",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "DelayNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "DelayNode",
    prop: "delayTime",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "DynamicsCompressorNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "DynamicsCompressorNode",
    prop: "attack",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "DynamicsCompressorNode",
    prop: "knee",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "DynamicsCompressorNode",
    prop: "ratio",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "DynamicsCompressorNode",
    prop: "reduction",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "DynamicsCompressorNode",
    prop: "release",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "DynamicsCompressorNode",
    prop: "threshold",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "GainNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "GainNode",
    prop: "gain",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "IIRFilterNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "IIRFilterNode",
    prop: "getFrequencyResponse",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "MediaElementAudioSourceNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "MediaElementAudioSourceNode",
    prop: "mediaElement",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "MediaStreamAudioDestinationNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "MediaStreamAudioDestinationNode",
    prop: "stream",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "MediaStreamAudioSourceNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "MediaStreamAudioSourceNode",
    prop: "mediaStream",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "MediaStreamTrackAudioSourceNode",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "OscillatorNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "OscillatorNode",
    prop: "detune",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "OscillatorNode",
    prop: "frequency",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "OscillatorNode",
    prop: "setPeriodicWave",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "OscillatorNode",
    prop: "type",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "PannerNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "coneInnerAngle",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "coneOuterAngle",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "coneOuterGain",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "distanceModel",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "maxDistance",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "orientationX",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "orientationY",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "orientationZ",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "panningModel",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "positionX",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "positionY",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "positionZ",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "refDistance",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "PannerNode",
    prop: "rolloffFactor",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "PeriodicWave",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "StereoPannerNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "StereoPannerNode",
    prop: "pan",
  },
  {
    featureId: "web-audio",
    kind: "newIdent",
    name: "WaveShaperNode",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "WaveShaperNode",
    prop: "curve",
  },
  {
    featureId: "web-audio",
    kind: "instanceMember",
    iface: "WaveShaperNode",
    prop: "oversample",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "Bluetooth",
    prop: "getAvailability",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "Bluetooth",
    prop: "getDevices",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "Bluetooth",
    prop: "requestDevice",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothCharacteristicProperties",
    prop: "authenticatedSignedWrites",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothCharacteristicProperties",
    prop: "broadcast",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothCharacteristicProperties",
    prop: "indicate",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothCharacteristicProperties",
    prop: "notify",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothCharacteristicProperties",
    prop: "read",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothCharacteristicProperties",
    prop: "reliableWrite",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothCharacteristicProperties",
    prop: "writableAuxiliaries",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothCharacteristicProperties",
    prop: "write",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothCharacteristicProperties",
    prop: "writeWithoutResponse",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothDevice",
    prop: "gatt",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothDevice",
    prop: "gattserverdisconnected_event",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothDevice",
    prop: "id",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothDevice",
    prop: "name",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "characteristicvaluechanged_event",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "getDescriptor",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "getDescriptors",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "properties",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "readValue",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "service",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "startNotifications",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "stopNotifications",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "uuid",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "value",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "writeValueWithResponse",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTCharacteristic",
    prop: "writeValueWithoutResponse",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTDescriptor",
    prop: "characteristic",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTDescriptor",
    prop: "readValue",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTDescriptor",
    prop: "uuid",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTDescriptor",
    prop: "value",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTDescriptor",
    prop: "writeValue",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTServer",
    prop: "connect",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTServer",
    prop: "connected",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTServer",
    prop: "device",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTServer",
    prop: "disconnect",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTServer",
    prop: "getPrimaryService",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTServer",
    prop: "getPrimaryServices",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTService",
    prop: "device",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTService",
    prop: "getCharacteristic",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTService",
    prop: "getCharacteristics",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTService",
    prop: "isPrimary",
  },
  {
    featureId: "web-bluetooth",
    kind: "instanceMember",
    iface: "BluetoothRemoteGATTService",
    prop: "uuid",
  },
  {
    featureId: "web-bluetooth",
    kind: "callStatic",
    base: "BluetoothUUID",
    prop: "canonicalUUID",
  },
  {
    featureId: "web-bluetooth",
    kind: "callStatic",
    base: "BluetoothUUID",
    prop: "getCharacteristic",
  },
  {
    featureId: "web-bluetooth",
    kind: "callStatic",
    base: "BluetoothUUID",
    prop: "getDescriptor",
  },
  {
    featureId: "web-bluetooth",
    kind: "callStatic",
    base: "BluetoothUUID",
    prop: "getService",
  },
  {
    featureId: "web-bluetooth",
    kind: "member",
    base: "navigator",
    prop: "bluetooth",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "Crypto",
    prop: "getRandomValues",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "Crypto",
    prop: "randomUUID",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "Crypto",
    prop: "subtle",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "CryptoKey",
    prop: "algorithm",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "CryptoKey",
    prop: "extractable",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "CryptoKey",
    prop: "type",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "CryptoKey",
    prop: "usages",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "decrypt",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "deriveBits",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "deriveKey",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "digest",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "encrypt",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "exportKey",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "generateKey",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "importKey",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "secure_context_required",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "sign",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "unwrapKey",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "verify",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "worker_support",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "SubtleCrypto",
    prop: "wrapKey",
  },
  {
    featureId: "web-cryptography",
    kind: "instanceMember",
    iface: "crypto",
    prop: "worker_support",
  },
  {
    featureId: "web-locks",
    kind: "instanceMember",
    iface: "Lock",
    prop: "mode",
  },
  {
    featureId: "web-locks",
    kind: "instanceMember",
    iface: "Lock",
    prop: "name",
  },
  {
    featureId: "web-locks",
    kind: "instanceMember",
    iface: "LockManager",
    prop: "query",
  },
  {
    featureId: "web-locks",
    kind: "instanceMember",
    iface: "LockManager",
    prop: "request",
  },
  {
    featureId: "web-locks",
    kind: "member",
    base: "navigator",
    prop: "locks",
  },
  {
    featureId: "web-locks",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "locks",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIAccess",
    prop: "inputs",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIAccess",
    prop: "outputs",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIAccess",
    prop: "statechange_event",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIAccess",
    prop: "sysexEnabled",
  },
  {
    featureId: "web-midi",
    kind: "newIdent",
    name: "MIDIConnectionEvent",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIConnectionEvent",
    prop: "port",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIInput",
    prop: "midimessage_event",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIInputMap",
    prop: "@@iterator",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIInputMap",
    prop: "entries",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIInputMap",
    prop: "forEach",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIInputMap",
    prop: "get",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIInputMap",
    prop: "has",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIInputMap",
    prop: "keys",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIInputMap",
    prop: "size",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIInputMap",
    prop: "values",
  },
  {
    featureId: "web-midi",
    kind: "newIdent",
    name: "MIDIMessageEvent",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIMessageEvent",
    prop: "data",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutput",
    prop: "clear",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutput",
    prop: "send",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutputMap",
    prop: "@@iterator",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutputMap",
    prop: "entries",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutputMap",
    prop: "forEach",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutputMap",
    prop: "get",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutputMap",
    prop: "has",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutputMap",
    prop: "keys",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutputMap",
    prop: "size",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIOutputMap",
    prop: "values",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "close",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "connection",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "id",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "manufacturer",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "name",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "open",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "state",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "statechange_event",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "type",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "MIDIPort",
    prop: "version",
  },
  {
    featureId: "web-midi",
    kind: "member",
    base: "navigator",
    prop: "requestMIDIAccess",
  },
  {
    featureId: "web-midi",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_midi",
  },
  {
    featureId: "web-nfc",
    kind: "newIdent",
    name: "NDEFMessage",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFMessage",
    prop: "records",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFMessage",
    prop: "secure_context_required",
  },
  {
    featureId: "web-nfc",
    kind: "newIdent",
    name: "NDEFReader",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFReader",
    prop: "makeReadOnly",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFReader",
    prop: "reading_event",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFReader",
    prop: "readingerror_event",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFReader",
    prop: "scan",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFReader",
    prop: "secure_context_required",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFReader",
    prop: "write",
  },
  {
    featureId: "web-nfc",
    kind: "newIdent",
    name: "NDEFReadingEvent",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFReadingEvent",
    prop: "message",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFReadingEvent",
    prop: "secure_context_required",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFReadingEvent",
    prop: "serialNumber",
  },
  {
    featureId: "web-nfc",
    kind: "newIdent",
    name: "NDEFRecord",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFRecord",
    prop: "data",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFRecord",
    prop: "encoding",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFRecord",
    prop: "id",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFRecord",
    prop: "lang",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFRecord",
    prop: "mediaType",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFRecord",
    prop: "recordType",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFRecord",
    prop: "secure_context_required",
  },
  {
    featureId: "web-nfc",
    kind: "instanceMember",
    iface: "NDEFRecord",
    prop: "toRecords",
  },
  {
    featureId: "web-otp",
    kind: "instanceMember",
    iface: "OTPCredential",
    prop: "code",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "AuthenticatorAssertionResponse",
    prop: "authenticatorData",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "AuthenticatorAssertionResponse",
    prop: "signature",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "AuthenticatorAssertionResponse",
    prop: "userHandle",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "AuthenticatorAttestationResponse",
    prop: "attestationObject",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "AuthenticatorAttestationResponse",
    prop: "getTransports",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "AuthenticatorResponse",
    prop: "clientDataJSON",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "PublicKeyCredential",
    prop: "authenticatorAttachment",
  },
  {
    featureId: "webauthn",
    kind: "callStatic",
    base: "PublicKeyCredential",
    prop: "getClientCapabilities",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "PublicKeyCredential",
    prop: "getClientExtensionResults",
  },
  {
    featureId: "webauthn",
    kind: "callStatic",
    base: "PublicKeyCredential",
    prop: "isConditionalMediationAvailable",
  },
  {
    featureId: "webauthn",
    kind: "callStatic",
    base: "PublicKeyCredential",
    prop: "isUserVerifyingPlatformAuthenticatorAvailable",
  },
  {
    featureId: "webauthn",
    kind: "callStatic",
    base: "PublicKeyCredential",
    prop: "parseCreationOptionsFromJSON",
  },
  {
    featureId: "webauthn",
    kind: "callStatic",
    base: "PublicKeyCredential",
    prop: "parseRequestOptionsFromJSON",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "PublicKeyCredential",
    prop: "rawId",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "PublicKeyCredential",
    prop: "response",
  },
  {
    featureId: "webauthn",
    kind: "instanceMember",
    iface: "PublicKeyCredential",
    prop: "toJSON",
  },
  {
    featureId: "webauthn-public-key-easy",
    kind: "instanceMember",
    iface: "AuthenticatorAttestationResponse",
    prop: "getAuthenticatorData",
  },
  {
    featureId: "webauthn-public-key-easy",
    kind: "instanceMember",
    iface: "AuthenticatorAttestationResponse",
    prop: "getPublicKey",
  },
  {
    featureId: "webauthn-public-key-easy",
    kind: "instanceMember",
    iface: "AuthenticatorAttestationResponse",
    prop: "getPublicKeyAlgorithm",
  },
  {
    featureId: "webauthn-signals",
    kind: "callStatic",
    base: "PublicKeyCredential",
    prop: "signalAllAcceptedCredentials",
  },
  {
    featureId: "webauthn-signals",
    kind: "callStatic",
    base: "PublicKeyCredential",
    prop: "signalCurrentUserDetails",
  },
  {
    featureId: "webauthn-signals",
    kind: "callStatic",
    base: "PublicKeyCredential",
    prop: "signalUnknownCredential",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "AudioData",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "allocationSize",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "clone",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "close",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "copyTo",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "duration",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "format",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "numberOfChannels",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "numberOfFrames",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "sampleRate",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioData",
    prop: "timestamp",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "AudioDecoder",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioDecoder",
    prop: "close",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioDecoder",
    prop: "configure",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioDecoder",
    prop: "decode",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioDecoder",
    prop: "decodeQueueSize",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioDecoder",
    prop: "dequeue_event",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioDecoder",
    prop: "flush",
  },
  {
    featureId: "webcodecs",
    kind: "callStatic",
    base: "AudioDecoder",
    prop: "isConfigSupported",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioDecoder",
    prop: "reset",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioDecoder",
    prop: "state",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "AudioEncoder",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioEncoder",
    prop: "close",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioEncoder",
    prop: "configure",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioEncoder",
    prop: "dequeue_event",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioEncoder",
    prop: "encode",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioEncoder",
    prop: "encodeQueueSize",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioEncoder",
    prop: "flush",
  },
  {
    featureId: "webcodecs",
    kind: "callStatic",
    base: "AudioEncoder",
    prop: "isConfigSupported",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioEncoder",
    prop: "reset",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "AudioEncoder",
    prop: "state",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "EncodedAudioChunk",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedAudioChunk",
    prop: "byteLength",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedAudioChunk",
    prop: "copyTo",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedAudioChunk",
    prop: "duration",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedAudioChunk",
    prop: "timestamp",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedAudioChunk",
    prop: "type",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "EncodedVideoChunk",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedVideoChunk",
    prop: "byteLength",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedVideoChunk",
    prop: "copyTo",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedVideoChunk",
    prop: "duration",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedVideoChunk",
    prop: "timestamp",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "EncodedVideoChunk",
    prop: "type",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "ImageDecoder",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageDecoder",
    prop: "close",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageDecoder",
    prop: "complete",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageDecoder",
    prop: "completed",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageDecoder",
    prop: "decode",
  },
  {
    featureId: "webcodecs",
    kind: "callStatic",
    base: "ImageDecoder",
    prop: "isTypeSupported",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageDecoder",
    prop: "reset",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageDecoder",
    prop: "tracks",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageDecoder",
    prop: "type",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageTrack",
    prop: "animated",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageTrack",
    prop: "frameCount",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageTrack",
    prop: "repetitionCount",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageTrack",
    prop: "selected",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageTrackList",
    prop: "length",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageTrackList",
    prop: "ready",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageTrackList",
    prop: "selectedIndex",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "ImageTrackList",
    prop: "selectedTrack",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "VideoColorSpace",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoColorSpace",
    prop: "fullRange",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoColorSpace",
    prop: "matrix",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoColorSpace",
    prop: "primaries",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoColorSpace",
    prop: "toJSON",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoColorSpace",
    prop: "transfer",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "VideoDecoder",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoDecoder",
    prop: "close",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoDecoder",
    prop: "configure",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoDecoder",
    prop: "decode",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoDecoder",
    prop: "decodeQueueSize",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoDecoder",
    prop: "dequeue_event",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoDecoder",
    prop: "flush",
  },
  {
    featureId: "webcodecs",
    kind: "callStatic",
    base: "VideoDecoder",
    prop: "isConfigSupported",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoDecoder",
    prop: "reset",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoDecoder",
    prop: "state",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "VideoEncoder",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoEncoder",
    prop: "close",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoEncoder",
    prop: "configure",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoEncoder",
    prop: "dequeue_event",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoEncoder",
    prop: "encode",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoEncoder",
    prop: "encodeQueueSize",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoEncoder",
    prop: "flush",
  },
  {
    featureId: "webcodecs",
    kind: "callStatic",
    base: "VideoEncoder",
    prop: "isConfigSupported",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoEncoder",
    prop: "reset",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoEncoder",
    prop: "state",
  },
  {
    featureId: "webcodecs",
    kind: "newIdent",
    name: "VideoFrame",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "allocationSize",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "clone",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "close",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "codedHeight",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "codedRect",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "codedWidth",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "colorSpace",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "copyTo",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "displayHeight",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "displayWidth",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "duration",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "flip",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "format",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "rotation",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "timestamp",
  },
  {
    featureId: "webcodecs",
    kind: "instanceMember",
    iface: "VideoFrame",
    prop: "visibleRect",
  },
  {
    featureId: "webdriver",
    kind: "member",
    base: "navigator",
    prop: "webdriver",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "webglcontextcreationerror_event",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "webglcontextlost_event",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "HTMLCanvasElement",
    prop: "webglcontextrestored_event",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLActiveInfo",
    prop: "name",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLActiveInfo",
    prop: "size",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLActiveInfo",
    prop: "type",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLActiveInfo",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLBuffer",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "newIdent",
    name: "WebGLContextEvent",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLContextEvent",
    prop: "statusMessage",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLContextEvent",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLFramebuffer",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLProgram",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderbuffer",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "activeTexture",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "attachShader",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "bindAttribLocation",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "bindBuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "bindFramebuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "bindRenderbuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "bindTexture",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "blendColor",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "blendEquation",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "blendEquationSeparate",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "blendFunc",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "blendFuncSeparate",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "bufferData",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "bufferSubData",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "canvas",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "checkFramebufferStatus",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "clear",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "clearColor",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "clearDepth",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "clearStencil",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "colorMask",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "compileShader",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "compressedTexImage2D",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "compressedTexSubImage2D",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "copyTexImage2D",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "copyTexSubImage2D",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "createBuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "createFramebuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "createProgram",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "createRenderbuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "createShader",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "createTexture",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "cullFace",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "deleteBuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "deleteFramebuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "deleteProgram",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "deleteRenderbuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "deleteShader",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "deleteTexture",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "depthFunc",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "depthMask",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "depthRange",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "detachShader",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "disable",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "disableVertexAttribArray",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "drawArrays",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "drawElements",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "drawingBufferFormat",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "drawingBufferHeight",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "drawingBufferStorage",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "drawingBufferWidth",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "enable",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "enableVertexAttribArray",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "finish",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "flush",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "framebufferRenderbuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "framebufferTexture2D",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "frontFace",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "generateMipmap",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getActiveAttrib",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getActiveUniform",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getAttachedShaders",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getAttribLocation",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getBufferParameter",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getContextAttributes",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getError",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getExtension",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getFramebufferAttachmentParameter",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getParameter",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getProgramInfoLog",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getProgramParameter",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getRenderbufferParameter",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getShaderInfoLog",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getShaderParameter",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getShaderPrecisionFormat",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getShaderSource",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getSupportedExtensions",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getTexParameter",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getUniform",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getUniformLocation",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getVertexAttrib",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "getVertexAttribOffset",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "hint",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "isBuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "isContextLost",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "isEnabled",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "isFramebuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "isProgram",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "isRenderbuffer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "isShader",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "isTexture",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "lineWidth",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "linkProgram",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "pixelStorei",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "polygonOffset",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "readPixels",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "renderbufferStorage",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "sampleCoverage",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "scissor",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "shaderSource",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "stencilFunc",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "stencilFuncSeparate",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "stencilMask",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "stencilMaskSeparate",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "stencilOp",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "stencilOpSeparate",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "texImage2D",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "texParameterf",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "texParameteri",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "texSubImage2D",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform1f",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform1fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform1i",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform1iv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform2f",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform2fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform2i",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform2iv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform3f",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform3fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform3i",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform3iv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform4f",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform4fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform4i",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniform4iv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniformMatrix2fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniformMatrix3fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "uniformMatrix4fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "useProgram",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "validateProgram",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "vertexAttrib1f",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "vertexAttrib1fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "vertexAttrib2f",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "vertexAttrib2fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "vertexAttrib3f",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "vertexAttrib3fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "vertexAttrib4f",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "vertexAttrib4fv",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "vertexAttribPointer",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "viewport",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLShader",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLShaderPrecisionFormat",
    prop: "precision",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLShaderPrecisionFormat",
    prop: "rangeMax",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLShaderPrecisionFormat",
    prop: "rangeMin",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLShaderPrecisionFormat",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLTexture",
    prop: "worker_support",
  },
  {
    featureId: "webgl",
    kind: "instanceMember",
    iface: "WebGLUniformLocation",
    prop: "worker_support",
  },
  {
    featureId: "webgl-color-management",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "drawingBufferColorSpace",
  },
  {
    featureId: "webgl-color-management",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "unpackColorSpace",
  },
  {
    featureId: "webgl-compressed-texture-astc",
    kind: "instanceMember",
    iface: "WEBGL_compressed_texture_astc",
    prop: "getSupportedProfiles",
  },
  {
    featureId: "webgl-debug-shaders",
    kind: "instanceMember",
    iface: "WEBGL_debug_shaders",
    prop: "getTranslatedShaderSource",
  },
  {
    featureId: "webgl-draw-buffers",
    kind: "instanceMember",
    iface: "WEBGL_draw_buffers",
    prop: "drawBuffersWEBGL",
  },
  {
    featureId: "webgl-lose-context",
    kind: "instanceMember",
    iface: "WEBGL_lose_context",
    prop: "loseContext",
  },
  {
    featureId: "webgl-lose-context",
    kind: "instanceMember",
    iface: "WEBGL_lose_context",
    prop: "restoreContext",
  },
  {
    featureId: "webgl-multi-draw",
    kind: "instanceMember",
    iface: "WEBGL_multi_draw",
    prop: "multiDrawArraysInstancedWEBGL",
  },
  {
    featureId: "webgl-multi-draw",
    kind: "instanceMember",
    iface: "WEBGL_multi_draw",
    prop: "multiDrawArraysWEBGL",
  },
  {
    featureId: "webgl-multi-draw",
    kind: "instanceMember",
    iface: "WEBGL_multi_draw",
    prop: "multiDrawElementsInstancedWEBGL",
  },
  {
    featureId: "webgl-multi-draw",
    kind: "instanceMember",
    iface: "WEBGL_multi_draw",
    prop: "multiDrawElementsWEBGL",
  },
  {
    featureId: "webgl-oes-draw-buffers-indexed",
    kind: "instanceMember",
    iface: "OES_draw_buffers_indexed",
    prop: "blendEquationSeparateiOES",
  },
  {
    featureId: "webgl-oes-draw-buffers-indexed",
    kind: "instanceMember",
    iface: "OES_draw_buffers_indexed",
    prop: "blendEquationiOES",
  },
  {
    featureId: "webgl-oes-draw-buffers-indexed",
    kind: "instanceMember",
    iface: "OES_draw_buffers_indexed",
    prop: "blendFuncSeparateiOES",
  },
  {
    featureId: "webgl-oes-draw-buffers-indexed",
    kind: "instanceMember",
    iface: "OES_draw_buffers_indexed",
    prop: "blendFunciOES",
  },
  {
    featureId: "webgl-oes-draw-buffers-indexed",
    kind: "instanceMember",
    iface: "OES_draw_buffers_indexed",
    prop: "colorMaskiOES",
  },
  {
    featureId: "webgl-oes-draw-buffers-indexed",
    kind: "instanceMember",
    iface: "OES_draw_buffers_indexed",
    prop: "disableiOES",
  },
  {
    featureId: "webgl-oes-draw-buffers-indexed",
    kind: "instanceMember",
    iface: "OES_draw_buffers_indexed",
    prop: "enableiOES",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "activeTexture",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "attachShader",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "beginQuery",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "beginTransformFeedback",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindAttribLocation",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindBuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindBufferBase",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindBufferRange",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindFramebuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindRenderbuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindSampler",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindTexture",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindTransformFeedback",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bindVertexArray",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "blendColor",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "blendEquation",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "blendEquationSeparate",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "blendFunc",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "blendFuncSeparate",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "blitFramebuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bufferData",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "bufferSubData",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "canvas",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "checkFramebufferStatus",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "clear",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "clearBufferfi",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "clearBufferfv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "clearBufferiv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "clearBufferuiv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "clearColor",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "clearDepth",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "clearStencil",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "clientWaitSync",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "colorMask",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "compileShader",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "compressedTexImage2D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "compressedTexImage3D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "compressedTexSubImage2D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "compressedTexSubImage3D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "copyBufferSubData",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "copyTexImage2D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "copyTexSubImage2D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "copyTexSubImage3D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createBuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createFramebuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createProgram",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createQuery",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createRenderbuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createSampler",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createShader",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createTexture",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createTransformFeedback",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "createVertexArray",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "cullFace",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteBuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteFramebuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteProgram",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteQuery",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteRenderbuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteSampler",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteShader",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteSync",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteTexture",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteTransformFeedback",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "deleteVertexArray",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "depthFunc",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "depthMask",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "depthRange",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "detachShader",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "disable",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "disableVertexAttribArray",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawArrays",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawArraysInstanced",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawBuffers",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawElements",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawElementsInstanced",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawRangeElements",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawingBufferFormat",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawingBufferHeight",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawingBufferStorage",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawingBufferWidth",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "enable",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "enableVertexAttribArray",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "endQuery",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "endTransformFeedback",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "fenceSync",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "finish",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "flush",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "framebufferRenderbuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "framebufferTexture2D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "framebufferTextureLayer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "frontFace",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "generateMipmap",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getActiveAttrib",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getActiveUniform",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getActiveUniformBlockName",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getActiveUniformBlockParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getActiveUniforms",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getAttachedShaders",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getAttribLocation",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getBufferParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getBufferSubData",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getContextAttributes",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getError",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getExtension",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getFragDataLocation",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getFramebufferAttachmentParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getIndexedParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getInternalformatParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getProgramInfoLog",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getProgramParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getQuery",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getQueryParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getRenderbufferParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getSamplerParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getShaderInfoLog",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getShaderParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getShaderPrecisionFormat",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getShaderSource",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getSupportedExtensions",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getSyncParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getTexParameter",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getTransformFeedbackVarying",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getUniform",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getUniformBlockIndex",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getUniformIndices",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getUniformLocation",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getVertexAttrib",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "getVertexAttribOffset",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "hint",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "invalidateFramebuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "invalidateSubFramebuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isBuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isContextLost",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isEnabled",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isFramebuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isProgram",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isQuery",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isRenderbuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isSampler",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isShader",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isSync",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isTexture",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isTransformFeedback",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "isVertexArray",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "lineWidth",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "linkProgram",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "pauseTransformFeedback",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "pixelStorei",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "polygonOffset",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "readBuffer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "readPixels",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "renderbufferStorage",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "renderbufferStorageMultisample",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "resumeTransformFeedback",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "sampleCoverage",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "samplerParameterf",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "samplerParameteri",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "scissor",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "shaderSource",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "stencilFunc",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "stencilFuncSeparate",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "stencilMask",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "stencilMaskSeparate",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "stencilOp",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "stencilOpSeparate",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "texImage2D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "texImage3D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "texParameterf",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "texParameteri",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "texStorage2D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "texStorage3D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "texSubImage2D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "texSubImage3D",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "transformFeedbackVaryings",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform1f",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform1fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform1i",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform1iv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform1ui",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform1uiv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform2f",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform2fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform2i",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform2iv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform2ui",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform2uiv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform3f",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform3fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform3i",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform3iv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform3ui",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform3uiv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform4f",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform4fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform4i",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform4iv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform4ui",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniform4uiv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformBlockBinding",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformMatrix2fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformMatrix2x3fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformMatrix2x4fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformMatrix3fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformMatrix3x2fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformMatrix3x4fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformMatrix4fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformMatrix4x2fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "uniformMatrix4x3fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "useProgram",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "validateProgram",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttrib1f",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttrib1fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttrib2f",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttrib2fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttrib3f",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttrib3fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttrib4f",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttrib4fv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttribDivisor",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttribI4i",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttribI4iv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttribI4ui",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttribI4uiv",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttribIPointer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "vertexAttribPointer",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "viewport",
  },
  {
    featureId: "webgl2",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "waitSync",
  },
  {
    featureId: "webgl2-color-management",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "drawingBufferColorSpace",
  },
  {
    featureId: "webgl2-color-management",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "unpackColorSpace",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPU",
    prop: "getPreferredCanvasFormat",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPU",
    prop: "requestAdapter",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPU",
    prop: "wgslLanguageFeatures",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapter",
    prop: "features",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapter",
    prop: "info",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapter",
    prop: "limits",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapter",
    prop: "requestDevice",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapterInfo",
    prop: "architecture",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapterInfo",
    prop: "description",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapterInfo",
    prop: "device",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapterInfo",
    prop: "subgroupMaxSize",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapterInfo",
    prop: "subgroupMinSize",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUAdapterInfo",
    prop: "vendor",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBindGroup",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBindGroupLayout",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBuffer",
    prop: "destroy",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBuffer",
    prop: "getMappedRange",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBuffer",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBuffer",
    prop: "mapAsync",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBuffer",
    prop: "mapState",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBuffer",
    prop: "size",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBuffer",
    prop: "unmap",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUBuffer",
    prop: "usage",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCanvasContext",
    prop: "canvas",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCanvasContext",
    prop: "configure",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCanvasContext",
    prop: "getConfiguration",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCanvasContext",
    prop: "getCurrentTexture",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCanvasContext",
    prop: "unconfigure",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandBuffer",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "beginComputePass",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "beginRenderPass",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "clearBuffer",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "copyBufferToBuffer",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "copyBufferToTexture",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "copyTextureToBuffer",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "copyTextureToTexture",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "finish",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "insertDebugMarker",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "popDebugGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "pushDebugGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCommandEncoder",
    prop: "resolveQuerySet",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCompilationInfo",
    prop: "messages",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCompilationMessage",
    prop: "length",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCompilationMessage",
    prop: "lineNum",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCompilationMessage",
    prop: "linePos",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCompilationMessage",
    prop: "message",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCompilationMessage",
    prop: "offset",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUCompilationMessage",
    prop: "type",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePassEncoder",
    prop: "dispatchWorkgroups",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePassEncoder",
    prop: "dispatchWorkgroupsIndirect",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePassEncoder",
    prop: "end",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePassEncoder",
    prop: "insertDebugMarker",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePassEncoder",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePassEncoder",
    prop: "popDebugGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePassEncoder",
    prop: "pushDebugGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePassEncoder",
    prop: "setBindGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePassEncoder",
    prop: "setPipeline",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePipeline",
    prop: "getBindGroupLayout",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUComputePipeline",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "adapterInfo",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createBindGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createBindGroupLayout",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createBuffer",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createCommandEncoder",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createComputePipeline",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createComputePipelineAsync",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createPipelineLayout",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createQuerySet",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createRenderBundleEncoder",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createRenderPipeline",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createRenderPipelineAsync",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createSampler",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createShaderModule",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "createTexture",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "destroy",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "features",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "importExternalTexture",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "limits",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "lost",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "popErrorScope",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "pushErrorScope",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "queue",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDevice",
    prop: "uncapturederror_event",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDeviceLostInfo",
    prop: "message",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUDeviceLostInfo",
    prop: "reason",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUError",
    prop: "message",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUExternalTexture",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "newIdent",
    name: "GPUInternalError",
  },
  {
    featureId: "webgpu",
    kind: "newIdent",
    name: "GPUOutOfMemoryError",
  },
  {
    featureId: "webgpu",
    kind: "newIdent",
    name: "GPUPipelineError",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUPipelineError",
    prop: "reason",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUPipelineLayout",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQuerySet",
    prop: "count",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQuerySet",
    prop: "destroy",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQuerySet",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQuerySet",
    prop: "type",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQueue",
    prop: "copyExternalImageToTexture",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQueue",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQueue",
    prop: "onSubmittedWorkDone",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQueue",
    prop: "submit",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQueue",
    prop: "writeBuffer",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUQueue",
    prop: "writeTexture",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundle",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "draw",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "drawIndexed",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "drawIndexedIndirect",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "drawIndirect",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "finish",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "insertDebugMarker",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "popDebugGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "pushDebugGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "setBindGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "setIndexBuffer",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "setPipeline",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderBundleEncoder",
    prop: "setVertexBuffer",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "beginOcclusionQuery",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "draw",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "drawIndexed",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "drawIndexedIndirect",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "drawIndirect",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "end",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "endOcclusionQuery",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "executeBundles",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "insertDebugMarker",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "popDebugGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "pushDebugGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "setBindGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "setBlendConstant",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "setIndexBuffer",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "setPipeline",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "setScissorRect",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "setStencilReference",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "setVertexBuffer",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPassEncoder",
    prop: "setViewport",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPipeline",
    prop: "getBindGroupLayout",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPURenderPipeline",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSampler",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUShaderModule",
    prop: "getCompilationInfo",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUShaderModule",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "@@iterator",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "entries",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_bgra8unorm-storage",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_clip-distances",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_depth-clip-control",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_depth32float-stencil8",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_dual-source-blending",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_float32-blendable",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_float32-filterable",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_indirect-first-instance",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_rg11b10ufloat-renderable",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_shader-f16",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_texture-compression-astc",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_texture-compression-bc",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_texture-compression-etc2",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "feature_timestamp-query",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "forEach",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "has",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "keys",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "size",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedFeatures",
    prop: "values",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxBindGroups",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxBindGroupsPlusVertexBuffers",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxBindingsPerBindGroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxBufferSize",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxColorAttachmentBytesPerSample",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxColorAttachments",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxComputeInvocationsPerWorkgroup",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxComputeWorkgroupSizeX",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxComputeWorkgroupSizeY",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxComputeWorkgroupSizeZ",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxComputeWorkgroupStorageSize",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxComputeWorkgroupsPerDimension",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxDynamicStorageBuffersPerPipelineLayout",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxDynamicUniformBuffersPerPipelineLayout",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxInterStageShaderVariables",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxSampledTexturesPerShaderStage",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxSamplersPerShaderStage",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxStorageBufferBindingSize",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxStorageBuffersPerShaderStage",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxStorageTexturesPerShaderStage",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxTextureArrayLayers",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxTextureDimension1D",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxTextureDimension2D",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxTextureDimension3D",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxUniformBufferBindingSize",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxUniformBuffersPerShaderStage",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxVertexAttributes",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxVertexBufferArrayStride",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "maxVertexBuffers",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "minStorageBufferOffsetAlignment",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUSupportedLimits",
    prop: "minUniformBufferOffsetAlignment",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "createView",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "depthOrArrayLayers",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "destroy",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "dimension",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "format",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "height",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "mipLevelCount",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "sampleCount",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "usage",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTexture",
    prop: "width",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUTextureView",
    prop: "label",
  },
  {
    featureId: "webgpu",
    kind: "newIdent",
    name: "GPUUncapturedErrorEvent",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "GPUUncapturedErrorEvent",
    prop: "error",
  },
  {
    featureId: "webgpu",
    kind: "newIdent",
    name: "GPUValidationError",
  },
  {
    featureId: "webgpu",
    kind: "member",
    base: "navigator",
    prop: "gpu",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "@@iterator",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "entries",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "extension_packed_4x8_integer_dot_product",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "extension_readonly_and_readwrite_storage_textures",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "extension_unrestricted_pointer_parameters",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "forEach",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "has",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "keys",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "size",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WGSLLanguageFeatures",
    prop: "values",
  },
  {
    featureId: "webgpu",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "gpu",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HID",
    prop: "connect_event",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HID",
    prop: "disconnect_event",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HID",
    prop: "getDevices",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HID",
    prop: "requestDevice",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HID",
    prop: "worker_support",
  },
  {
    featureId: "webhid",
    kind: "newIdent",
    name: "HIDConnectionEvent",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDConnectionEvent",
    prop: "device",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDConnectionEvent",
    prop: "worker_support",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "close",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "collections",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "forget",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "inputreport_event",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "open",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "opened",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "productId",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "productName",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "receiveFeatureReport",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "sendFeatureReport",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "sendReport",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "vendorId",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDDevice",
    prop: "worker_support",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDInputReportEvent",
    prop: "data",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDInputReportEvent",
    prop: "device",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDInputReportEvent",
    prop: "reportId",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "HIDInputReportEvent",
    prop: "worker_support",
  },
  {
    featureId: "webhid",
    kind: "member",
    base: "navigator",
    prop: "hid",
  },
  {
    featureId: "webhid",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "hid",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "ML",
    prop: "createContext",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLContext",
    prop: "dispatch",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLContext",
    prop: "opSupportLimits",
  },
  {
    featureId: "webnn",
    kind: "newIdent",
    name: "MLGraphBuilder",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "abs",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "add",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "argMax",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "argMin",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "averagePool2d",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "batchNormalization",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "build",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "cast",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "ceil",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "clamp",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "concat",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "constant",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "conv2d",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "convTranspose2d",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "cos",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "cumulativeSum",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "dequantizeLinear",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "div",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "elu",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "equal",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "erf",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "exp",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "expand",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "floor",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "gather",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "gatherElements",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "gatherND",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "gemm",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "greater",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "greaterOrEqual",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "gru",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "gruCell",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "hardSigmoid",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "hardSwish",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "identity",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "input",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "instanceNormalization",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "l2Pool2d",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "layerNormalization",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "leakyRelu",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "lesser",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "lesserOrEqual",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "linear",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "log",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "logicalAnd",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "logicalNot",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "logicalOr",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "logicalXor",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "lstm",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "lstmCell",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "matmul",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "max",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "maxPool2d",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "min",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "mul",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "neg",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "pad",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "pow",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "prelu",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "quantizeLinear",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reciprocal",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceL1",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceL2",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceLogSum",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceLogSumExp",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceMax",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceMean",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceMin",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceProduct",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceSum",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reduceSumSquare",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "relu",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "resample2d",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "reshape",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "scatterElements",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "scatterND",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "sigmoid",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "sign",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "sin",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "slice",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "softmax",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "softplus",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "softsign",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "split",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "sqrt",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "sub",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "tan",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "tanh",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "tile",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "transpose",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "triangular",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "MLGraphBuilder",
    prop: "where",
  },
  {
    featureId: "webnn",
    kind: "member",
    base: "navigator",
    prop: "ml",
  },
  {
    featureId: "webnn",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "ml",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCCertificate",
    prop: "expires",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCCertificate",
    prop: "getFingerprints",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDTMFSender",
    prop: "canInsertDTMF",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDTMFSender",
    prop: "insertDTMF",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDTMFSender",
    prop: "toneBuffer",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDTMFSender",
    prop: "tonechange_event",
  },
  {
    featureId: "webrtc",
    kind: "newIdent",
    name: "RTCDTMFToneChangeEvent",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDTMFToneChangeEvent",
    prop: "tone",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "binaryType",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "bufferedAmount",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "bufferedAmountLowThreshold",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "bufferedamountlow_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "close",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "close_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "closing_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "error_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "id",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "label",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "maxPacketLifeTime",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "maxRetransmits",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "message_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "negotiated",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "open_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "ordered",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "protocol",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "readyState",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "sctp_sdp_21",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "send",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannel",
    prop: "transferable",
  },
  {
    featureId: "webrtc",
    kind: "newIdent",
    name: "RTCDataChannelEvent",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDataChannelEvent",
    prop: "channel",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDtlsTransport",
    prop: "error_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDtlsTransport",
    prop: "getRemoteCertificates",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDtlsTransport",
    prop: "iceTransport",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDtlsTransport",
    prop: "state",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCDtlsTransport",
    prop: "statechange_event",
  },
  {
    featureId: "webrtc",
    kind: "newIdent",
    name: "RTCError",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCError",
    prop: "errorDetail",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCError",
    prop: "receivedAlert",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCError",
    prop: "sctpCauseCode",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCError",
    prop: "sdpLineNumber",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCError",
    prop: "sentAlert",
  },
  {
    featureId: "webrtc",
    kind: "newIdent",
    name: "RTCErrorEvent",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCErrorEvent",
    prop: "error",
  },
  {
    featureId: "webrtc",
    kind: "newIdent",
    name: "RTCIceCandidate",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "address",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "candidate",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "component",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "foundation",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "port",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "priority",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "protocol",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "relatedAddress",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "relatedPort",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "relayProtocol",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "sdpMLineIndex",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "sdpMid",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "tcpType",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "toJSON",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "type",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "url",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceCandidate",
    prop: "usernameFragment",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "gatheringState",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "gatheringstatechange_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "getLocalCandidates",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "getLocalParameters",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "getRemoteCandidates",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "getRemoteParameters",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "getSelectedCandidatePair",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "role",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "selectedcandidatepairchange_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "state",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCIceTransport",
    prop: "statechange_event",
  },
  {
    featureId: "webrtc",
    kind: "newIdent",
    name: "RTCPeerConnection",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "addIceCandidate",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "addTrack",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "addTransceiver",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "canTrickleIceCandidates",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "close",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "connectionState",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "connectionstatechange_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "createAnswer",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "createDataChannel",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "createOffer",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "currentLocalDescription",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "currentRemoteDescription",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "datachannel_event",
  },
  {
    featureId: "webrtc",
    kind: "callStatic",
    base: "RTCPeerConnection",
    prop: "generateCertificate",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "getConfiguration",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "getReceivers",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "getSenders",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "getTransceivers",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "iceConnectionState",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "iceGatheringState",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "icecandidate_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "icecandidateerror_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "iceconnectionstatechange_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "icegatheringstatechange_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "localDescription",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "negotiationneeded_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "pendingLocalDescription",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "pendingRemoteDescription",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "remoteDescription",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "removeTrack",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "restartIce",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "setConfiguration",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "setLocalDescription",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "setRemoteDescription",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "signalingState",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "signalingstatechange_event",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "track_event",
  },
  {
    featureId: "webrtc",
    kind: "newIdent",
    name: "RTCPeerConnectionIceErrorEvent",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnectionIceErrorEvent",
    prop: "address",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnectionIceErrorEvent",
    prop: "errorCode",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnectionIceErrorEvent",
    prop: "errorText",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnectionIceErrorEvent",
    prop: "port",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnectionIceErrorEvent",
    prop: "url",
  },
  {
    featureId: "webrtc",
    kind: "newIdent",
    name: "RTCPeerConnectionIceEvent",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnectionIceEvent",
    prop: "candidate",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCPeerConnectionIceEvent",
    prop: "url",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpReceiver",
    prop: "createEncodedStreams",
  },
  {
    featureId: "webrtc",
    kind: "callStatic",
    base: "RTCRtpReceiver",
    prop: "getCapabilities",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpReceiver",
    prop: "getContributingSources",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpReceiver",
    prop: "getParameters",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpReceiver",
    prop: "getSynchronizationSources",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpReceiver",
    prop: "jitterBufferTarget",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpReceiver",
    prop: "track",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpReceiver",
    prop: "transport",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "createEncodedStreams",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "dtmf",
  },
  {
    featureId: "webrtc",
    kind: "callStatic",
    base: "RTCRtpSender",
    prop: "getCapabilities",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "getParameters",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "replaceTrack",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "setParameters",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "setStreams",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "track",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "transport",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "currentDirection",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "direction",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "getHeaderExtensionsToNegotiate",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "getNegotiatedHeaderExtensions",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "mid",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "receiver",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "sender",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "setCodecPreferences",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "setHeaderExtensionsToNegotiate",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCRtpTransceiver",
    prop: "stop",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCSessionDescription",
    prop: "sdp",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCSessionDescription",
    prop: "toJSON",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCSessionDescription",
    prop: "type",
  },
  {
    featureId: "webrtc",
    kind: "newIdent",
    name: "RTCTrackEvent",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCTrackEvent",
    prop: "receiver",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCTrackEvent",
    prop: "streams",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCTrackEvent",
    prop: "track",
  },
  {
    featureId: "webrtc",
    kind: "instanceMember",
    iface: "RTCTrackEvent",
    prop: "transceiver",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "DedicatedWorkerGlobalScope",
    prop: "rtctransform_event",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "newIdent",
    name: "RTCEncodedAudioFrame",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCEncodedAudioFrame",
    prop: "data",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCEncodedAudioFrame",
    prop: "getMetadata",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "newIdent",
    name: "RTCEncodedVideoFrame",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCEncodedVideoFrame",
    prop: "data",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCEncodedVideoFrame",
    prop: "getMetadata",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCEncodedVideoFrame",
    prop: "type",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCRtpReceiver",
    prop: "transform",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "newIdent",
    name: "RTCRtpScriptTransform",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCRtpScriptTransformer",
    prop: "generateKeyFrame",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCRtpScriptTransformer",
    prop: "options",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCRtpScriptTransformer",
    prop: "readable",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCRtpScriptTransformer",
    prop: "sendKeyFrameRequest",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCRtpScriptTransformer",
    prop: "writable",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "transform",
  },
  {
    featureId: "webrtc-encoded-transform",
    kind: "instanceMember",
    iface: "RTCTransformEvent",
    prop: "transformer",
  },
  {
    featureId: "webrtc-sctp",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "sctp",
  },
  {
    featureId: "webrtc-sctp",
    kind: "instanceMember",
    iface: "RTCSctpTransport",
    prop: "maxChannels",
  },
  {
    featureId: "webrtc-sctp",
    kind: "instanceMember",
    iface: "RTCSctpTransport",
    prop: "maxMessageSize",
  },
  {
    featureId: "webrtc-sctp",
    kind: "instanceMember",
    iface: "RTCSctpTransport",
    prop: "state",
  },
  {
    featureId: "webrtc-sctp",
    kind: "instanceMember",
    iface: "RTCSctpTransport",
    prop: "statechange_event",
  },
  {
    featureId: "webrtc-sctp",
    kind: "instanceMember",
    iface: "RTCSctpTransport",
    prop: "transport",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCPeerConnection",
    prop: "getStats",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCRtpReceiver",
    prop: "getStats",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCRtpSender",
    prop: "getStats",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "@@iterator",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "entries",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "forEach",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "get",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "has",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "keys",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "size",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_candidate-pair",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_certificate",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_codec",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_data-channel",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_inbound-rtp",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_local-candidate",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_media-playout",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_media-source",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_outbound-rtp",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_peer-connection",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_remote-candidate",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_remote-inbound-rtp",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_remote-outbound-rtp",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "type_transport",
  },
  {
    featureId: "webrtc-stats",
    kind: "instanceMember",
    iface: "RTCStatsReport",
    prop: "values",
  },
  {
    featureId: "websockets",
    kind: "newIdent",
    name: "CloseEvent",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "CloseEvent",
    prop: "code",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "CloseEvent",
    prop: "reason",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "CloseEvent",
    prop: "wasClean",
  },
  {
    featureId: "websockets",
    kind: "newIdent",
    name: "WebSocket",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "binaryType",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "bufferedAmount",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "close",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "close_event",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "error_event",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "extensions",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "message_event",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "open_event",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "protocol",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "protocol_rfc_6455",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "readyState",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "send",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "url",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocket",
    prop: "worker_support",
  },
  {
    featureId: "websockets",
    kind: "newIdent",
    name: "WebSocketError",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocketError",
    prop: "closeCode",
  },
  {
    featureId: "websockets",
    kind: "instanceMember",
    iface: "WebSocketError",
    prop: "reason",
  },
  {
    featureId: "webtransport",
    kind: "newIdent",
    name: "WebTransport",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "byob_readers",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "close",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "closed",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "congestionControl",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "createBidirectionalStream",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "createUnidirectionalStream",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "datagrams",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "getStats",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "incomingBidirectionalStreams",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "incomingUnidirectionalStreams",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "ready",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransport",
    prop: "reliability",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportBidirectionalStream",
    prop: "readable",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportBidirectionalStream",
    prop: "writable",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportDatagramDuplexStream",
    prop: "byob_readers",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportDatagramDuplexStream",
    prop: "incomingHighWaterMark",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportDatagramDuplexStream",
    prop: "incomingMaxAge",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportDatagramDuplexStream",
    prop: "maxDatagramSize",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportDatagramDuplexStream",
    prop: "outgoingHighWaterMark",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportDatagramDuplexStream",
    prop: "outgoingMaxAge",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportDatagramDuplexStream",
    prop: "readable",
  },
  {
    featureId: "webtransport",
    kind: "newIdent",
    name: "WebTransportError",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportError",
    prop: "source",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportError",
    prop: "streamErrorCode",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportReceiveStream",
    prop: "getStats",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportSendStream",
    prop: "getStats",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportSendStream",
    prop: "getWriter",
  },
  {
    featureId: "webtransport",
    kind: "instanceMember",
    iface: "WebTransportSendStream",
    prop: "sendOrder",
  },
  {
    featureId: "webusb",
    kind: "member",
    base: "navigator",
    prop: "usb",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USB",
    prop: "connect_event",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USB",
    prop: "disconnect_event",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USB",
    prop: "getDevices",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USB",
    prop: "requestDevice",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USB",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBAlternateInterface",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBAlternateInterface",
    prop: "alternateSetting",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBAlternateInterface",
    prop: "endpoints",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBAlternateInterface",
    prop: "interfaceClass",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBAlternateInterface",
    prop: "interfaceName",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBAlternateInterface",
    prop: "interfaceProtocol",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBAlternateInterface",
    prop: "interfaceSubclass",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBAlternateInterface",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBConfiguration",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBConfiguration",
    prop: "configurationName",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBConfiguration",
    prop: "configurationValue",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBConfiguration",
    prop: "interfaces",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBConfiguration",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBConnectionEvent",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBConnectionEvent",
    prop: "device",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBConnectionEvent",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "claimInterface",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "clearHalt",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "close",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "configuration",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "configurations",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "controlTransferIn",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "controlTransferOut",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "deviceClass",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "deviceProtocol",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "deviceSubclass",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "deviceVersionMajor",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "deviceVersionMinor",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "deviceVersionSubminor",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "forget",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "isochronousTransferIn",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "isochronousTransferOut",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "manufacturerName",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "open",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "opened",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "productId",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "productName",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "releaseInterface",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "reset",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "selectAlternateInterface",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "selectConfiguration",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "serialNumber",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "transferIn",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "transferOut",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "usbVersionMajor",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "usbVersionMinor",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "usbVersionSubminor",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "vendorId",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBDevice",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBEndpoint",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBEndpoint",
    prop: "direction",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBEndpoint",
    prop: "endpointNumber",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBEndpoint",
    prop: "packetSize",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBEndpoint",
    prop: "type",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBEndpoint",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBInTransferResult",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBInTransferResult",
    prop: "data",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBInTransferResult",
    prop: "status",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBInTransferResult",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBInterface",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBInterface",
    prop: "alternate",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBInterface",
    prop: "alternates",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBInterface",
    prop: "claimed",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBInterface",
    prop: "interfaceNumber",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBInterface",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBIsochronousInTransferPacket",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousInTransferPacket",
    prop: "data",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousInTransferPacket",
    prop: "status",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousInTransferPacket",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBIsochronousInTransferResult",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousInTransferResult",
    prop: "data",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousInTransferResult",
    prop: "packets",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousInTransferResult",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBIsochronousOutTransferPacket",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousOutTransferPacket",
    prop: "bytesWritten",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousOutTransferPacket",
    prop: "status",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousOutTransferPacket",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBIsochronousOutTransferResult",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousOutTransferResult",
    prop: "packets",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBIsochronousOutTransferResult",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "newIdent",
    name: "USBOutTransferResult",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBOutTransferResult",
    prop: "bytesWritten",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBOutTransferResult",
    prop: "status",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "USBOutTransferResult",
    prop: "worker_support",
  },
  {
    featureId: "webusb",
    kind: "instanceMember",
    iface: "WorkerNavigator",
    prop: "usb",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "Gamepad",
    prop: "displayId",
  },
  {
    featureId: "webvr",
    kind: "member",
    base: "navigator",
    prop: "activeVRDisplays",
  },
  {
    featureId: "webvr",
    kind: "member",
    base: "navigator",
    prop: "getVRDisplays",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "PositionSensorVRDevice",
    prop: "getImmediateState",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "PositionSensorVRDevice",
    prop: "getState",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "PositionSensorVRDevice",
    prop: "resetSensor",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "cancelAnimationFrame",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "capabilities",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "depthFar",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "depthNear",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "displayId",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "displayName",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "exitPresent",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "getEyeParameters",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "getFrameData",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "getImmediatePose",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "getLayers",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "getPose",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "isConnected",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "isPresenting",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "requestAnimationFrame",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "requestPresent",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "resetPose",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "stageParameters",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplay",
    prop: "submitFrame",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplayCapabilities",
    prop: "canPresent",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplayCapabilities",
    prop: "hasExternalDisplay",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplayCapabilities",
    prop: "hasOrientation",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplayCapabilities",
    prop: "hasPosition",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplayCapabilities",
    prop: "maxLayers",
  },
  {
    featureId: "webvr",
    kind: "newIdent",
    name: "VRDisplayEvent",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplayEvent",
    prop: "display",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRDisplayEvent",
    prop: "reason",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VREyeParameters",
    prop: "fieldOfView",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VREyeParameters",
    prop: "maximumFieldOfView",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VREyeParameters",
    prop: "minimumFieldOfView",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VREyeParameters",
    prop: "offset",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VREyeParameters",
    prop: "renderHeight",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VREyeParameters",
    prop: "renderWidth",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFieldOfView",
    prop: "downDegrees",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFieldOfView",
    prop: "leftDegrees",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFieldOfView",
    prop: "rightDegrees",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFieldOfView",
    prop: "upDegrees",
  },
  {
    featureId: "webvr",
    kind: "newIdent",
    name: "VRFrameData",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFrameData",
    prop: "leftProjectionMatrix",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFrameData",
    prop: "leftViewMatrix",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFrameData",
    prop: "pose",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFrameData",
    prop: "rightProjectionMatrix",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFrameData",
    prop: "rightViewMatrix",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRFrameData",
    prop: "timestamp",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRPose",
    prop: "angularAcceleration",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRPose",
    prop: "angularVelocity",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRPose",
    prop: "linearAcceleration",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRPose",
    prop: "linearVelocity",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRPose",
    prop: "orientation",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRPose",
    prop: "position",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRStageParameters",
    prop: "sittingToStandingTransform",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRStageParameters",
    prop: "sizeX",
  },
  {
    featureId: "webvr",
    kind: "instanceMember",
    iface: "VRStageParameters",
    prop: "sizeY",
  },
  {
    featureId: "webvr",
    kind: "member",
    base: "window",
    prop: "vrdisplayactivate_event",
  },
  {
    featureId: "webvr",
    kind: "member",
    base: "window",
    prop: "vrdisplayconnect_event",
  },
  {
    featureId: "webvr",
    kind: "member",
    base: "window",
    prop: "vrdisplaydeactivate_event",
  },
  {
    featureId: "webvr",
    kind: "member",
    base: "window",
    prop: "vrdisplaydisconnect_event",
  },
  {
    featureId: "webvr",
    kind: "member",
    base: "window",
    prop: "vrdisplaypresentchange_event",
  },
  {
    featureId: "webvtt",
    kind: "newIdent",
    name: "VTTCue",
  },
  {
    featureId: "webvtt",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "getCueAsHTML",
  },
  {
    featureId: "webvtt",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "text",
  },
  {
    featureId: "webvtt-cue-alignment",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "lineAlign",
  },
  {
    featureId: "webvtt-cue-alignment",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "positionAlign",
  },
  {
    featureId: "webvtt-cue-settings",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "align",
  },
  {
    featureId: "webvtt-cue-settings",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "line",
  },
  {
    featureId: "webvtt-cue-settings",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "position",
  },
  {
    featureId: "webvtt-cue-settings",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "size",
  },
  {
    featureId: "webvtt-cue-settings",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "snapToLines",
  },
  {
    featureId: "webvtt-cue-settings",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "vertical",
  },
  {
    featureId: "webvtt-regions",
    kind: "instanceMember",
    iface: "VTTCue",
    prop: "region",
  },
  {
    featureId: "webvtt-regions",
    kind: "newIdent",
    name: "VTTRegion",
  },
  {
    featureId: "webvtt-regions",
    kind: "instanceMember",
    iface: "VTTRegion",
    prop: "id",
  },
  {
    featureId: "webvtt-regions",
    kind: "instanceMember",
    iface: "VTTRegion",
    prop: "lines",
  },
  {
    featureId: "webvtt-regions",
    kind: "instanceMember",
    iface: "VTTRegion",
    prop: "regionAnchorX",
  },
  {
    featureId: "webvtt-regions",
    kind: "instanceMember",
    iface: "VTTRegion",
    prop: "regionAnchorY",
  },
  {
    featureId: "webvtt-regions",
    kind: "instanceMember",
    iface: "VTTRegion",
    prop: "scroll",
  },
  {
    featureId: "webvtt-regions",
    kind: "instanceMember",
    iface: "VTTRegion",
    prop: "viewportAnchorX",
  },
  {
    featureId: "webvtt-regions",
    kind: "instanceMember",
    iface: "VTTRegion",
    prop: "viewportAnchorY",
  },
  {
    featureId: "webvtt-regions",
    kind: "instanceMember",
    iface: "VTTRegion",
    prop: "width",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRAnchor",
    prop: "anchorSpace",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRAnchor",
    prop: "delete",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRAnchorSet",
    prop: "@@iterator",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRAnchorSet",
    prop: "entries",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRAnchorSet",
    prop: "forEach",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRAnchorSet",
    prop: "has",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRAnchorSet",
    prop: "keys",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRAnchorSet",
    prop: "size",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRAnchorSet",
    prop: "values",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "createAnchor",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "trackedAnchors",
  },
  {
    featureId: "webxr-anchors",
    kind: "instanceMember",
    iface: "XRHitTestResult",
    prop: "createAnchor",
  },
  {
    featureId: "webxr-ar",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "environmentBlendMode",
  },
  {
    featureId: "webxr-ar",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "interactionMode",
  },
  {
    featureId: "webxr-ar",
    kind: "instanceMember",
    iface: "XRView",
    prop: "isFirstPersonObserver",
  },
  {
    featureId: "webxr-camera",
    kind: "instanceMember",
    iface: "XRCamera",
    prop: "height",
  },
  {
    featureId: "webxr-camera",
    kind: "instanceMember",
    iface: "XRCamera",
    prop: "width",
  },
  {
    featureId: "webxr-camera",
    kind: "instanceMember",
    iface: "XRView",
    prop: "camera",
  },
  {
    featureId: "webxr-camera",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "getCameraImage",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRCPUDepthInformation",
    prop: "data",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRCPUDepthInformation",
    prop: "getDepthInMeters",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRDepthInformation",
    prop: "height",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRDepthInformation",
    prop: "normDepthBufferFromNormView",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRDepthInformation",
    prop: "rawValueToMeters",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRDepthInformation",
    prop: "width",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "getDepthInformation",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "depthDataFormat",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "depthUsage",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "getDepthInformation",
  },
  {
    featureId: "webxr-depth-sensing",
    kind: "instanceMember",
    iface: "XRWebGLDepthInformation",
    prop: "texture",
  },
  {
    featureId: "webxr-device",
    kind: "member",
    base: "navigator",
    prop: "xr",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "WebGL2RenderingContext",
    prop: "makeXRCompatible",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "WebGLRenderingContext",
    prop: "makeXRCompatible",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRBoundedReferenceSpace",
    prop: "boundsGeometry",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "getPose",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "getViewerPose",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "session",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSource",
    prop: "gripSpace",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSource",
    prop: "handedness",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSource",
    prop: "profiles",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSource",
    prop: "targetRayMode",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSource",
    prop: "targetRaySpace",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourceArray",
    prop: "@@iterator",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourceArray",
    prop: "entries",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourceArray",
    prop: "forEach",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourceArray",
    prop: "keys",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourceArray",
    prop: "length",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourceArray",
    prop: "values",
  },
  {
    featureId: "webxr-device",
    kind: "newIdent",
    name: "XRInputSourceEvent",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourceEvent",
    prop: "frame",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourceEvent",
    prop: "inputSource",
  },
  {
    featureId: "webxr-device",
    kind: "newIdent",
    name: "XRInputSourcesChangeEvent",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourcesChangeEvent",
    prop: "added",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourcesChangeEvent",
    prop: "removed",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRInputSourcesChangeEvent",
    prop: "session",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRPose",
    prop: "angularVelocity",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRPose",
    prop: "emulatedPosition",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRPose",
    prop: "linearVelocity",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRPose",
    prop: "transform",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRReferenceSpace",
    prop: "getOffsetReferenceSpace",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRReferenceSpace",
    prop: "reset_event",
  },
  {
    featureId: "webxr-device",
    kind: "newIdent",
    name: "XRReferenceSpaceEvent",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRReferenceSpaceEvent",
    prop: "referenceSpace",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRReferenceSpaceEvent",
    prop: "transform",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRRenderState",
    prop: "baseLayer",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRRenderState",
    prop: "depthFar",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRRenderState",
    prop: "depthNear",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRRenderState",
    prop: "inlineVerticalFieldOfView",
  },
  {
    featureId: "webxr-device",
    kind: "newIdent",
    name: "XRRigidTransform",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRRigidTransform",
    prop: "inverse",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRRigidTransform",
    prop: "matrix",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRRigidTransform",
    prop: "orientation",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRRigidTransform",
    prop: "position",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "cancelAnimationFrame",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "enabledFeatures",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "end",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "end_event",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "inputSources",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "inputsourceschange_event",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "renderState",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "requestAnimationFrame",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "requestReferenceSpace",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "select_event",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "selectend_event",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "selectstart_event",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "squeeze_event",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "squeezeend_event",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "squeezestart_event",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "updateRenderState",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "visibilityState",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "visibilitychange_event",
  },
  {
    featureId: "webxr-device",
    kind: "newIdent",
    name: "XRSessionEvent",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSessionEvent",
    prop: "session",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSystem",
    prop: "devicechange_event",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSystem",
    prop: "isSessionSupported",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRSystem",
    prop: "requestSession",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRView",
    prop: "eye",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRView",
    prop: "projectionMatrix",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRView",
    prop: "recommendedViewportScale",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRView",
    prop: "requestViewportScale",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRView",
    prop: "transform",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRViewerPose",
    prop: "views",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRViewport",
    prop: "height",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRViewport",
    prop: "width",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRViewport",
    prop: "x",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRViewport",
    prop: "y",
  },
  {
    featureId: "webxr-device",
    kind: "newIdent",
    name: "XRWebGLLayer",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRWebGLLayer",
    prop: "antialias",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRWebGLLayer",
    prop: "fixedFoveation",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRWebGLLayer",
    prop: "framebuffer",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRWebGLLayer",
    prop: "framebufferHeight",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRWebGLLayer",
    prop: "framebufferWidth",
  },
  {
    featureId: "webxr-device",
    kind: "callStatic",
    base: "XRWebGLLayer",
    prop: "getNativeFramebufferScaleFactor",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRWebGLLayer",
    prop: "getViewport",
  },
  {
    featureId: "webxr-device",
    kind: "instanceMember",
    iface: "XRWebGLLayer",
    prop: "ignoreDepthValues",
  },
  {
    featureId: "webxr-dom-overlays",
    kind: "instanceMember",
    iface: "Element",
    prop: "beforexrselect_event",
  },
  {
    featureId: "webxr-dom-overlays",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "domOverlayState",
  },
  {
    featureId: "webxr-gamepads",
    kind: "instanceMember",
    iface: "XRInputSource",
    prop: "gamepad",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "fillJointRadii",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "fillPoses",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "getJointPose",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRHand",
    prop: "@@iterator",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRHand",
    prop: "entries",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRHand",
    prop: "forEach",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRHand",
    prop: "get",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRHand",
    prop: "keys",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRHand",
    prop: "size",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRHand",
    prop: "values",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRInputSource",
    prop: "hand",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRJointPose",
    prop: "radius",
  },
  {
    featureId: "webxr-hand-input",
    kind: "instanceMember",
    iface: "XRJointSpace",
    prop: "jointName",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "getHitTestResults",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "getHitTestResultsForTransientInput",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRHitTestResult",
    prop: "getPose",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRHitTestSource",
    prop: "cancel",
  },
  {
    featureId: "webxr-hit-test",
    kind: "newIdent",
    name: "XRRay",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRRay",
    prop: "direction",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRRay",
    prop: "matrix",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRRay",
    prop: "origin",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "requestHitTestSource",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "requestHitTestSourceForTransientInput",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRTransientInputHitTestResult",
    prop: "inputSource",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRTransientInputHitTestResult",
    prop: "results",
  },
  {
    featureId: "webxr-hit-test",
    kind: "instanceMember",
    iface: "XRTransientInputHitTestSource",
    prop: "cancel",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCompositionLayer",
    prop: "blendTextureSourceAlpha",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCompositionLayer",
    prop: "destroy",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCompositionLayer",
    prop: "layout",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCompositionLayer",
    prop: "mipLevels",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCompositionLayer",
    prop: "needsRedraw",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCubeLayer",
    prop: "orientation",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCubeLayer",
    prop: "redraw_event",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCubeLayer",
    prop: "space",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCylinderLayer",
    prop: "aspectRatio",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCylinderLayer",
    prop: "centralAngle",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCylinderLayer",
    prop: "radius",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCylinderLayer",
    prop: "redraw_event",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCylinderLayer",
    prop: "space",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRCylinderLayer",
    prop: "transform",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XREquirectLayer",
    prop: "centralHorizontalAngle",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XREquirectLayer",
    prop: "lowerVerticalAngle",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XREquirectLayer",
    prop: "radius",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XREquirectLayer",
    prop: "redraw_event",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XREquirectLayer",
    prop: "space",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XREquirectLayer",
    prop: "transform",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XREquirectLayer",
    prop: "upperVerticalAngle",
  },
  {
    featureId: "webxr-layers",
    kind: "newIdent",
    name: "XRLayerEvent",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRLayerEvent",
    prop: "layer",
  },
  {
    featureId: "webxr-layers",
    kind: "newIdent",
    name: "XRMediaBinding",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRMediaBinding",
    prop: "createCylinderLayer",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRMediaBinding",
    prop: "createEquirectLayer",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRMediaBinding",
    prop: "createQuadLayer",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRProjectionLayer",
    prop: "fixedFoveation",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRProjectionLayer",
    prop: "ignoreDepthValues",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRProjectionLayer",
    prop: "textureArrayLength",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRProjectionLayer",
    prop: "textureHeight",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRProjectionLayer",
    prop: "textureWidth",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRQuadLayer",
    prop: "height",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRQuadLayer",
    prop: "redraw_event",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRQuadLayer",
    prop: "space",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRQuadLayer",
    prop: "transform",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRQuadLayer",
    prop: "width",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRRenderState",
    prop: "layers",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRSubImage",
    prop: "viewport",
  },
  {
    featureId: "webxr-layers",
    kind: "newIdent",
    name: "XRWebGLBinding",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "createCubeLayer",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "createCylinderLayer",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "createEquirectLayer",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "createProjectionLayer",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "createQuadLayer",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "getSubImage",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "getViewSubImage",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "nativeProjectionScaleFactor",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLSubImage",
    prop: "colorTexture",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLSubImage",
    prop: "colorTextureHeight",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLSubImage",
    prop: "colorTextureWidth",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLSubImage",
    prop: "depthStencilTexture",
  },
  {
    featureId: "webxr-layers",
    kind: "instanceMember",
    iface: "XRWebGLSubImage",
    prop: "imageIndex",
  },
  {
    featureId: "webxr-lighting-estimation",
    kind: "instanceMember",
    iface: "XRFrame",
    prop: "getLightEstimate",
  },
  {
    featureId: "webxr-lighting-estimation",
    kind: "instanceMember",
    iface: "XRLightEstimate",
    prop: "primaryLightDirection",
  },
  {
    featureId: "webxr-lighting-estimation",
    kind: "instanceMember",
    iface: "XRLightEstimate",
    prop: "primaryLightIntensity",
  },
  {
    featureId: "webxr-lighting-estimation",
    kind: "instanceMember",
    iface: "XRLightEstimate",
    prop: "sphericalHarmonicsCoefficients",
  },
  {
    featureId: "webxr-lighting-estimation",
    kind: "instanceMember",
    iface: "XRLightProbe",
    prop: "probeSpace",
  },
  {
    featureId: "webxr-lighting-estimation",
    kind: "instanceMember",
    iface: "XRLightProbe",
    prop: "reflectionchange_event",
  },
  {
    featureId: "webxr-lighting-estimation",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "preferredReflectionFormat",
  },
  {
    featureId: "webxr-lighting-estimation",
    kind: "instanceMember",
    iface: "XRSession",
    prop: "requestLightProbe",
  },
  {
    featureId: "webxr-lighting-estimation",
    kind: "instanceMember",
    iface: "XRWebGLBinding",
    prop: "getReflectionCubeMap",
  },
  {
    featureId: "wheel-events",
    kind: "instanceMember",
    iface: "Element",
    prop: "wheel_event",
  },
  {
    featureId: "wheel-events",
    kind: "newIdent",
    name: "WheelEvent",
  },
  {
    featureId: "wheel-events",
    kind: "instanceMember",
    iface: "WheelEvent",
    prop: "deltaMode",
  },
  {
    featureId: "wheel-events",
    kind: "instanceMember",
    iface: "WheelEvent",
    prop: "deltaX",
  },
  {
    featureId: "wheel-events",
    kind: "instanceMember",
    iface: "WheelEvent",
    prop: "deltaY",
  },
  {
    featureId: "wheel-events",
    kind: "instanceMember",
    iface: "WheelEvent",
    prop: "deltaZ",
  },
  {
    featureId: "wheel-events",
    kind: "instanceMember",
    iface: "WheelEvent",
    prop: "pinch_to_zoom_support",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "DOMContentLoaded_event",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "blur_event",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "close",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "closed",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "error_event",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "focus",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "focus_event",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "frameElement",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "frames",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "innerHeight",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "innerWidth",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "length",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "load_event",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "moveBy",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "moveTo",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "name",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "open",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "opener",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "outerHeight",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "outerWidth",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "parent",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "resizeBy",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "resizeTo",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "resize_event",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "screen",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "screenLeft",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "screenTop",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "screenX",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "screenY",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "self",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "stop",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "top",
  },
  {
    featureId: "window",
    kind: "member",
    base: "window",
    prop: "window",
  },
  {
    featureId: "window-controls-overlay",
    kind: "member",
    base: "navigator",
    prop: "windowControlsOverlay",
  },
  {
    featureId: "window-controls-overlay",
    kind: "instanceMember",
    iface: "WindowControlsOverlay",
    prop: "geometrychange_event",
  },
  {
    featureId: "window-controls-overlay",
    kind: "instanceMember",
    iface: "WindowControlsOverlay",
    prop: "getTitlebarAreaRect",
  },
  {
    featureId: "window-controls-overlay",
    kind: "instanceMember",
    iface: "WindowControlsOverlay",
    prop: "visible",
  },
  {
    featureId: "window-controls-overlay",
    kind: "newIdent",
    name: "WindowControlsOverlayGeometryChangeEvent",
  },
  {
    featureId: "window-controls-overlay",
    kind: "instanceMember",
    iface: "WindowControlsOverlayGeometryChangeEvent",
    prop: "titlebarAreaRect",
  },
  {
    featureId: "window-controls-overlay",
    kind: "instanceMember",
    iface: "WindowControlsOverlayGeometryChangeEvent",
    prop: "visible",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "Permissions",
    prop: "permission_window-management",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "Screen",
    prop: "change_event",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "Screen",
    prop: "isExtended",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetailed",
    prop: "availLeft",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetailed",
    prop: "availTop",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetailed",
    prop: "devicePixelRatio",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetailed",
    prop: "isInternal",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetailed",
    prop: "isPrimary",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetailed",
    prop: "label",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetailed",
    prop: "left",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetailed",
    prop: "top",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetails",
    prop: "currentScreen",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetails",
    prop: "currentscreenchange_event",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetails",
    prop: "screens",
  },
  {
    featureId: "window-management",
    kind: "instanceMember",
    iface: "ScreenDetails",
    prop: "screenschange_event",
  },
  {
    featureId: "window-management",
    kind: "member",
    base: "window",
    prop: "getScreenDetails",
  },
  {
    featureId: "writingsuggestions",
    kind: "instanceMember",
    iface: "HTMLElement",
    prop: "writingSuggestions",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "@@iterator",
  },
  {
    featureId: "xhr",
    kind: "newIdent",
    name: "FormData",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "append",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "delete",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "entries",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "forEach",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "get",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "getAll",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "has",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "keys",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "set",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "values",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "FormData",
    prop: "worker_support",
  },
  {
    featureId: "xhr",
    kind: "newIdent",
    name: "ProgressEvent",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "ProgressEvent",
    prop: "lengthComputable",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "ProgressEvent",
    prop: "loaded",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "ProgressEvent",
    prop: "total",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "ProgressEvent",
    prop: "worker_support",
  },
  {
    featureId: "xhr",
    kind: "newIdent",
    name: "XMLHttpRequest",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "abort",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "abort_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "authorization_removed_cross_origin",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "error_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "getAllResponseHeaders",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "getResponseHeader",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "load_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "loadend_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "loadstart_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "open",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "overrideMimeType",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "progress_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "readyState",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "readystatechange_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "response",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "responseText",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "responseType",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "responseURL",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "responseXML",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "send",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "setRequestHeader",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "status",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "statusText",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "timeout",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "timeout_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "upload",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "withCredentials",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequest",
    prop: "worker_support",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequestUpload",
    prop: "abort_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequestUpload",
    prop: "error_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequestUpload",
    prop: "load_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequestUpload",
    prop: "loadend_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequestUpload",
    prop: "loadstart_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequestUpload",
    prop: "progress_event",
  },
  {
    featureId: "xhr",
    kind: "instanceMember",
    iface: "XMLHttpRequestUpload",
    prop: "timeout_event",
  },
  {
    featureId: "xml-serializer",
    kind: "newIdent",
    name: "XMLSerializer",
  },
  {
    featureId: "xml-serializer",
    kind: "instanceMember",
    iface: "XMLSerializer",
    prop: "serializeToString",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "Document",
    prop: "createExpression",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "Document",
    prop: "evaluate",
  },
  {
    featureId: "xpath",
    kind: "newIdent",
    name: "XPathEvaluator",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathEvaluator",
    prop: "createExpression",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathEvaluator",
    prop: "evaluate",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathExpression",
    prop: "evaluate",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathResult",
    prop: "booleanValue",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathResult",
    prop: "invalidIteratorState",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathResult",
    prop: "iterateNext",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathResult",
    prop: "numberValue",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathResult",
    prop: "resultType",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathResult",
    prop: "singleNodeValue",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathResult",
    prop: "snapshotItem",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathResult",
    prop: "snapshotLength",
  },
  {
    featureId: "xpath",
    kind: "instanceMember",
    iface: "XPathResult",
    prop: "stringValue",
  },
  {
    featureId: "xslt",
    kind: "newIdent",
    name: "XSLTProcessor",
  },
  {
    featureId: "xslt",
    kind: "instanceMember",
    iface: "XSLTProcessor",
    prop: "clearParameters",
  },
  {
    featureId: "xslt",
    kind: "instanceMember",
    iface: "XSLTProcessor",
    prop: "getParameter",
  },
  {
    featureId: "xslt",
    kind: "instanceMember",
    iface: "XSLTProcessor",
    prop: "importStylesheet",
  },
  {
    featureId: "xslt",
    kind: "instanceMember",
    iface: "XSLTProcessor",
    prop: "removeParameter",
  },
  {
    featureId: "xslt",
    kind: "instanceMember",
    iface: "XSLTProcessor",
    prop: "reset",
  },
  {
    featureId: "xslt",
    kind: "instanceMember",
    iface: "XSLTProcessor",
    prop: "setParameter",
  },
  {
    featureId: "xslt",
    kind: "instanceMember",
    iface: "XSLTProcessor",
    prop: "transformToDocument",
  },
  {
    featureId: "xslt",
    kind: "instanceMember",
    iface: "XSLTProcessor",
    prop: "transformToFragment",
  },
  {
    featureId: "canvas-2d-alpha",
    kind: "callMemberWithArgs",
    prop: "getContext",
    stringArg: {
      index: 0,
      values: ["2d"],
    },
    objectArg: {
      index: 1,
      hasKeys: ["alpha"],
    },
  },
  {
    featureId: "canvas-2d-desynchronized",
    kind: "callMemberWithArgs",
    prop: "getContext",
    stringArg: {
      index: 0,
      values: ["2d"],
    },
    objectArg: {
      index: 1,
      hasKeys: ["desynchronized"],
    },
  },
  {
    featureId: "canvas-2d-willreadfrequently",
    kind: "callMemberWithArgs",
    prop: "getContext",
    stringArg: {
      index: 0,
      values: ["2d"],
    },
    objectArg: {
      index: 1,
      hasKeys: ["willReadFrequently"],
    },
  },
  {
    featureId: "canvas-2d-color-management",
    kind: "callMemberWithArgs",
    prop: "getContext",
    stringArg: {
      index: 0,
      values: ["2d"],
    },
    objectArg: {
      index: 1,
      keyValues: [
        {
          key: "colorSpace",
          values: ["display-p3", "srgb"],
        },
      ],
    },
  },
  {
    featureId: "webgl-desynchronized",
    kind: "callMemberWithArgs",
    prop: "getContext",
    stringArg: {
      index: 0,
      values: ["webgl", "experimental-webgl"],
    },
    objectArg: {
      index: 1,
      hasKeys: ["desynchronized"],
    },
  },
  {
    featureId: "webgl2-desynchronized",
    kind: "callMemberWithArgs",
    prop: "getContext",
    stringArg: {
      index: 0,
      values: ["webgl2"],
    },
    objectArg: {
      index: 1,
      hasKeys: ["desynchronized"],
    },
  },
  {
    featureId: "js-modules-workers",
    kind: "newWithOptions",
    name: "Worker",
    objectArg: {
      index: 1,
      keyValues: [
        {
          key: "type",
          values: ["module"],
        },
      ],
    },
  },
  {
    featureId: "js-modules-shared-workers",
    kind: "newWithOptions",
    name: "SharedWorker",
    objectArg: {
      index: 1,
      keyValues: [
        {
          key: "type",
          values: ["module"],
        },
      ],
    },
  },
  {
    featureId: "transformstream-transformer-cancel",
    kind: "newWithOptions",
    name: "TransformStream",
    objectArg: {
      index: 0,
      hasKeys: ["cancel"],
    },
  },
  {
    featureId: "ext-srgb",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_sRGB"],
    },
  },
  {
    featureId: "ext-srgb",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_sRGB"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "angle-instanced-arrays",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["ANGLE_instanced_arrays"],
    },
  },
  {
    featureId: "angle-instanced-arrays",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["ANGLE_instanced_arrays"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-blend-minmax",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_blend_minmax"],
    },
  },
  {
    featureId: "ext-blend-minmax",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_blend_minmax"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-color-buffer-float",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_color_buffer_float"],
    },
  },
  {
    featureId: "ext-color-buffer-float",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_color_buffer_float"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-color-buffer-half-float",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_color_buffer_half_float"],
    },
  },
  {
    featureId: "ext-color-buffer-half-float",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_color_buffer_half_float"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_disjoint_timer_query"],
    },
  },
  {
    featureId: "ext-disjoint-timer-query",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_disjoint_timer_query"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-float-blend",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_float_blend"],
    },
  },
  {
    featureId: "ext-float-blend",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_float_blend"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-frag-depth",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_frag_depth"],
    },
  },
  {
    featureId: "ext-frag-depth",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_frag_depth"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-shader-texture-lod",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_shader_texture_lod"],
    },
  },
  {
    featureId: "ext-shader-texture-lod",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_shader_texture_lod"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-texture-compression-bptc",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_texture_compression_bptc"],
    },
  },
  {
    featureId: "ext-texture-compression-bptc",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_texture_compression_bptc"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-texture-compression-rgtc",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_texture_compression_rgtc"],
    },
  },
  {
    featureId: "ext-texture-compression-rgtc",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_texture_compression_rgtc"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-texture-filter-anisotropic",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_texture_filter_anisotropic"],
    },
  },
  {
    featureId: "ext-texture-filter-anisotropic",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_texture_filter_anisotropic"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ext-texture-norm16",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["EXT_texture_norm16"],
    },
  },
  {
    featureId: "ext-texture-norm16",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["EXT_texture_norm16"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "khr-parallel-shader-compile",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["KHR_parallel_shader_compile"],
    },
  },
  {
    featureId: "khr-parallel-shader-compile",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["KHR_parallel_shader_compile"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "oes-element-index-uint",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OES_element_index_uint"],
    },
  },
  {
    featureId: "oes-element-index-uint",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OES_element_index_uint"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "oes-fbo-render-mipmap",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OES_fbo_render_mipmap"],
    },
  },
  {
    featureId: "oes-fbo-render-mipmap",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OES_fbo_render_mipmap"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "oes-standard-derivatives",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OES_standard_derivatives"],
    },
  },
  {
    featureId: "oes-standard-derivatives",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OES_standard_derivatives"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "oes-texture-float",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OES_texture_float"],
    },
  },
  {
    featureId: "oes-texture-float",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OES_texture_float"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "oes-texture-float-linear",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OES_texture_float_linear"],
    },
  },
  {
    featureId: "oes-texture-float-linear",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OES_texture_float_linear"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "oes-texture-half-float",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OES_texture_half_float"],
    },
  },
  {
    featureId: "oes-texture-half-float",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OES_texture_half_float"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "oes-texture-half-float-linear",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OES_texture_half_float_linear"],
    },
  },
  {
    featureId: "oes-texture-half-float-linear",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OES_texture_half_float_linear"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "oes-vertex-array-object",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OES_vertex_array_object"],
    },
  },
  {
    featureId: "oes-vertex-array-object",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OES_vertex_array_object"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "ovr-multiview2",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OVR_multiview2"],
    },
  },
  {
    featureId: "ovr-multiview2",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OVR_multiview2"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-color-buffer-float",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_color_buffer_float"],
    },
  },
  {
    featureId: "webgl-color-buffer-float",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_color_buffer_float"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-compressed-texture-astc",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_astc"],
    },
  },
  {
    featureId: "webgl-compressed-texture-astc",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_astc"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-compressed-texture-etc",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_etc"],
    },
  },
  {
    featureId: "webgl-compressed-texture-etc",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_etc"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-compressed-texture-etc1",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_etc1"],
    },
  },
  {
    featureId: "webgl-compressed-texture-etc1",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_etc1"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-compressed-texture-pvrtc",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_pvrtc"],
    },
  },
  {
    featureId: "webgl-compressed-texture-pvrtc",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_pvrtc"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-compressed-texture-s3tc",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_s3tc"],
    },
  },
  {
    featureId: "webgl-compressed-texture-s3tc",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_s3tc"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-compressed-texture-s3tc-srgb",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_s3tc_srgb"],
    },
  },
  {
    featureId: "webgl-compressed-texture-s3tc-srgb",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_compressed_texture_s3tc_srgb"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-debug-renderer-info",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_debug_renderer_info"],
    },
  },
  {
    featureId: "webgl-debug-renderer-info",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_debug_renderer_info"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-debug-shaders",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_debug_shaders"],
    },
  },
  {
    featureId: "webgl-debug-shaders",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_debug_shaders"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-depth-texture",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_depth_texture"],
    },
  },
  {
    featureId: "webgl-depth-texture",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_depth_texture"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-draw-buffers",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_draw_buffers"],
    },
  },
  {
    featureId: "webgl-draw-buffers",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_draw_buffers"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-lose-context",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_lose_context"],
    },
  },
  {
    featureId: "webgl-lose-context",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_lose_context"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-multi-draw",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["WEBGL_multi_draw"],
    },
  },
  {
    featureId: "webgl-multi-draw",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["WEBGL_multi_draw"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
  {
    featureId: "webgl-oes-draw-buffers-indexed",
    kind: "callMemberWithArgs",
    prop: "getExtension",
    stringArg: {
      index: 0,
      values: ["OES_draw_buffers_indexed"],
    },
  },
  {
    featureId: "webgl-oes-draw-buffers-indexed",
    kind: "callMemberWithArgs",
    prop: "includes",
    stringArg: {
      index: 0,
      values: ["OES_draw_buffers_indexed"],
    },
    viaCall: {
      prop: "getSupportedExtensions",
    },
  },
];
export default descriptors as any as ReadonlyArray<Descriptor>;
